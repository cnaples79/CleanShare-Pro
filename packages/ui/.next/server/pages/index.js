/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction App({\n  Component,\n  pageProps\n}) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    // Initialize any global app state here\n    console.log('CleanShare Pro UI initialized');\n  }, []);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {\n    ...pageProps\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ2lDO0FBQ0g7QUFBQTtBQUVmLFNBQVNHLEdBQUdBLENBQUM7RUFBRUMsU0FBUztFQUFFQztBQUFvQixDQUFDLEVBQUU7RUFDOURMLGdEQUFTLENBQUMsTUFBTTtJQUNkO0lBQ0FNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLCtCQUErQixDQUFDO0VBQzlDLENBQUMsRUFBRSxFQUFFLENBQUM7RUFFTixvQkFBT0wsc0RBQUEsQ0FBQ0UsU0FBUztJQUFBLEdBQUtDO0VBQVMsQ0FBRyxDQUFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNsZWFuc2hhcmUvdWkvLi9wYWdlcy9fYXBwLnRzeD8yZmJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCdcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gSW5pdGlhbGl6ZSBhbnkgZ2xvYmFsIGFwcCBzdGF0ZSBoZXJlXG4gICAgY29uc29sZS5sb2coJ0NsZWFuU2hhcmUgUHJvIFVJIGluaXRpYWxpemVkJyk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxufSJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJqc3giLCJfanN4IiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CleanSharePro)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__]);\n_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// CleanShare Pro - Modern UI Implementation\n\n\n\nfunction CleanSharePro() {\n  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [fileStates, setFileStates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [currentFileIndex, setCurrentFileIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [presets, setPresets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [presetId, setPresetId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [proUnlocked, setProUnlocked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showPresetEditor, setShowPresetEditor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n\n  // Load presets on mount\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const ps = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.listPresets)();\n    setPresets(ps);\n    if (ps.length > 0) {\n      setPresetId(ps[0].id);\n    }\n  }, []);\n\n  // Process files when they change\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (files.length === 0) return;\n    async function processFiles() {\n      setLoading(true);\n      const newStates = [];\n      for (const file of files) {\n        try {\n          const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.analyzeDocument)(file, {\n            presetId\n          });\n          const selected = {};\n          const actions = {};\n          result.detections.forEach(det => {\n            selected[det.id] = true;\n            actions[det.id] = {\n              style: 'BOX'\n            };\n          });\n          newStates.push({\n            file,\n            detections: result.detections,\n            selected,\n            actions,\n            pages: result.pages || 1,\n            pageImages: [],\n            currentPage: 0,\n            processing: false\n          });\n        } catch (error) {\n          console.error('Failed to process file:', file.name, error);\n          // Add the file with error state\n          newStates.push({\n            file,\n            detections: [],\n            selected: {},\n            actions: {},\n            pages: 1,\n            pageImages: [],\n            currentPage: 0,\n            processing: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n        }\n      }\n      setFileStates(newStates);\n      setLoading(false);\n    }\n    processFiles();\n  }, [files, presetId]);\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files || []);\n    setFiles(selectedFiles);\n    setCurrentFileIndex(0);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    setFiles(droppedFiles);\n    setCurrentFileIndex(0);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleSanitize = async fileIndex => {\n    const fileState = fileStates[fileIndex];\n    if (!fileState) return;\n\n    // Update processing state\n    setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n      ...state,\n      processing: true\n    } : state));\n    try {\n      // Re-analyze the file to ensure lastResult is set correctly  \n      await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.analyzeDocument)(fileState.file, {\n        presetId\n      });\n      const redactionActions = fileState.detections.filter(det => fileState.selected[det.id]).map(det => ({\n        detectionId: det.id,\n        style: fileState.actions[det.id]?.style || 'BOX',\n        labelText: fileState.actions[det.id]?.labelText\n      }));\n      const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.applyRedactions)(fileState.file, redactionActions, {\n        style: 'BOX'\n      }, fileState.detections);\n\n      // Convert data URI to blob for download\n      const response = await fetch(result.fileUri);\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n\n      // Update file state with result\n      setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n        ...state,\n        outputUri: url,\n        previewUri: result.fileUri,\n        processing: false\n      } : state));\n    } catch (error) {\n      console.error('Sanitization failed:', error);\n      // Show error to user\n      alert(`Sanitization failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n        ...state,\n        processing: false\n      } : state));\n    }\n  };\n  const handleDownload = fileIndex => {\n    const fileState = fileStates[fileIndex];\n    if (!fileState?.outputUri) return;\n    const link = document.createElement('a');\n    link.href = fileState.outputUri;\n    link.download = `sanitized_${fileState.file.name}`;\n    link.click();\n  };\n  const currentFileState = fileStates[currentFileIndex];\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n          href: \"#\",\n          className: \"logo\",\n          children: \"CleanShare Pro\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 'var(--space-md)'\n          },\n          children: [presets.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"select\", {\n            value: presetId,\n            onChange: e => setPresetId(e.target.value),\n            className: \"form-select\",\n            style: {\n              minWidth: '150px'\n            },\n            children: presets.map(p => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n              value: p.id,\n              children: p.name\n            }, p.id))\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n            onClick: () => setProUnlocked(!proUnlocked),\n            className: `btn ${proUnlocked ? 'btn-secondary' : 'btn-outline'} btn-sm`,\n            children: proUnlocked ? '✓ Pro Unlocked' : '🔓 Unlock Pro'\n          }), proUnlocked && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n            onClick: () => setShowPresetEditor(true),\n            className: \"btn btn-primary btn-sm\",\n            children: \"Manage Presets\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card\",\n        style: {\n          marginBottom: 'var(--space-xl)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h2\", {\n            className: \"card-title\",\n            children: \"Upload Files\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n            className: \"card-subtitle\",\n            children: \"Select images or PDF documents to sanitize\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"file-upload-zone\",\n            onDrop: handleDrop,\n            onDragOver: handleDragOver,\n            onDragLeave: handleDragLeave,\n            onClick: () => document.getElementById('file-input')?.click(),\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"file-upload-icon\",\n              children: \"\\uD83D\\uDCC4\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"file-upload-text\",\n              children: \"Drop files here or click to browse\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"file-upload-subtext\",\n              children: \"Supports JPG, PNG, PDF files up to 10MB each\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              id: \"file-input\",\n              type: \"file\",\n              accept: \"image/*,application/pdf\",\n              multiple: true,\n              onChange: handleFileChange,\n              style: {\n                display: 'none'\n              }\n            })]\n          }), loading && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"loading-text\",\n            style: {\n              marginTop: 'var(--space-md)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"loading-spinner\"\n            }), \"Processing files...\"]\n          })]\n        })]\n      }), fileStates.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 'var(--space-xl)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          className: \"sidebar\",\n          style: {\n            minWidth: '250px'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"h3\", {\n            className: \"sidebar-title\",\n            children: [\"Files (\", fileStates.length, \")\"]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-sm)'\n            },\n            children: fileStates.map((state, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              onClick: () => setCurrentFileIndex(index),\n              style: {\n                padding: 'var(--space-md)',\n                border: `2px solid ${index === currentFileIndex ? 'var(--color-primary)' : 'var(--border-light)'}`,\n                borderRadius: 'var(--radius-md)',\n                cursor: 'pointer',\n                background: index === currentFileIndex ? 'var(--bg-secondary)' : 'var(--bg-primary)',\n                transition: 'all var(--transition-fast)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  fontWeight: '600',\n                  fontSize: 'var(--font-size-sm)',\n                  marginBottom: 'var(--space-xs)'\n                },\n                children: state.file.name\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-xs)',\n                  color: state.error ? 'var(--color-error)' : 'var(--text-secondary)'\n                },\n                children: state.error ? `Error: ${state.error}` : `${state.detections.length} detections found`\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                style: {\n                  marginTop: 'var(--space-sm)',\n                  display: 'flex',\n                  gap: 'var(--space-xs)'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleSanitize(index);\n                  },\n                  className: \"btn btn-primary btn-sm\",\n                  disabled: state.processing || !!state.error,\n                  style: {\n                    flex: 1\n                  },\n                  children: state.processing ? 'Processing...' : 'Sanitize'\n                }), state.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDownload(index);\n                  },\n                  className: \"btn btn-secondary btn-sm\",\n                  children: \"Download\"\n                })]\n              })]\n            }, index))\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: currentFileState && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h3\", {\n                className: \"card-title\",\n                children: currentFileState.file.name\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n                className: \"card-subtitle\",\n                children: currentFileState.error ? 'Processing failed' : `Found ${currentFileState.detections.length} sensitive items`\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-body\",\n              children: currentFileState.error ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                className: \"alert alert-error\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n                    children: \"Processing Error\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"p\", {\n                    style: {\n                      margin: '0',\n                      marginTop: 'var(--space-xs)'\n                    },\n                    children: [\"Failed to analyze this file: \", currentFileState.error]\n                  })]\n                })\n              }) : currentFileState.detections.length > 0 ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                  style: {\n                    marginBottom: 'var(--space-md)',\n                    fontSize: 'var(--font-size-lg)'\n                  },\n                  children: \"Detected Sensitive Information\"\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 'var(--space-sm)'\n                  },\n                  children: currentFileState.detections.map(detection => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    style: {\n                      padding: 'var(--space-md)',\n                      border: '1px solid var(--border-light)',\n                      borderRadius: 'var(--radius-md)',\n                      background: 'var(--bg-secondary)',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 'var(--space-md)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n                        type: \"checkbox\",\n                        checked: currentFileState.selected[detection.id] || false,\n                        onChange: e => {\n                          setFileStates(prev => prev.map((state, i) => i === currentFileIndex ? {\n                            ...state,\n                            selected: {\n                              ...state.selected,\n                              [detection.id]: e.target.checked\n                            }\n                          } : state));\n                        }\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                          style: {\n                            fontWeight: '600',\n                            fontSize: 'var(--font-size-sm)'\n                          },\n                          children: [detection.kind, \": \", detection.preview || 'N/A']\n                        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                          style: {\n                            fontSize: 'var(--font-size-xs)',\n                            color: 'var(--text-secondary)'\n                          },\n                          children: [\"Confidence: \", Math.round(detection.confidence * 100), \"%\"]\n                        })]\n                      })]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"select\", {\n                      value: currentFileState.actions[detection.id]?.style || 'BOX',\n                      onChange: e => {\n                        setFileStates(prev => prev.map((state, i) => i === currentFileIndex ? {\n                          ...state,\n                          actions: {\n                            ...state.actions,\n                            [detection.id]: {\n                              ...state.actions[detection.id],\n                              style: e.target.value\n                            }\n                          }\n                        } : state));\n                      },\n                      className: \"form-select\",\n                      style: {\n                        minWidth: '120px'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n                        value: \"BOX\",\n                        children: \"Black Box\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n                        value: \"BLUR\",\n                        children: \"Blur\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n                        value: \"PIXELATE\",\n                        children: \"Pixelate\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n                        value: \"LABEL\",\n                        children: \"Label\"\n                      })]\n                    })]\n                  }, detection.id))\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  className: \"card-footer\",\n                  style: {\n                    marginTop: 'var(--space-xl)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                    onClick: () => handleSanitize(currentFileIndex),\n                    className: \"btn btn-primary btn-lg\",\n                    disabled: currentFileState.processing,\n                    children: currentFileState.processing ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                        className: \"loading-spinner\",\n                        style: {\n                          width: '1rem',\n                          height: '1rem'\n                        }\n                      }), \"Processing...\"]\n                    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                      children: \"\\uD83D\\uDD12 Sanitize Document\"\n                    })\n                  }), currentFileState.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                    onClick: () => handleDownload(currentFileIndex),\n                    className: \"btn btn-secondary btn-lg\",\n                    children: \"\\uD83D\\uDCE5 Download Clean File\"\n                  })]\n                }), currentFileState.previewUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  style: {\n                    marginTop: 'var(--space-xl)',\n                    padding: 'var(--space-lg)',\n                    background: 'var(--bg-secondary)',\n                    borderRadius: 'var(--radius-md)',\n                    border: '1px solid var(--border-light)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                    style: {\n                      marginBottom: 'var(--space-md)',\n                      fontSize: 'var(--font-size-lg)',\n                      color: 'var(--color-primary)'\n                    },\n                    children: \"\\uD83D\\uDD12 Sanitized Preview\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      padding: 'var(--space-md)',\n                      background: 'var(--bg-primary)',\n                      borderRadius: 'var(--radius-md)',\n                      border: '1px solid var(--border-light)'\n                    },\n                    children: currentFileState.file.type.startsWith('image/') ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"img\", {\n                      src: currentFileState.previewUri,\n                      alt: \"Sanitized preview\",\n                      style: {\n                        maxWidth: '100%',\n                        maxHeight: '400px',\n                        borderRadius: 'var(--radius-sm)',\n                        boxShadow: 'var(--shadow-md)'\n                      }\n                    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        textAlign: 'center',\n                        padding: 'var(--space-xl)',\n                        color: 'var(--text-secondary)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                        style: {\n                          fontSize: 'var(--font-size-3xl)',\n                          marginBottom: 'var(--space-md)'\n                        },\n                        children: \"\\uD83D\\uDCC4\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n                        children: \"PDF sanitized successfully\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n                        style: {\n                          fontSize: 'var(--font-size-sm)'\n                        },\n                        children: \"Click download to save the clean file\"\n                      })]\n                    })\n                  })]\n                })]\n              }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                className: \"alert alert-success\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n                    children: \"No sensitive information detected!\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n                    style: {\n                      margin: '0',\n                      marginTop: 'var(--space-xs)'\n                    },\n                    children: \"This document appears to be clean and safe to share.\"\n                  })]\n                })\n              })\n            })]\n          })\n        })]\n      }), showPresetEditor && proUnlocked && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'rgba(0, 0, 0, 0.5)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          className: \"card\",\n          style: {\n            minWidth: '500px',\n            maxWidth: '90vw',\n            maxHeight: '90vh',\n            overflow: 'auto'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h3\", {\n              className: \"card-title\",\n              children: \"Manage Presets\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              className: \"card-subtitle\",\n              children: \"Create and manage detection presets\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"alert alert-info\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n                children: \"Pro Feature\"\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n                style: {\n                  margin: 0,\n                  marginTop: 'var(--space-xs)'\n                },\n                children: \"Preset management is available in the Pro version.\"\n              })]\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n              onClick: () => setShowPresetEditor(false),\n              className: \"btn btn-ghost\",\n              children: \"Close\"\n            })\n          })]\n        })\n      })]\n    })]\n  });\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages/module.compiled */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n/* harmony import */ var _pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/index.tsx */ \"./pages/index.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__]);\n_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"default\"));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getStaticProps\");\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getStaticPaths\");\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getServerSideProps\");\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"config\");\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"reportWebVitals\");\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticProps\");\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticPaths\");\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticParams\");\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerProps\");\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerSideProps\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/index\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    components: {\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default())\n    },\n    userland: _pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMS4wX0BiYWJlbCtjb3JlQDcuMjguM19yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMF9fcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVMmcGFnZT0lMkYmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmluZGV4LnRzeCZhYnNvbHV0ZUFwcFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCZhYnNvbHV0ZURvY3VtZW50UGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfZG9jdW1lbnQmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ2hDO0FBQ0w7QUFDMUQ7QUFDb0Q7QUFDVjtBQUMxQztBQUM4QztBQUM5QztBQUNBLGlFQUFlLHdFQUFLLENBQUMsNkNBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sdUJBQXVCLHdFQUFLLENBQUMsNkNBQVE7QUFDckMsdUJBQXVCLHdFQUFLLENBQUMsNkNBQVE7QUFDckMsMkJBQTJCLHdFQUFLLENBQUMsNkNBQVE7QUFDekMsZUFBZSx3RUFBSyxDQUFDLDZDQUFRO0FBQzdCLHdCQUF3Qix3RUFBSyxDQUFDLDZDQUFRO0FBQzdDO0FBQ08sZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsaUNBQWlDLHdFQUFLLENBQUMsNkNBQVE7QUFDL0MsZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsb0NBQW9DLHdFQUFLLENBQUMsNkNBQVE7QUFDekQ7QUFDTyx3QkFBd0IseUdBQWdCO0FBQy9DO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsV0FBVztBQUNYLGdCQUFnQjtBQUNoQixLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQsaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8/NGQxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc1JvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIGFwcCBhbmQgZG9jdW1lbnQgbW9kdWxlcy5cbmltcG9ydCBEb2N1bWVudCBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19kb2N1bWVudFwiO1xuaW1wb3J0IEFwcCBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2luZGV4LnRzeFwiO1xuLy8gUmUtZXhwb3J0IHRoZSBjb21wb25lbnQgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBtZXRob2RzLlxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U3RhdGljUHJvcHNcIik7XG5leHBvcnQgY29uc3QgZ2V0U3RhdGljUGF0aHMgPSBob2lzdCh1c2VybGFuZCwgXCJnZXRTdGF0aWNQYXRoc1wiKTtcbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgXCJnZXRTZXJ2ZXJTaWRlUHJvcHNcIik7XG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuZXhwb3J0IGNvbnN0IHJlcG9ydFdlYlZpdGFscyA9IGhvaXN0KHVzZXJsYW5kLCBcInJlcG9ydFdlYlZpdGFsc1wiKTtcbi8vIFJlLWV4cG9ydCBsZWdhY3kgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1Byb3BzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U3RhdGljUGF0aHNcIik7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U3RhdGljUGFyYW1zID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U3RhdGljUGFyYW1zXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U2VydmVyUHJvcHNcIik7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVMsXG4gICAgICAgIHBhZ2U6IFwiL2luZGV4XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgY29tcG9uZW50czoge1xuICAgICAgICBBcHAsXG4gICAgICAgIERvY3VtZW50XG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "../core-detect/dist/detectors/index.js":
/*!**********************************************!*\
  !*** ../core-detect/dist/detectors/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateConfidence: () => (/* binding */ calculateConfidence),\n/* harmony export */   detectCustomPatterns: () => (/* binding */ detectCustomPatterns),\n/* harmony export */   detectToken: () => (/* binding */ detectToken),\n/* harmony export */   detectTokenWithCustomPatterns: () => (/* binding */ detectTokenWithCustomPatterns),\n/* harmony export */   isAWSKey: () => (/* binding */ isAWSKey),\n/* harmony export */   isAddressComponent: () => (/* binding */ isAddressComponent),\n/* harmony export */   isJWT: () => (/* binding */ isJWT),\n/* harmony export */   isLuhnValid: () => (/* binding */ isLuhnValid),\n/* harmony export */   isValidIBAN: () => (/* binding */ isValidIBAN),\n/* harmony export */   isValidSSN: () => (/* binding */ isValidSSN),\n/* harmony export */   isValidUSPassport: () => (/* binding */ isValidUSPassport)\n/* harmony export */ });\n/**\n * Determine whether a string of digits represents a valid PAN according\n * to the Luhn checksum algorithm.  Only digits are considered; all\n * non‑numeric characters should be stripped before calling this function.\n */\nfunction isLuhnValid(value) {\n    let sum = 0;\n    let shouldDouble = false;\n    for (let i = value.length - 1; i >= 0; i--) {\n        const c = value.charCodeAt(i) - 48;\n        if (c < 0 || c > 9) {\n            return false;\n        }\n        let digit = c;\n        if (shouldDouble) {\n            digit *= 2;\n            if (digit > 9)\n                digit -= 9;\n        }\n        sum += digit;\n        shouldDouble = !shouldDouble;\n    }\n    return sum % 10 === 0;\n}\n/**\n * Validate an International Bank Account Number (IBAN) using the MOD 97\n * algorithm defined in ISO 13616.  Letters are mapped A=10, B=11, …\n * The function returns true when the IBAN appears structurally valid.  It\n * does not verify that the account exists.\n */\nfunction isValidIBAN(iban) {\n    const cleaned = iban.replace(/\\s+/g, '').toUpperCase();\n    // Basic length check: IBANs are between 15 and 34 characters long\n    if (cleaned.length < 15 || cleaned.length > 34)\n        return false;\n    // Move the four initial characters to the end of the string\n    const rearranged = cleaned.slice(4) + cleaned.slice(0, 4);\n    // Replace letters with numbers: A=10, B=11, …\n    let numeric = '';\n    for (const ch of rearranged) {\n        const code = ch.charCodeAt(0);\n        if (code >= 48 && code <= 57) {\n            numeric += ch;\n        }\n        else if (code >= 65 && code <= 90) {\n            numeric += (code - 55).toString();\n        }\n        else {\n            return false;\n        }\n    }\n    // Compute the remainder using mod 97\n    let remainder = 0;\n    for (let i = 0; i < numeric.length; i++) {\n        remainder = (remainder * 10 + Number(numeric[i])) % 97;\n    }\n    return remainder === 1;\n}\n/**\n * Validate a US Social Security Number (SSN).  Performs basic\n * structural checks: XXX-XX-XXXX where the area number is not 000,\n * 666, or between 900–999; the group number is not 00; and the serial\n * number is not 0000.\n */\nfunction isValidSSN(value) {\n    const ssnRegex = /^(\\d{3})-(\\d{2})-(\\d{4})$/;\n    const match = ssnRegex.exec(value);\n    if (!match)\n        return false;\n    const area = parseInt(match[1], 10);\n    const group = parseInt(match[2], 10);\n    const serial = parseInt(match[3], 10);\n    if (area === 0 || group === 0 || serial === 0)\n        return false;\n    if (area === 666 || area >= 900)\n        return false;\n    return true;\n}\n/**\n * Validate US passport number format. US passports are typically 9 digits\n * or 1 letter followed by 8 digits (newer format).\n */\nfunction isValidUSPassport(value) {\n    const cleaned = value.replace(/\\s+/g, '');\n    // Format 1: 9 digits (older format)\n    if (/^\\d{9}$/.test(cleaned))\n        return true;\n    // Format 2: 1 letter + 8 digits (newer format) \n    if (/^[A-Z]\\d{8}$/.test(cleaned))\n        return true;\n    return false;\n}\n/**\n * Enhanced address detection with common address components\n */\nfunction isAddressComponent(value) {\n    const token = value.trim();\n    // Street suffixes (high confidence)\n    const streetSuffixes = /^(Street|St\\.?|Avenue|Ave\\.?|Road|Rd\\.?|Lane|Ln\\.?|Boulevard|Blvd\\.?|Drive|Dr\\.?|Circle|Cir\\.?|Court|Ct\\.?|Place|Pl\\.?|Way|Parkway|Pkwy\\.?)$/i;\n    if (streetSuffixes.test(token)) {\n        return { isAddress: true, confidence: 0.95, reason: 'Street type indicator' };\n    }\n    // Directional indicators (medium confidence)\n    const directions = /^(North|N\\.?|South|S\\.?|East|E\\.?|West|W\\.?|Northeast|NE\\.?|Northwest|NW\\.?|Southeast|SE\\.?|Southwest|SW\\.?)$/i;\n    if (directions.test(token)) {\n        return { isAddress: true, confidence: 0.7, reason: 'Directional indicator' };\n    }\n    // Address with numbers (medium confidence)\n    if (/\\d/.test(token) && token.length >= 3) {\n        // House numbers, apartment numbers, ZIP codes\n        if (/^\\d{1,5}[A-Z]?$/.test(token) || /^\\d{5}(-\\d{4})?$/.test(token)) {\n            return { isAddress: true, confidence: 0.8, reason: 'House number or ZIP code pattern' };\n        }\n        if (/^#?\\d+[A-Z]?$/.test(token) || /^(Apt|Suite|Unit|Ste|#)\\s*\\d+[A-Z]?$/i.test(token)) {\n            return { isAddress: true, confidence: 0.85, reason: 'Apartment/suite number' };\n        }\n        // Generic number in address context\n        return { isAddress: true, confidence: 0.6, reason: 'Contains digits and could be part of address' };\n    }\n    // State abbreviations (high confidence)\n    const stateAbbrev = /^(AL|AK|AZ|AR|CA|CO|CT|DE|FL|GA|HI|ID|IL|IN|IA|KS|KY|LA|ME|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|OH|OK|OR|PA|RI|SC|SD|TN|TX|UT|VT|VA|WA|WV|WI|WY|DC)$/;\n    if (stateAbbrev.test(token.toUpperCase())) {\n        return { isAddress: true, confidence: 0.9, reason: 'US state abbreviation' };\n    }\n    return { isAddress: false, confidence: 0, reason: '' };\n}\n/**\n * Calculate confidence score for detection based on pattern strength and context\n */\nfunction calculateConfidence(kind, token, ocrConfidence = 0.9) {\n    const base = Math.min(ocrConfidence, 0.95); // Cap OCR confidence\n    switch (kind) {\n        case 'EMAIL':\n            // Higher confidence for well-formed emails\n            return token.includes('@') && token.includes('.') ? Math.min(base + 0.05, 1.0) : base * 0.8;\n        case 'PHONE':\n            const digits = token.replace(/\\D/g, '');\n            // Higher confidence for standard formats\n            if (digits.length === 10 || digits.length === 11)\n                return Math.min(base + 0.1, 1.0);\n            if (digits.length >= 7 && digits.length <= 15)\n                return base * 0.9;\n            return base * 0.7;\n        case 'PAN':\n            // Credit cards with Luhn validation get high confidence\n            return Math.min(base + 0.1, 1.0);\n        case 'SSN':\n            // SSN with proper validation gets high confidence\n            return Math.min(base + 0.15, 1.0);\n        case 'PASSPORT':\n            // Passport numbers get medium-high confidence\n            return Math.min(base + 0.05, 1.0);\n        case 'IBAN':\n            // IBAN with MOD 97 validation gets high confidence\n            return Math.min(base + 0.1, 1.0);\n        case 'ADDRESS':\n            // Address confidence varies by component type - handled in isAddressComponent\n            return base;\n        case 'NAME':\n            // Names are tricky - lower confidence to reduce false positives\n            return base * 0.7;\n        case 'BARCODE':\n            // QR codes/barcodes are typically very reliable\n            return 1.0;\n        case 'JWT':\n            // JWT format is distinctive\n            return Math.min(base + 0.05, 1.0);\n        case 'API_KEY':\n            // API keys have distinctive patterns\n            return Math.min(base + 0.1, 1.0);\n        default:\n            return base;\n    }\n}\n/** Detect whether a token is formatted like a JSON Web Token (JWT). */\nfunction isJWT(value) {\n    return /^[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]+$/.test(value.trim());\n}\n/** Detect whether a token looks like an AWS access key ID.  AWS keys\n * typically start with AKIA or ASIA followed by 16 uppercase letters or\n * digits. */\nfunction isAWSKey(value) {\n    return /^(A(KIA|SIA)[A-Z0-9]{16})$/.test(value.trim());\n}\n/**\n * Perform high‑level detection for a single token.  If the token matches\n * a sensitive pattern, this function returns an object describing the\n * detection; otherwise it returns null.  Note that this function does\n * not compute bounding boxes – it only classifies the token.  Bounding\n * boxes are provided by the OCR engine.\n */\nfunction detectToken(token) {\n    const raw = token.trim();\n    if (!raw)\n        return null;\n    // PAN (credit card number) – 13–19 digits with Luhn valid (check first to avoid phone conflicts)\n    const digitsOnly = raw.replace(/\\D/g, '');\n    if (digitsOnly.length >= 13 && digitsOnly.length <= 19 && isLuhnValid(digitsOnly)) {\n        return { kind: 'PAN', reason: 'Luhn valid primary account number', confidence: 0.95 };\n    }\n    // IBAN (starts with two letters followed by digits and letters)\n    const ibanPattern = /^[A-Z]{2}[0-9A-Z]{13,32}$/i;\n    if (ibanPattern.test(raw) && isValidIBAN(raw)) {\n        return { kind: 'IBAN', reason: 'Valid IBAN checksum', confidence: 0.95 };\n    }\n    // SSN (US format) - check before general phone patterns, including invalid ones\n    const ssnPattern = /^\\d{3}-\\d{2}-\\d{4}$/;\n    if (ssnPattern.test(raw)) {\n        if (isValidSSN(raw)) {\n            return { kind: 'SSN', reason: 'Valid US SSN format', confidence: 0.95 };\n        }\n        // Don't detect invalid SSNs as other types\n        return null;\n    }\n    // Passport number (US format)\n    const passportPattern = /^[A-Z]?\\d{8,9}$/i;\n    if (passportPattern.test(raw) && isValidUSPassport(raw.toUpperCase())) {\n        return { kind: 'PASSPORT', reason: 'Valid US passport number format', confidence: 0.9 };\n    }\n    // JWT - check early to prevent JWT being detected as address (contains many digits)\n    if (isJWT(raw) && raw.length > 50) {\n        return { kind: 'JWT', reason: 'Looks like a JWT token', confidence: 0.9 };\n    }\n    // Email - more strict pattern to reduce false positives\n    const emailPattern = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    if (emailPattern.test(raw) && raw.includes('@') && raw.includes('.')) {\n        return { kind: 'EMAIL', reason: 'Matches email pattern', confidence: 0.9 };\n    }\n    // Phone number - enhanced detection with format validation\n    if (digitsOnly.length >= 7 && /\\d{3,}/.test(digitsOnly)) {\n        // North American format (10-11 digits)\n        if (digitsOnly.length === 10 || (digitsOnly.length === 11 && digitsOnly[0] === '1')) {\n            return { kind: 'PHONE', reason: 'North American phone format', confidence: 0.85 };\n        }\n        // International format (7-15 digits)\n        if (digitsOnly.length >= 7 && digitsOnly.length <= 15) {\n            return { kind: 'PHONE', reason: 'International phone format', confidence: 0.75 };\n        }\n    }\n    // Enhanced address detection\n    const addressResult = isAddressComponent(raw);\n    if (addressResult.isAddress) {\n        return { kind: 'ADDRESS', reason: addressResult.reason, confidence: addressResult.confidence };\n    }\n    // AWS access key id\n    if (isAWSKey(raw)) {\n        return { kind: 'API_KEY', reason: 'Looks like an AWS access key', confidence: 0.95 };\n    }\n    // Names (proper nouns) - enhanced with false positive reduction\n    const namePattern = /^[A-Z][a-z]{2,}$/;\n    if (namePattern.test(raw) && !/\\d/.test(raw) && raw.toUpperCase() !== raw) {\n        // Exclude common words that aren't names\n        const commonWords = /^(The|And|But|For|Are|This|That|With|Have|Will|From|They|Know|Want|Been|Good|Much|Some|Time|Very|When|Come|Here|Just|Like|Long|Make|Many|Over|Such|Take|Than|Them|Well|Were|What|Your|After|Before|Could|First|Found|Great|Other|Right|Should|These|Where|Which|While|Would|Years|Young|About|Again|Place|State|Still|Think|Three|Through|Under|Water|Write)$/i;\n        if (!commonWords.test(raw)) {\n            return { kind: 'NAME', reason: 'Likely proper name', confidence: 0.6 };\n        }\n    }\n    return null;\n}\n/**\n * Apply custom detection patterns to a token\n */\nfunction detectCustomPatterns(token, customPatterns) {\n    if (!customPatterns || customPatterns.length === 0)\n        return null;\n    for (const pattern of customPatterns) {\n        try {\n            const flags = pattern.caseSensitive === false ? 'i' : '';\n            const regex = new RegExp(pattern.pattern, flags);\n            if (regex.test(token)) {\n                return {\n                    kind: pattern.kind,\n                    reason: `Custom pattern: ${pattern.name}`,\n                    confidence: pattern.confidence\n                };\n            }\n        }\n        catch (error) {\n            // Skip invalid regex patterns\n            console.warn(`Invalid custom pattern ${pattern.id}: ${error}`);\n            continue;\n        }\n    }\n    return null;\n}\n/**\n * Enhanced detectToken that includes custom pattern support\n */\nfunction detectTokenWithCustomPatterns(token, customPatterns) {\n    // First check custom patterns (they take precedence)\n    if (customPatterns && customPatterns.length > 0) {\n        const customResult = detectCustomPatterns(token, customPatterns);\n        if (customResult)\n            return customResult;\n    }\n    // Fall back to standard detection\n    return detectToken(token);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/detectors/index.js\n");

/***/ }),

/***/ "../core-detect/dist/index.js":
/*!************************************!*\
  !*** ../core-detect/dist/index.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* reexport safe */ _pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__.analyzeDocument),\n/* harmony export */   applyRedactions: () => (/* reexport safe */ _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__.applyRedactions),\n/* harmony export */   deletePreset: () => (/* reexport safe */ _presets__WEBPACK_IMPORTED_MODULE_3__.deletePreset),\n/* harmony export */   getPreset: () => (/* reexport safe */ _presets__WEBPACK_IMPORTED_MODULE_3__.getPreset),\n/* harmony export */   listPresets: () => (/* reexport safe */ _presets__WEBPACK_IMPORTED_MODULE_3__.listPresets),\n/* harmony export */   savePreset: () => (/* reexport safe */ _presets__WEBPACK_IMPORTED_MODULE_3__.savePreset)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"../core-detect/dist/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"analyzeDocument\",\"applyRedactions\",\"listPresets\",\"getPreset\",\"savePreset\",\"deletePreset\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline/analyze */ \"../core-detect/dist/pipeline/analyze.js\");\n/* harmony import */ var _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pipeline/apply */ \"../core-detect/dist/pipeline/apply.js\");\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./presets */ \"../core-detect/dist/presets.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__, _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__]);\n([_pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__, _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS1kZXRlY3QvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdCO0FBQzZCO0FBQ0Y7QUFDMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8uLi9jb3JlLWRldGVjdC9kaXN0L2luZGV4LmpzPzVlY2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi90eXBlcyc7XG5leHBvcnQgeyBhbmFseXplRG9jdW1lbnQgfSBmcm9tICcuL3BpcGVsaW5lL2FuYWx5emUnO1xuZXhwb3J0IHsgYXBwbHlSZWRhY3Rpb25zIH0gZnJvbSAnLi9waXBlbGluZS9hcHBseSc7XG5leHBvcnQgeyBsaXN0UHJlc2V0cywgZ2V0UHJlc2V0LCBzYXZlUHJlc2V0LCBkZWxldGVQcmVzZXQgfSBmcm9tICcuL3ByZXNldHMnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core-detect/dist/index.js\n");

/***/ }),

/***/ "../core-detect/dist/pipeline/analyze.js":
/*!***********************************************!*\
  !*** ../core-detect/dist/pipeline/analyze.js ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* binding */ analyzeDocument)\n/* harmony export */ });\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../detectors */ \"../core-detect/dist/detectors/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tesseract.js */ \"../../node_modules/.pnpm/tesseract.js@4.1.4/node_modules/tesseract.js/src/index.js\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tesseract_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdfjs-dist */ \"pdfjs-dist\");\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var jsqr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jsqr */ \"jsqr\");\n/* harmony import */ var jsqr__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jsqr__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../presets */ \"../core-detect/dist/presets.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([uuid__WEBPACK_IMPORTED_MODULE_0__]);\nuuid__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Barcode detection library.  jsQR is a small library that can scan QR codes\n// and linear barcodes from image pixel data.  It returns the location of the\n// detected code if one is found.  See https://github.com/cozmo/jsQR for details.\n\n// Import preset utilities to allow filtering detections based on enabled kinds\n\n/*\n * The analyse pipeline orchestrates OCR and token detection for both images\n * and PDFs.  It uses native OCR when available (via Capacitor plugins) and\n * falls back to Tesseract.js running in the browser or a web worker.  PDF\n * pages are rendered to canvases via pdfjs-dist, then treated like images.\n */\n/** Convert a File/Blob to a Data URI. */\nasync function fileToDataURL(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(file);\n    });\n}\n/** Perform OCR on a data URL and return detections. */\nasync function analyzeImageDataURL(dataURL, pageIndex = 0, opts = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    // Optionally perform a simple document auto‑crop before running OCR.  Many\n    // scanned documents contain large white margins.  Cropping to the\n    // bounding rectangle of non‑white pixels improves OCR accuracy and\n    // reduces processing time.  We detect the smallest rectangle that\n    // contains all pixels whose brightness is below a threshold.  If the\n    // resulting crop covers almost the entire image (>95%), we skip the\n    // crop to avoid losing content.  This heuristic is cheap to compute\n    // and does not require external dependencies.  See docs/ROADMAP.md.\n    async function autoCrop(dataUrl) {\n        return new Promise(resolve => {\n            const img = new Image();\n            img.onload = () => {\n                const canvas = document.createElement('canvas');\n                canvas.width = img.width;\n                canvas.height = img.height;\n                const ctx = canvas.getContext('2d');\n                if (!ctx) {\n                    resolve(dataUrl);\n                    return;\n                }\n                ctx.drawImage(img, 0, 0);\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                const data = imageData.data;\n                let minX = canvas.width;\n                let maxX = 0;\n                let minY = canvas.height;\n                let maxY = 0;\n                // Threshold to consider a pixel as background (very light)\n                const isBg = (r, g, b) => r > 230 && g > 230 && b > 230;\n                for (let y = 0; y < canvas.height; y++) {\n                    for (let x = 0; x < canvas.width; x++) {\n                        const idx = (y * canvas.width + x) * 4;\n                        const r = data[idx];\n                        const g = data[idx + 1];\n                        const b = data[idx + 2];\n                        if (!isBg(r, g, b)) {\n                            if (x < minX)\n                                minX = x;\n                            if (x > maxX)\n                                maxX = x;\n                            if (y < minY)\n                                minY = y;\n                            if (y > maxY)\n                                maxY = y;\n                        }\n                    }\n                }\n                // If no foreground found, return original\n                if (minX > maxX || minY > maxY) {\n                    resolve(dataUrl);\n                    return;\n                }\n                // Compute bounds width/height\n                const bw = maxX - minX;\n                const bh = maxY - minY;\n                // If crop covers almost entire image, skip cropping\n                if (bw / canvas.width > 0.95 && bh / canvas.height > 0.95) {\n                    resolve(dataUrl);\n                    return;\n                }\n                // Expand crop by 5% margins to avoid cutting content\n                const marginX = Math.floor(bw * 0.05);\n                const marginY = Math.floor(bh * 0.05);\n                const cropX = Math.max(0, minX - marginX);\n                const cropY = Math.max(0, minY - marginY);\n                const cropW = Math.min(canvas.width - cropX, bw + marginX * 2);\n                const cropH = Math.min(canvas.height - cropY, bh + marginY * 2);\n                const croppedCanvas = document.createElement('canvas');\n                croppedCanvas.width = cropW;\n                croppedCanvas.height = cropH;\n                const cctx = croppedCanvas.getContext('2d');\n                if (!cctx) {\n                    resolve(dataUrl);\n                    return;\n                }\n                cctx.drawImage(canvas, cropX, cropY, cropW, cropH, 0, 0, cropW, cropH);\n                resolve(croppedCanvas.toDataURL());\n            };\n            img.onerror = () => resolve(dataUrl);\n            img.src = dataUrl;\n        });\n    }\n    // Run Tesseract on the original Data URL.  Cropping is disabled by\n    // default because adjusting bounding boxes back to the original\n    // coordinates is non‑trivial.  To experiment with auto‑crop, call\n    // autoCrop() on dataURL and adjust bounding boxes accordingly.\n    const result = await tesseract_js__WEBPACK_IMPORTED_MODULE_1___default().recognize(dataURL, 'eng', { logger: () => { } });\n    const { words } = result.data;\n    const detections = [];\n    // Determine image dimensions\n    const img = new Image();\n    await new Promise(resolve => {\n        img.onload = resolve;\n        img.src = dataURL;\n    });\n    const width = img.width;\n    const height = img.height;\n    for (const word of words) {\n        const text = (word.text || '').trim();\n        if (!text)\n            continue;\n        const match = (0,_detectors__WEBPACK_IMPORTED_MODULE_4__.detectTokenWithCustomPatterns)(text, opts.customPatterns);\n        if (match) {\n            const { kind, reason, confidence: detectionConfidence } = match;\n            const bbox = word.bbox;\n            const x0 = (_b = (_a = bbox.x0) !== null && _a !== void 0 ? _a : bbox.left) !== null && _b !== void 0 ? _b : 0;\n            const y0 = (_d = (_c = bbox.y0) !== null && _c !== void 0 ? _c : bbox.top) !== null && _d !== void 0 ? _d : 0;\n            const x1 = (_f = (_e = bbox.x1) !== null && _e !== void 0 ? _e : bbox.right) !== null && _f !== void 0 ? _f : 0;\n            const y1 = (_h = (_g = bbox.y1) !== null && _g !== void 0 ? _g : bbox.bottom) !== null && _h !== void 0 ? _h : 0;\n            const box = {\n                x: x0 / width,\n                y: y0 / height,\n                w: (x1 - x0) / width,\n                h: (y1 - y0) / height,\n                page: pageIndex\n            };\n            // Use enhanced confidence scoring - prefer detection confidence if provided\n            const ocrConfidence = (_j = word.confidence) !== null && _j !== void 0 ? _j : 0.9;\n            const finalConfidence = detectionConfidence !== null && detectionConfidence !== void 0 ? detectionConfidence : (0,_detectors__WEBPACK_IMPORTED_MODULE_4__.calculateConfidence)(kind, text, ocrConfidence);\n            // Apply confidence threshold filter\n            if (opts.confidenceThreshold && finalConfidence < opts.confidenceThreshold) {\n                continue;\n            }\n            detections.push({\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)(),\n                kind: kind,\n                box,\n                confidence: finalConfidence,\n                reason,\n                preview: text\n            });\n        }\n    }\n    // Barcode detection using jsQR.  Draw the image onto a temporary canvas\n    // and scan its pixels.  jsQR returns null if no code is found.\n    try {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.drawImage(img, 0, 0, width, height);\n            const imageData = ctx.getImageData(0, 0, width, height);\n            const code = jsqr__WEBPACK_IMPORTED_MODULE_3___default()(imageData.data, imageData.width, imageData.height);\n            if (code && code.location) {\n                // Compute bounding box from corner points\n                const { topLeftCorner, topRightCorner, bottomRightCorner, bottomLeftCorner } = code.location;\n                const xs = [topLeftCorner.x, topRightCorner.x, bottomRightCorner.x, bottomLeftCorner.x];\n                const ys = [topLeftCorner.y, topRightCorner.y, bottomRightCorner.y, bottomLeftCorner.y];\n                const minX = Math.min(...xs);\n                const maxX = Math.max(...xs);\n                const minY = Math.min(...ys);\n                const maxY = Math.max(...ys);\n                const bbox = {\n                    x: minX / width,\n                    y: minY / height,\n                    w: (maxX - minX) / width,\n                    h: (maxY - minY) / height,\n                    page: pageIndex\n                };\n                detections.push({\n                    id: (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)(),\n                    kind: 'BARCODE',\n                    box: bbox,\n                    confidence: 1,\n                    reason: 'Detected barcode/QR code',\n                    preview: (_k = code.data) === null || _k === void 0 ? void 0 : _k.slice(0, 64) // show truncated payload\n                });\n            }\n        }\n    }\n    catch (err) {\n        // eslint-disable-next-line no-console\n        console.warn('Barcode detection failed:', err);\n    }\n    return detections;\n}\n/** Analyse a single file (image or PDF) and return detections across all pages. */\n// Import preset utilities at the top level\nasync function analyzeDocument(file, opts = {}) {\n    // Determine the MIME type from the file object if possible\n    const type = file.type || '';\n    const detections = [];\n    let pages = 1;\n    if (type === 'application/pdf') {\n        // Read the PDF into an ArrayBuffer\n        const buffer = await file.arrayBuffer();\n        // Configure worker for pdfjs if running in a browser\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.GlobalWorkerOptions && pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.workerSrc === undefined) {\n            // Provide a default worker if none was set.  This requires that\n            // `pdfjs-dist/build/pdf.worker.js` is available in the bundle.\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const workerSrc = __webpack_require__(/*! pdfjs-dist/build/pdf.worker.js */ \"pdfjs-dist/build/pdf.worker.js\");\n                pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.GlobalWorkerOptions.workerSrc = workerSrc;\n            }\n            catch (e) {\n                // ignore if require fails – pdfjs will attempt to fallback\n            }\n        }\n        const loadingTask = pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.getDocument({ data: buffer });\n        const pdf = await loadingTask.promise;\n        pages = pdf.numPages;\n        for (let i = 1; i <= pages; i++) {\n            const page = await pdf.getPage(i);\n            const viewport = page.getViewport({ scale: 1.0 });\n            const canvas = document.createElement('canvas');\n            canvas.width = viewport.width;\n            canvas.height = viewport.height;\n            const context = canvas.getContext('2d');\n            if (!context)\n                continue;\n            const renderContext = { canvasContext: context, viewport };\n            await page.render(renderContext).promise;\n            const dataURL = canvas.toDataURL();\n            const pageDetections = await analyzeImageDataURL(dataURL, i - 1, opts);\n            detections.push(...pageDetections);\n        }\n    }\n    else {\n        // Assume image\n        const dataURL = await fileToDataURL(file);\n        const imgDetections = await analyzeImageDataURL(dataURL, 0, opts);\n        detections.push(...imgDetections);\n    }\n    // Filter detections by preset if provided\n    if (opts.presetId) {\n        const preset = (0,_presets__WEBPACK_IMPORTED_MODULE_5__.getPreset)(opts.presetId);\n        if (preset && preset.enabledKinds && preset.enabledKinds.length > 0) {\n            // Remove detections whose kind is not enabled\n            for (let i = detections.length - 1; i >= 0; i--) {\n                if (!preset.enabledKinds.includes(detections[i].kind)) {\n                    detections.splice(i, 1);\n                }\n            }\n        }\n    }\n    return { detections, pages };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/pipeline/analyze.js\n");

/***/ }),

/***/ "../core-detect/dist/pipeline/apply.js":
/*!*********************************************!*\
  !*** ../core-detect/dist/pipeline/apply.js ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* binding */ analyzeDocument),\n/* harmony export */   applyRedactions: () => (/* binding */ applyRedactions)\n/* harmony export */ });\n/* harmony import */ var _analyze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analyze */ \"../core-detect/dist/pipeline/analyze.js\");\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdf-lib */ \"../../node_modules/.pnpm/pdf-lib@1.17.1/node_modules/pdf-lib/cjs/index.js\");\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pdf_lib__WEBPACK_IMPORTED_MODULE_0__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_analyze__WEBPACK_IMPORTED_MODULE_1__]);\n_analyze__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// A module‑scoped variable to store the last analysis result.  applyRedactions()\n// uses this map to resolve detection IDs to bounding boxes.  In a real\n// application you should pass the detections directly to avoid shared\n// mutable state.  This simplified implementation is sufficient for the\n// demonstration.\nlet lastResult = null;\n/** Override the exported analyse function to capture the last result. */\nasync function analyzeDocument(file, opts = {}) {\n    const result = await (0,_analyze__WEBPACK_IMPORTED_MODULE_1__.analyzeDocument)(file, opts);\n    lastResult = result;\n    return result;\n}\n/** Internal helper: convert a canvas to a data URI. */\nfunction canvasToDataURL(canvas, mimeType = 'image/png', quality = 0.92) {\n    return canvas.toDataURL(mimeType, quality);\n}\n/** Internal helper: convert a File/Blob into a HTMLImageElement. */\nasync function fileToImage(file) {\n    const dataURL = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(file);\n    });\n    const img = new Image();\n    await new Promise(resolve => {\n        img.onload = () => resolve();\n        img.src = dataURL;\n    });\n    return img;\n}\n/** Apply redactions to an image.  Returns a Data URI. */\nasync function applyRedactionsToImage(file, actions, quality = 0.92, detectionResult) {\n    const img = await fileToImage(file);\n    const canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        throw new Error('Cannot obtain 2D context');\n    // Draw original image\n    ctx.drawImage(img, 0, 0);\n    // Build detection map\n    const map = new Map();\n    const detectionsToUse = detectionResult || lastResult;\n    if (detectionsToUse) {\n        for (const det of detectionsToUse.detections) {\n            map.set(det.id, det);\n        }\n    }\n    // Utility helpers for drawing various redaction styles on images\n    function drawBox(x, y, w, h, config = {}) {\n        var _a;\n        const color = config.color || 'black';\n        const opacity = (_a = config.opacity) !== null && _a !== void 0 ? _a : 1.0;\n        const cornerRadius = config.cornerRadius || 0;\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        ctx.fillStyle = color;\n        if (cornerRadius > 0) {\n            // Draw rounded rectangle\n            ctx.beginPath();\n            ctx.roundRect(x, y, w, h, cornerRadius);\n            ctx.fill();\n        }\n        else {\n            ctx.fillRect(x, y, w, h);\n        }\n        // Add border if specified\n        if (config.borderWidth && config.borderColor) {\n            ctx.lineWidth = config.borderWidth;\n            ctx.strokeStyle = config.borderColor;\n            if (cornerRadius > 0) {\n                ctx.beginPath();\n                ctx.roundRect(x, y, w, h, cornerRadius);\n                ctx.stroke();\n            }\n            else {\n                ctx.strokeRect(x, y, w, h);\n            }\n        }\n        ctx.restore();\n    }\n    // Enhanced solid color redaction with configuration support\n    function drawSolidColor(x, y, w, h, config = {}) {\n        drawBox(x, y, w, h, config);\n    }\n    // Gradient redaction\n    function drawGradient(x, y, w, h, config = {}) {\n        var _a;\n        const color1 = config.color || 'black';\n        const color2 = config.secondaryColor || 'gray';\n        const opacity = (_a = config.opacity) !== null && _a !== void 0 ? _a : 1.0;\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        const gradient = ctx.createLinearGradient(x, y, x + w, y + h);\n        gradient.addColorStop(0, color1);\n        gradient.addColorStop(1, color2);\n        ctx.fillStyle = gradient;\n        if (config.cornerRadius && config.cornerRadius > 0) {\n            ctx.beginPath();\n            ctx.roundRect(x, y, w, h, config.cornerRadius);\n            ctx.fill();\n        }\n        else {\n            ctx.fillRect(x, y, w, h);\n        }\n        ctx.restore();\n    }\n    // Pattern redaction\n    function drawPattern(x, y, w, h, config = {}) {\n        var _a;\n        const color = config.color || 'black';\n        const opacity = (_a = config.opacity) !== null && _a !== void 0 ? _a : 1.0;\n        const patternType = config.patternType || 'diagonal';\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        // Fill background first\n        ctx.fillStyle = config.secondaryColor || '#f0f0f0';\n        ctx.fillRect(x, y, w, h);\n        // Draw pattern\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 2;\n        switch (patternType) {\n            case 'diagonal':\n                for (let i = -h; i < w + h; i += 8) {\n                    ctx.beginPath();\n                    ctx.moveTo(x + i, y);\n                    ctx.lineTo(x + i + h, y + h);\n                    ctx.stroke();\n                }\n                break;\n            case 'dots':\n                const dotSize = 3;\n                const spacing = 8;\n                ctx.fillStyle = color;\n                for (let dx = 0; dx < w; dx += spacing) {\n                    for (let dy = 0; dy < h; dy += spacing) {\n                        ctx.beginPath();\n                        ctx.arc(x + dx + spacing / 2, y + dy + spacing / 2, dotSize / 2, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                }\n                break;\n            case 'cross-hatch':\n                // Diagonal lines one way\n                for (let i = -h; i < w + h; i += 6) {\n                    ctx.beginPath();\n                    ctx.moveTo(x + i, y);\n                    ctx.lineTo(x + i + h, y + h);\n                    ctx.stroke();\n                }\n                // Diagonal lines the other way\n                for (let i = 0; i < w + h; i += 6) {\n                    ctx.beginPath();\n                    ctx.moveTo(x + i, y + h);\n                    ctx.lineTo(x + i - h, y);\n                    ctx.stroke();\n                }\n                break;\n            case 'waves':\n                ctx.beginPath();\n                for (let i = 0; i < w; i += 2) {\n                    const wave = Math.sin((i / w) * Math.PI * 4) * (h * 0.2);\n                    if (i === 0) {\n                        ctx.moveTo(x + i, y + h / 2 + wave);\n                    }\n                    else {\n                        ctx.lineTo(x + i, y + h / 2 + wave);\n                    }\n                }\n                ctx.stroke();\n                break;\n            case 'noise':\n                ctx.fillStyle = color;\n                for (let i = 0; i < w * h / 20; i++) {\n                    const nx = x + Math.random() * w;\n                    const ny = y + Math.random() * h;\n                    ctx.beginPath();\n                    ctx.arc(nx, ny, 1, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n                break;\n        }\n        ctx.restore();\n    }\n    // Apply a CSS blur filter to a region by drawing the original image with\n    // the filter enabled only for that region.  Canvas 2D `filter` is\n    // supported in modern browsers.  We temporarily clip the context to\n    // restrict the blur effect to the redaction box.\n    function drawBlur(x, y, w, h) {\n        ctx.save();\n        ctx.filter = 'blur(8px)';\n        ctx.beginPath();\n        ctx.rect(x, y, w, h);\n        ctx.clip();\n        ctx.drawImage(img, 0, 0);\n        ctx.restore();\n    }\n    // Pixelate by drawing the region scaled down and back up.  Choose a\n    // pixel size relative to region size to maintain some obfuscation but\n    // not degrade performance too much.\n    function drawPixelate(x, y, w, h) {\n        const pixelSize = Math.max(4, Math.floor(Math.min(w, h) / 10));\n        // Create a temporary canvas to hold the region scaled down\n        const tempCanvas = document.createElement('canvas');\n        tempCanvas.width = Math.max(1, Math.floor(w / pixelSize));\n        tempCanvas.height = Math.max(1, Math.floor(h / pixelSize));\n        const tctx = tempCanvas.getContext('2d');\n        if (!tctx) {\n            drawBox(x, y, w, h);\n            return;\n        }\n        // Draw the region scaled down onto the temp canvas\n        tctx.drawImage(img, x, y, w, h, 0, 0, tempCanvas.width, tempCanvas.height);\n        // Now draw the scaled up version onto the main canvas to pixelate\n        ctx.imageSmoothingEnabled = false;\n        ctx.drawImage(tempCanvas, 0, 0, tempCanvas.width, tempCanvas.height, x, y, w, h);\n        ctx.imageSmoothingEnabled = true;\n    }\n    // Enhanced label drawing with configuration support\n    function drawLabel(x, y, w, h, text, config = {}) {\n        var _a;\n        ctx.save();\n        const bgColor = config.color || 'black';\n        const textColor = config.secondaryColor || 'white';\n        const opacity = (_a = config.opacity) !== null && _a !== void 0 ? _a : 1.0;\n        const fontSize = config.fontSize || Math.max(10, Math.floor(h * 0.6));\n        const fontFamily = config.fontFamily || 'sans-serif';\n        const cornerRadius = config.cornerRadius || 0;\n        ctx.globalAlpha = opacity;\n        // Draw background with optional rounded corners\n        ctx.fillStyle = bgColor;\n        if (cornerRadius > 0) {\n            ctx.beginPath();\n            ctx.roundRect(x, y, w, h, cornerRadius);\n            ctx.fill();\n        }\n        else {\n            ctx.fillRect(x, y, w, h);\n        }\n        // Add shadow if specified\n        if (config.shadow) {\n            ctx.shadowOffsetX = config.shadow.offsetX;\n            ctx.shadowOffsetY = config.shadow.offsetY;\n            ctx.shadowBlur = config.shadow.blur;\n            ctx.shadowColor = config.shadow.color;\n        }\n        // Draw text\n        ctx.fillStyle = textColor;\n        ctx.font = `${fontSize}px ${fontFamily}`;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        // Truncate text if it won't fit\n        let label = text;\n        const maxWidth = w - 8; // More padding for better appearance\n        while (ctx.measureText(label).width > maxWidth && label.length > 1) {\n            label = label.slice(0, -1);\n        }\n        if (label !== text && label.length > 0) {\n            label = label.slice(0, -1) + '…';\n        }\n        ctx.fillText(label, x + w / 2, y + h / 2);\n        ctx.restore();\n    }\n    // Draw a mask that obscures all but the last four characters of the\n    // provided preview text.  The mask uses asterisks for the hidden\n    // portion.  Non‑digit characters are preserved in their positions.\n    function drawMaskLast4(x, y, w, h, preview) {\n        const text = preview || '';\n        // Keep only last 4 alphanumeric characters; replace preceding\n        // characters (letters or digits) with asterisks but preserve spaces and other symbols.\n        let masked = '';\n        let remaining = 4;\n        for (let i = text.length - 1; i >= 0; i--) {\n            const ch = text[i];\n            if (/\\w/.test(ch) && remaining > 0) {\n                masked = ch + masked;\n                remaining--;\n            }\n            else if (/\\w/.test(ch)) {\n                masked = '*' + masked;\n            }\n            else {\n                masked = ch + masked;\n            }\n        }\n        drawLabel(x, y, w, h, masked);\n    }\n    // Draw redactions using the selected style for each action.  If the\n    // style is not recognised, fallback to a solid box.\n    actions.forEach(action => {\n        const det = map.get(action.detectionId);\n        if (!det)\n            return;\n        const { box } = det;\n        const x = box.x * canvas.width;\n        const y = box.y * canvas.height;\n        const w = box.w * canvas.width;\n        const h = box.h * canvas.height;\n        const config = action.config || {};\n        switch (action.style) {\n            case 'BLUR':\n                drawBlur(x, y, w, h);\n                break;\n            case 'PIXELATE':\n                drawPixelate(x, y, w, h);\n                break;\n            case 'LABEL':\n                const labelText = config.labelText || action.labelText || det.kind;\n                drawLabel(x, y, w, h, labelText, config);\n                break;\n            case 'MASK_LAST4':\n                drawMaskLast4(x, y, w, h, det.preview);\n                break;\n            case 'PATTERN':\n                drawPattern(x, y, w, h, config);\n                break;\n            case 'GRADIENT':\n                drawGradient(x, y, w, h, config);\n                break;\n            case 'SOLID_COLOR':\n                drawSolidColor(x, y, w, h, config);\n                break;\n            case 'VECTOR_OVERLAY':\n                // Vector overlay for images - for now, fall back to enhanced box\n                drawBox(x, y, w, h, config);\n                break;\n            case 'REMOVE_METADATA':\n                // Metadata removal is handled by re‑encoding the image; no\n                // drawing needed for this redaction.\n                break;\n            case 'BOX':\n            default:\n                drawBox(x, y, w, h, config);\n        }\n    });\n    // Apply image sanitization options\n    let outputFormat = 'image/jpeg';\n    let outputQuality = quality;\n    // Always re-encode to strip EXIF/metadata by default\n    // The canvas.toDataURL() method automatically strips metadata\n    return canvas.toDataURL(outputFormat, outputQuality);\n}\n/** Enhanced vector-based PDF redaction with advanced styling support */\nasync function applyRedactionsToPdf(file, actions, detectionResult, options = {}) {\n    var _a, _b;\n    const origBytes = await file.arrayBuffer();\n    const origPdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(origBytes);\n    const newPdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.create();\n    const detectionMap = new Map();\n    const detectionsToUse = detectionResult || lastResult;\n    if (detectionsToUse) {\n        for (const det of detectionsToUse.detections) {\n            detectionMap.set(det.id, det);\n        }\n    }\n    // Helper function to parse hex color to RGB values for pdf-lib\n    function parseColorToRGB(hexColor) {\n        const hex = hexColor.replace('#', '');\n        const r = parseInt(hex.substring(0, 2), 16) / 255;\n        const g = parseInt(hex.substring(2, 4), 16) / 255;\n        const b = parseInt(hex.substring(4, 6), 16) / 255;\n        return [r, g, b];\n    }\n    // Apply document sanitization if requested\n    if (options.sanitization) {\n        if (options.sanitization.removeMetadata) {\n            // Remove PDF metadata\n            newPdf.setTitle('');\n            newPdf.setAuthor('');\n            newPdf.setSubject('');\n            newPdf.setKeywords([]);\n            newPdf.setProducer('');\n            newPdf.setCreator('');\n            try {\n                newPdf.setCreationDate(new Date(0));\n                newPdf.setModificationDate(new Date(0));\n            }\n            catch (e) {\n                // Some PDF operations might fail, continue with redaction\n                console.warn('Could not set PDF dates:', e);\n            }\n        }\n    }\n    const total = origPdf.getPageCount();\n    for (let i = 0; i < total; i++) {\n        const [copiedPage] = await newPdf.copyPages(origPdf, [i]);\n        const page = newPdf.addPage(copiedPage);\n        const { width, height } = page.getSize();\n        // Remove annotations if requested\n        if ((_a = options.sanitization) === null || _a === void 0 ? void 0 : _a.removeAnnotations) {\n            // Note: pdf-lib doesn't have direct annotation removal API\n            // This would need custom implementation or different library\n        }\n        // Filter actions for this page\n        const pageActions = actions.filter(act => {\n            var _a;\n            const det = detectionMap.get(act.detectionId);\n            return det && ((_a = det.box.page) !== null && _a !== void 0 ? _a : 0) === i;\n        });\n        // Apply vector-based redactions\n        for (const action of pageActions) {\n            const det = detectionMap.get(action.detectionId);\n            if (!det)\n                continue;\n            const { box } = det;\n            const config = action.config || {};\n            const x = box.x * width;\n            // Convert from top-left origin to PDF bottom-left origin\n            const y = (1 - box.y - box.h) * height;\n            const w = box.w * width;\n            const h = box.h * height;\n            // Parse colors\n            const primaryRGB = config.color ? parseColorToRGB(config.color) : [0, 0, 0];\n            const secondaryRGB = config.secondaryColor ? parseColorToRGB(config.secondaryColor) : [1, 1, 1];\n            const opacity = (_b = config.opacity) !== null && _b !== void 0 ? _b : 1.0;\n            switch (action.style) {\n                case 'BOX':\n                case 'SOLID_COLOR':\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity,\n                        borderColor: config.borderColor ? (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(...parseColorToRGB(config.borderColor)) : undefined,\n                        borderWidth: config.borderWidth || 0\n                    });\n                    break;\n                case 'GRADIENT':\n                    // PDF gradients are complex - use solid color for now\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity\n                    });\n                    break;\n                case 'PATTERN':\n                    // Draw background\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(secondaryRGB[0], secondaryRGB[1], secondaryRGB[2]),\n                        opacity\n                    });\n                    // Add pattern overlay\n                    const patternType = config.patternType || 'diagonal';\n                    const lineColor = (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]);\n                    if (patternType === 'diagonal') {\n                        for (let offset = -h; offset < w + h; offset += 8) {\n                            page.drawLine({\n                                start: { x: x + offset, y: y },\n                                end: { x: x + offset + h, y: y + h },\n                                color: lineColor,\n                                thickness: 2,\n                                opacity\n                            });\n                        }\n                    }\n                    break;\n                case 'VECTOR_OVERLAY':\n                    // Enhanced vector redaction with proper PDF vector operations\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity,\n                        borderColor: config.borderColor ? (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(...parseColorToRGB(config.borderColor)) : undefined,\n                        borderWidth: config.borderWidth || 0\n                    });\n                    break;\n                case 'LABEL':\n                    // Draw background\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity\n                    });\n                    // Draw text\n                    const labelText = config.labelText || action.labelText || det.kind;\n                    const fontSize = config.fontSize || Math.max(8, h * 0.6);\n                    const maxChars = Math.floor((w - 8) / (fontSize * 0.6));\n                    let label = labelText;\n                    if (label.length > maxChars) {\n                        label = label.slice(0, maxChars > 3 ? maxChars - 1 : 0) + '…';\n                    }\n                    const estTextWidth = label.length * fontSize * 0.6;\n                    const xOffset = (w - estTextWidth) / 2;\n                    page.drawText(label, {\n                        x: x + Math.max(0, xOffset),\n                        y: y + h / 2 - fontSize / 2,\n                        size: fontSize,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(secondaryRGB[0], secondaryRGB[1], secondaryRGB[2]),\n                        opacity\n                    });\n                    break;\n                case 'MASK_LAST4':\n                    // Draw background\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity\n                    });\n                    // Create masked text\n                    const preview = det.preview || '';\n                    let masked = '';\n                    let remaining = 4;\n                    for (let i = preview.length - 1; i >= 0; i--) {\n                        const ch = preview[i];\n                        if (/\\w/.test(ch) && remaining > 0) {\n                            masked = ch + masked;\n                            remaining--;\n                        }\n                        else if (/\\w/.test(ch)) {\n                            masked = '*' + masked;\n                        }\n                        else {\n                            masked = ch + masked;\n                        }\n                    }\n                    const maskFontSize = Math.max(8, h * 0.6);\n                    const maskTextWidth = masked.length * maskFontSize * 0.6;\n                    const maskXOffset = (w - maskTextWidth) / 2;\n                    page.drawText(masked, {\n                        x: x + Math.max(0, maskXOffset),\n                        y: y + h / 2 - maskFontSize / 2,\n                        size: maskFontSize,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(secondaryRGB[0], secondaryRGB[1], secondaryRGB[2]),\n                        opacity\n                    });\n                    break;\n                default:\n                    // Default to solid rectangle\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity: opacity\n                    });\n            }\n        }\n    }\n    const pdfBytes = await newPdf.save();\n    const base64 = typeof Buffer !== 'undefined' ? Buffer.from(pdfBytes).toString('base64') : btoa(String.fromCharCode(...new Uint8Array(pdfBytes)));\n    return `data:application/pdf;base64,${base64}`;\n}\n/**\n * Apply redactions to a file using the previously analysed detections.\n *\n * Note: This implementation relies on `lastResult` set by analyzeDocument().\n * In a real application you should pass the detections explicitly to avoid\n * hidden state.\n */\nasync function applyRedactions(file, actions, opts, detections) {\n    var _a;\n    // If detections are provided directly, create a temporary result object\n    let result = lastResult;\n    if (detections && detections.length > 0) {\n        result = {\n            detections: detections,\n            pages: Math.max(...detections.map(d => { var _a; return (_a = d.box.page) !== null && _a !== void 0 ? _a : 0; })) + 1 || 1\n        };\n    }\n    if (!result) {\n        throw new Error('No analysis result available.  Call analyzeDocument() first.');\n    }\n    const mime = file.type || '';\n    let fileUri;\n    if (mime === 'application/pdf' || opts.output === 'pdf') {\n        fileUri = await applyRedactionsToPdf(file, actions, result, opts);\n    }\n    else {\n        const quality = (_a = opts.quality) !== null && _a !== void 0 ? _a : 0.92;\n        fileUri = await applyRedactionsToImage(file, actions, quality, result);\n    }\n    // Build a simple report summarising redactions\n    const report = {};\n    if (result) {\n        report.totalDetections = result.detections.length;\n        report.redactedCount = actions.length;\n        const counts = {};\n        for (const action of actions) {\n            const det = result.detections.find(d => d.id === action.detectionId);\n            if (det) {\n                counts[det.kind] = (counts[det.kind] || 0) + 1;\n            }\n        }\n        report.byKind = counts;\n    }\n    return { fileUri, report };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/pipeline/apply.js\n");

/***/ }),

/***/ "../core-detect/dist/presets.js":
/*!**************************************!*\
  !*** ../core-detect/dist/presets.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PRESETS: () => (/* binding */ PRESETS),\n/* harmony export */   deletePreset: () => (/* binding */ deletePreset),\n/* harmony export */   getPreset: () => (/* binding */ getPreset),\n/* harmony export */   listPresets: () => (/* binding */ listPresets),\n/* harmony export */   savePreset: () => (/* binding */ savePreset)\n/* harmony export */ });\n// Predefined presets.  These can be customised by the user at runtime via the UI.\nconst PRESETS = [\n    {\n        id: 'developer',\n        name: 'Developer Secrets',\n        enabledKinds: ['EMAIL', 'PHONE', 'PAN', 'JWT', 'API_KEY', 'IBAN', 'SSN', 'PASSPORT'],\n        styleMap: {},\n        customRegex: []\n    },\n    {\n        id: 'work',\n        name: 'Work Screenshot',\n        enabledKinds: ['EMAIL', 'PHONE', 'PAN', 'JWT', 'API_KEY', 'NAME', 'ADDRESS', 'PASSPORT'],\n        styleMap: {},\n        customRegex: []\n    },\n    {\n        id: 'all',\n        name: 'All Detectors',\n        enabledKinds: ['FACE', 'EMAIL', 'PHONE', 'PAN', 'IBAN', 'SSN', 'PASSPORT', 'JWT', 'API_KEY', 'BARCODE', 'NAME', 'ADDRESS', 'OTHER'],\n        styleMap: {},\n        customRegex: []\n    }\n];\n/** Return all registered presets. */\nfunction listPresets() {\n    return PRESETS.slice();\n}\n/** Lookup a preset by its ID. */\nfunction getPreset(id) {\n    return PRESETS.find(p => p.id === id);\n}\n/** Save or update a preset.  If the ID exists, it will be replaced; otherwise it is added. */\nfunction savePreset(preset) {\n    const index = PRESETS.findIndex(p => p.id === preset.id);\n    if (index >= 0) {\n        PRESETS[index] = preset;\n    }\n    else {\n        PRESETS.push(preset);\n    }\n}\n/** Delete a preset by its ID.  If the preset does not exist, no action is taken. */\nfunction deletePreset(id) {\n    const index = PRESETS.findIndex(p => p.id === id);\n    if (index >= 0) {\n        PRESETS.splice(index, 1);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS1kZXRlY3QvZGlzdC9wcmVzZXRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxxRUFBcUU7QUFDOUQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8uLi9jb3JlLWRldGVjdC9kaXN0L3ByZXNldHMuanM/MjI4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQcmVkZWZpbmVkIHByZXNldHMuICBUaGVzZSBjYW4gYmUgY3VzdG9taXNlZCBieSB0aGUgdXNlciBhdCBydW50aW1lIHZpYSB0aGUgVUkuXG5leHBvcnQgY29uc3QgUFJFU0VUUyA9IFtcbiAgICB7XG4gICAgICAgIGlkOiAnZGV2ZWxvcGVyJyxcbiAgICAgICAgbmFtZTogJ0RldmVsb3BlciBTZWNyZXRzJyxcbiAgICAgICAgZW5hYmxlZEtpbmRzOiBbJ0VNQUlMJywgJ1BIT05FJywgJ1BBTicsICdKV1QnLCAnQVBJX0tFWScsICdJQkFOJywgJ1NTTicsICdQQVNTUE9SVCddLFxuICAgICAgICBzdHlsZU1hcDoge30sXG4gICAgICAgIGN1c3RvbVJlZ2V4OiBbXVxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogJ3dvcmsnLFxuICAgICAgICBuYW1lOiAnV29yayBTY3JlZW5zaG90JyxcbiAgICAgICAgZW5hYmxlZEtpbmRzOiBbJ0VNQUlMJywgJ1BIT05FJywgJ1BBTicsICdKV1QnLCAnQVBJX0tFWScsICdOQU1FJywgJ0FERFJFU1MnLCAnUEFTU1BPUlQnXSxcbiAgICAgICAgc3R5bGVNYXA6IHt9LFxuICAgICAgICBjdXN0b21SZWdleDogW11cbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6ICdhbGwnLFxuICAgICAgICBuYW1lOiAnQWxsIERldGVjdG9ycycsXG4gICAgICAgIGVuYWJsZWRLaW5kczogWydGQUNFJywgJ0VNQUlMJywgJ1BIT05FJywgJ1BBTicsICdJQkFOJywgJ1NTTicsICdQQVNTUE9SVCcsICdKV1QnLCAnQVBJX0tFWScsICdCQVJDT0RFJywgJ05BTUUnLCAnQUREUkVTUycsICdPVEhFUiddLFxuICAgICAgICBzdHlsZU1hcDoge30sXG4gICAgICAgIGN1c3RvbVJlZ2V4OiBbXVxuICAgIH1cbl07XG4vKiogUmV0dXJuIGFsbCByZWdpc3RlcmVkIHByZXNldHMuICovXG5leHBvcnQgZnVuY3Rpb24gbGlzdFByZXNldHMoKSB7XG4gICAgcmV0dXJuIFBSRVNFVFMuc2xpY2UoKTtcbn1cbi8qKiBMb29rdXAgYSBwcmVzZXQgYnkgaXRzIElELiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFByZXNldChpZCkge1xuICAgIHJldHVybiBQUkVTRVRTLmZpbmQocCA9PiBwLmlkID09PSBpZCk7XG59XG4vKiogU2F2ZSBvciB1cGRhdGUgYSBwcmVzZXQuICBJZiB0aGUgSUQgZXhpc3RzLCBpdCB3aWxsIGJlIHJlcGxhY2VkOyBvdGhlcndpc2UgaXQgaXMgYWRkZWQuICovXG5leHBvcnQgZnVuY3Rpb24gc2F2ZVByZXNldChwcmVzZXQpIHtcbiAgICBjb25zdCBpbmRleCA9IFBSRVNFVFMuZmluZEluZGV4KHAgPT4gcC5pZCA9PT0gcHJlc2V0LmlkKTtcbiAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgICBQUkVTRVRTW2luZGV4XSA9IHByZXNldDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIFBSRVNFVFMucHVzaChwcmVzZXQpO1xuICAgIH1cbn1cbi8qKiBEZWxldGUgYSBwcmVzZXQgYnkgaXRzIElELiAgSWYgdGhlIHByZXNldCBkb2VzIG5vdCBleGlzdCwgbm8gYWN0aW9uIGlzIHRha2VuLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVByZXNldChpZCkge1xuICAgIGNvbnN0IGluZGV4ID0gUFJFU0VUUy5maW5kSW5kZXgocCA9PiBwLmlkID09PSBpZCk7XG4gICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgICAgUFJFU0VUUy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../core-detect/dist/presets.js\n");

/***/ }),

/***/ "../core-detect/dist/types.js":
/*!************************************!*\
  !*** ../core-detect/dist/types.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS1kZXRlY3QvZGlzdC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8uLi9jb3JlLWRldGVjdC9kaXN0L3R5cGVzLmpzP2I1NjMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core-detect/dist/types.js\n");

/***/ }),

/***/ "jsqr":
/*!***********************!*\
  !*** external "jsqr" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("jsqr");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "pdfjs-dist":
/*!*****************************!*\
  !*** external "pdfjs-dist" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("pdfjs-dist");

/***/ }),

/***/ "pdfjs-dist/build/pdf.worker.js":
/*!*************************************************!*\
  !*** external "pdfjs-dist/build/pdf.worker.js" ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("pdfjs-dist/build/pdf.worker.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = import("uuid");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?60a5":
/*!**************************!*\
  !*** encoding (ignored) ***!
  \**************************/
/***/ (() => {

/* (ignored) */

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0","vendor-chunks/@swc+helpers@0.5.2","vendor-chunks/pdf-lib@1.17.1","vendor-chunks/tesseract.js@4.1.4","vendor-chunks/@pdf-lib+standard-fonts@1.0.0","vendor-chunks/pako@1.0.11","vendor-chunks/whatwg-url@5.0.0","vendor-chunks/tr46@0.0.3","vendor-chunks/webidl-conversions@3.0.1","vendor-chunks/tslib@1.14.1","vendor-chunks/regenerator-runtime@0.13.11","vendor-chunks/node-fetch@2.7.0","vendor-chunks/is-url@1.2.4","vendor-chunks/is-electron@2.2.2","vendor-chunks/@pdf-lib+upng@1.0.1"], () => (__webpack_exec__("../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();