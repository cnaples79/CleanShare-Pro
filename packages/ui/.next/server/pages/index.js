/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction App({\n  Component,\n  pageProps\n}) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    // Initialize any global app state here\n    console.log('CleanShare Pro UI initialized');\n  }, []);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Component, {\n    ...pageProps\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNpQztBQUFBO0FBRWxCLFNBQVNHLEdBQUdBLENBQUM7RUFBRUMsU0FBUztFQUFFQztBQUFvQixDQUFDLEVBQUU7RUFDOURMLGdEQUFTLENBQUMsTUFBTTtJQUNkO0lBQ0FNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLCtCQUErQixDQUFDO0VBQzlDLENBQUMsRUFBRSxFQUFFLENBQUM7RUFFTixvQkFBT0wsc0RBQUEsQ0FBQ0UsU0FBUztJQUFBLEdBQUtDO0VBQVMsQ0FBRyxDQUFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNsZWFuc2hhcmUvdWkvLi9wYWdlcy9fYXBwLnRzeD8yZmJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCdcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9OiBBcHBQcm9wcykge1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIEluaXRpYWxpemUgYW55IGdsb2JhbCBhcHAgc3RhdGUgaGVyZVxuICAgIGNvbnNvbGUubG9nKCdDbGVhblNoYXJlIFBybyBVSSBpbml0aWFsaXplZCcpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbn0iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwianN4IiwiX2pzeCIsIkFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\");\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jszip */ \"jszip\");\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdfjs-dist */ \"pdfjs-dist\");\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__]);\n_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// Main CleanShare Pro UI component\n\n\n\n\n\n// Configure pdfjs worker when running in the browser.  Without this,\n// pdfjs will attempt to load a worker script from the wrong path.  We\n// require the worker via webpack/Next.js which exposes a proper\n// module.  If this import fails silently (e.g., SSR), the default\n// worker may still be used.\n\ntry {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const workerSrc = __webpack_require__(/*! pdfjs-dist/build/pdf.worker.js */ \"pdfjs-dist/build/pdf.worker.js\");\n  // @ts-ignore\n  pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.GlobalWorkerOptions.workerSrc = workerSrc;\n} catch (e) {\n  // ignore in SSR or test environments\n}\n\n/** Helper to load a PDF file and return an array of Data URLs for each page. */\nasync function loadPdfPages(file) {\n  const buffer = await file.arrayBuffer();\n  const pdf = await pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.getDocument({\n    data: buffer\n  }).promise;\n  const pages = [];\n  for (let i = 1; i <= pdf.numPages; i++) {\n    const page = await pdf.getPage(i);\n    const viewport = page.getViewport({\n      scale: 1.0\n    });\n    const canvas = document.createElement('canvas');\n    canvas.width = viewport.width;\n    canvas.height = viewport.height;\n    const context = canvas.getContext('2d');\n    if (!context) {\n      pages.push('');\n      continue;\n    }\n    const renderContext = {\n      canvasContext: context,\n      viewport\n    };\n    await page.render(renderContext).promise;\n    pages.push(canvas.toDataURL());\n  }\n  return pages;\n}\n\n/** Convert a Data URI to a Uint8Array for binary blobs. */\nfunction dataURIToUint8Array(dataURI) {\n  const parts = dataURI.split(',');\n  const base64String = parts[1];\n  const binaryString = atob(base64String);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes;\n}\n\n/** File state structure for each selected file. */\n\nfunction Home() {\n  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [fileStates, setFileStates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [currentFileIndex, setCurrentFileIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [presets, setPresets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [presetId, setPresetId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [exporting, setExporting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [zipUrl, setZipUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [reportUrl, setReportUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n\n  // Pro gating.  Some features such as preset editing are locked behind a\n  // simple “Pro” toggle.  In a real app this would be tied to a purchase or\n  // subscription.  For demonstration it is a boolean state.\n  const [proUnlocked, setProUnlocked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  // Preset editor state.  When showPresetEditor is true the UI displays a\n  // management view where the user can create, edit, and delete presets.\n  const [showPresetEditor, setShowPresetEditor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [editingPreset, setEditingPreset] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n\n  // Define the list of all possible detection kinds and redaction styles.\n  const DETECTION_KINDS = ['FACE', 'EMAIL', 'PHONE', 'PAN', 'IBAN', 'SSN', 'JWT', 'API_KEY', 'BARCODE', 'NAME', 'ADDRESS', 'OTHER'];\n  const STYLE_OPTIONS = ['BOX', 'BLUR', 'PIXELATE', 'LABEL', 'MASK_LAST4'];\n\n  // Load presets on mount\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const ps = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__.listPresets)();\n    setPresets(ps);\n    // default to the first preset\n    if (ps.length > 0) {\n      setPresetId(ps[0].id);\n    }\n  }, []);\n\n  // Analyse files when they change or when preset changes\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (files.length === 0) return;\n    let isCancelled = false;\n    async function analyseAll() {\n      setLoading(true);\n      const newStates = [];\n      for (const file of files) {\n        try {\n          const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__.analyzeDocument)(file, {\n            presetId\n          });\n          // Initialise selections and actions\n          const sel = {};\n          const act = {};\n          result.detections.forEach(det => {\n            sel[det.id] = true;\n            act[det.id] = {\n              style: 'BOX'\n            };\n          });\n          let pageImages = [];\n          let pages = result.pages || 1;\n          if (file.type === 'application/pdf') {\n            try {\n              pageImages = await loadPdfPages(file);\n              pages = pageImages.length;\n            } catch (err) {\n              // fallback: leave empty; preview will show nothing\n              pageImages = [];\n            }\n          } else {\n            // For images use a single preview via Object URL\n            pageImages = [URL.createObjectURL(file)];\n            pages = 1;\n          }\n          if (!isCancelled) {\n            newStates.push({\n              file,\n              detections: result.detections,\n              selected: sel,\n              actions: act,\n              pages,\n              pageImages,\n              currentPage: 0,\n              outputUri: undefined,\n              report: undefined\n            });\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }\n      if (!isCancelled) {\n        setFileStates(newStates);\n        setCurrentFileIndex(0);\n        setLoading(false);\n      }\n    }\n    analyseAll();\n    return () => {\n      isCancelled = true;\n    };\n  }, [files, presetId]);\n\n  /** Handle change of file input */\n  function onFilesChange(e) {\n    const selected = e.target.files;\n    if (!selected || selected.length === 0) return;\n    const arr = Array.from(selected);\n    setFiles(arr);\n    // reset previous exported data\n    setZipUrl(null);\n    setReportUrl(null);\n  }\n\n  /** Toggle a detection on or off */\n  function toggleDetection(detId) {\n    setFileStates(prev => {\n      const copy = [...prev];\n      const fs = copy[currentFileIndex];\n      fs.selected[detId] = !fs.selected[detId];\n      return copy;\n    });\n  }\n\n  /** Change the redaction style for a detection */\n  function changeStyle(detId, style) {\n    setFileStates(prev => {\n      const copy = [...prev];\n      const fs = copy[currentFileIndex];\n      fs.actions[detId].style = style;\n      // Clear label text when style changes away from LABEL\n      if (style !== 'LABEL') {\n        delete fs.actions[detId].labelText;\n      }\n      return copy;\n    });\n  }\n\n  /** Change the label text for a detection (used when style is LABEL) */\n  function changeLabel(detId, text) {\n    setFileStates(prev => {\n      const copy = [...prev];\n      const fs = copy[currentFileIndex];\n      fs.actions[detId].labelText = text;\n      return copy;\n    });\n  }\n\n  /** Change current page for PDF preview */\n  function changePage(delta) {\n    setFileStates(prev => {\n      const copy = [...prev];\n      const fs = copy[currentFileIndex];\n      const next = fs.currentPage + delta;\n      if (next >= 0 && next < fs.pages) {\n        fs.currentPage = next;\n      }\n      return copy;\n    });\n  }\n\n  /** Sanitise the currently selected file */\n  async function sanitiseCurrent() {\n    const fs = fileStates[currentFileIndex];\n    if (!fs) return;\n    setLoading(true);\n    try {\n      // Build actions from selected detections\n      const actions = [];\n      fs.detections.forEach(det => {\n        if (fs.selected[det.id]) {\n          const act = fs.actions[det.id];\n          actions.push({\n            detectionId: det.id,\n            style: act.style,\n            labelText: act.labelText\n          });\n        }\n      });\n      const outputType = fs.file.type === 'application/pdf' ? 'pdf' : 'image';\n      const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__.applyRedactions)(fs.file, actions, {\n        output: outputType,\n        quality: 0.92\n      });\n      setFileStates(prev => {\n        const copy = [...prev];\n        copy[currentFileIndex] = {\n          ...copy[currentFileIndex],\n          outputUri: result.fileUri,\n          report: result.report\n        };\n        return copy;\n      });\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  /** Export all files as a zip archive with reports */\n  async function exportAll() {\n    if (fileStates.length === 0) return;\n    setExporting(true);\n    const zip = new (jszip__WEBPACK_IMPORTED_MODULE_1___default())();\n    const aggregatedReport = {};\n    // Ensure each file is sanitised and added to zip\n    for (let idx = 0; idx < fileStates.length; idx++) {\n      const fs = fileStates[idx];\n      // If not yet sanitised, process it\n      if (!fs.outputUri) {\n        try {\n          const actions = [];\n          fs.detections.forEach(det => {\n            if (fs.selected[det.id]) {\n              const act = fs.actions[det.id];\n              actions.push({\n                detectionId: det.id,\n                style: act.style,\n                labelText: act.labelText\n              });\n            }\n          });\n          const outputType = fs.file.type === 'application/pdf' ? 'pdf' : 'image';\n          const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__.applyRedactions)(fs.file, actions, {\n            output: outputType,\n            quality: 0.92\n          });\n          fs.outputUri = result.fileUri;\n          fs.report = result.report;\n        } catch (err) {\n          console.error(err);\n        }\n      }\n      // Add to zip if sanitised\n      if (fs.outputUri) {\n        const ext = fs.file.type === 'application/pdf' ? 'pdf' : 'jpg';\n        const filename = fs.file.name ? fs.file.name.replace(/\\.[^.]+$/, '') : `file${idx + 1}`;\n        const data = dataURIToUint8Array(fs.outputUri);\n        zip.file(`${filename}-sanitised.${ext}`, data, {\n          binary: true\n        });\n        aggregatedReport[filename] = fs.report;\n      }\n    }\n    // Add report JSON\n    zip.file('report.json', JSON.stringify(aggregatedReport, null, 2));\n    try {\n      const content = await zip.generateAsync({\n        type: 'blob'\n      });\n      const url = URL.createObjectURL(content);\n      setZipUrl(url);\n      // Create report blob separately for convenience\n      const reportBlob = new Blob([JSON.stringify(aggregatedReport, null, 2)], {\n        type: 'application/json'\n      });\n      const reportURL = URL.createObjectURL(reportBlob);\n      setReportUrl(reportURL);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setExporting(false);\n      // Force state update to reflect new fs values\n      setFileStates([...fileStates]);\n    }\n  }\n\n  /** Change preset selection and reanalyse */\n  function onPresetChange(e) {\n    const id = e.target.value;\n    setPresetId(id);\n  }\n  const currentFileState = fileStates[currentFileIndex];\n  const detectionsOnPage = currentFileState ? currentFileState.detections.filter(det => (det.box.page ?? 0) === currentFileState.currentPage) : [];\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n    style: {\n      padding: '1rem',\n      maxWidth: '1100px',\n      margin: '0 auto',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"h1\", {\n      style: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginBottom: '1rem'\n      },\n      children: \"CleanShare\\xA0Pro\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"input\", {\n        type: \"file\",\n        accept: \"image/*,application/pdf\",\n        multiple: true,\n        onChange: onFilesChange\n      }), presets.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"select\", {\n        value: presetId,\n        onChange: onPresetChange,\n        style: {\n          marginLeft: '1rem'\n        },\n        children: presets.map(p => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"option\", {\n          value: p.id,\n          children: p.name\n        }, p.id))\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n        onClick: () => {\n          // Toggle proUnlocked state.  In a real app this would trigger a purchase flow.\n          setProUnlocked(!proUnlocked);\n        },\n        style: {\n          marginLeft: '1rem',\n          padding: '0.25rem 0.5rem',\n          border: '1px solid #10b981',\n          borderRadius: '4px',\n          backgroundColor: proUnlocked ? '#10b981' : '#f3f4f6',\n          color: proUnlocked ? 'white' : '#111827'\n        },\n        children: proUnlocked ? 'Pro Unlocked' : 'Unlock Pro'\n      }), proUnlocked && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n        onClick: () => setShowPresetEditor(true),\n        style: {\n          marginLeft: '0.5rem',\n          padding: '0.25rem 0.5rem',\n          border: '1px solid #2563eb',\n          borderRadius: '4px',\n          backgroundColor: '#2563eb',\n          color: 'white'\n        },\n        children: \"Manage Presets\"\n      })]\n    }), loading && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"p\", {\n      children: \"Processing\\u2026\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n        style: {\n          width: '200px',\n          borderRight: '1px solid #ddd',\n          paddingRight: '1rem'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"h2\", {\n          style: {\n            fontSize: '1rem',\n            fontWeight: 'bold',\n            marginBottom: '0.5rem'\n          },\n          children: \"Files\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"ul\", {\n          style: {\n            listStyle: 'none',\n            padding: 0,\n            margin: 0\n          },\n          children: fileStates.map((fs, idx) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"li\", {\n            style: {\n              marginBottom: '0.5rem',\n              cursor: 'pointer',\n              fontWeight: idx === currentFileIndex ? 'bold' : 'normal'\n            },\n            onClick: () => setCurrentFileIndex(idx),\n            children: [fs.file.name || `File ${idx + 1}`, \" (\", fs.detections.length, \")\"]\n          }, idx))\n        }), fileStates.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n          onClick: exportAll,\n          disabled: exporting,\n          style: {\n            marginTop: '1rem',\n            padding: '0.5rem',\n            backgroundColor: '#2563eb',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            width: '100%'\n          },\n          children: exporting ? 'Exporting…' : 'Export All'\n        }), zipUrl && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n          style: {\n            marginTop: '0.5rem'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"a\", {\n            href: zipUrl,\n            download: \"cleanshare-sanitised.zip\",\n            style: {\n              color: '#2563eb'\n            },\n            children: \"Download Zip\"\n          }), reportUrl && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"div\", {\n            style: {\n              marginTop: '0.25rem'\n            },\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"a\", {\n              href: reportUrl,\n              download: \"report.json\",\n              style: {\n                color: '#2563eb'\n              },\n              children: \"Download Report\"\n            })\n          })]\n        })]\n      }), currentFileState && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"h2\", {\n          style: {\n            fontSize: '1rem',\n            fontWeight: 'bold',\n            marginBottom: '0.5rem'\n          },\n          children: \"Preview\"\n        }), currentFileState.pages > 1 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n          style: {\n            marginBottom: '0.5rem'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n            onClick: () => changePage(-1),\n            disabled: currentFileState.currentPage === 0,\n            style: {\n              marginRight: '0.5rem'\n            },\n            children: \"Prev\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n            onClick: () => changePage(1),\n            disabled: currentFileState.currentPage === currentFileState.pages - 1,\n            children: \"Next\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"span\", {\n            style: {\n              marginLeft: '0.5rem'\n            },\n            children: [\"Page \", currentFileState.currentPage + 1, \" / \", currentFileState.pages]\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n          style: {\n            position: 'relative',\n            border: '1px solid #ddd',\n            display: 'inline-block',\n            maxWidth: '100%'\n          },\n          children: [currentFileState.pageImages[currentFileState.currentPage] ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"img\", {\n            src: currentFileState.pageImages[currentFileState.currentPage],\n            alt: \"Preview\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              display: 'block'\n            }\n          }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"div\", {\n            style: {\n              padding: '1rem'\n            },\n            children: \"No preview available\"\n          }), detectionsOnPage.map(det => {\n            const sel = currentFileState.selected[det.id];\n            // Only draw if selected\n            if (!sel) return null;\n            const style = {\n              position: 'absolute',\n              border: '2px solid red',\n              left: `${det.box.x * 100}%`,\n              top: `${det.box.y * 100}%`,\n              width: `${det.box.w * 100}%`,\n              height: `${det.box.h * 100}%`,\n              boxSizing: 'border-box'\n            };\n            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"div\", {\n              style: style,\n              title: `${det.kind}: ${det.reason}`\n            }, det.id);\n          })]\n        }), currentFileState.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n          style: {\n            marginTop: '0.5rem'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"h3\", {\n            style: {\n              fontSize: '0.9rem',\n              fontWeight: 'bold'\n            },\n            children: \"Sanitised\"\n          }), currentFileState.file.type === 'application/pdf' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"p\", {\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"a\", {\n              href: currentFileState.outputUri,\n              download: `${currentFileState.file.name.replace(/\\.[^.]+$/, '')}-sanitised.pdf`,\n              style: {\n                color: '#2563eb'\n              },\n              children: \"Download PDF\"\n            })\n          }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"img\", {\n            src: currentFileState.outputUri,\n            alt: \"Sanitised preview\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto'\n            }\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"h2\", {\n            style: {\n              fontSize: '1rem',\n              fontWeight: 'bold'\n            },\n            children: \"Detections\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"ul\", {\n            style: {\n              listStyle: 'none',\n              padding: 0\n            },\n            children: currentFileState.detections.map(det => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"li\", {\n              style: {\n                marginBottom: '0.5rem',\n                borderBottom: '1px solid #eee',\n                paddingBottom: '0.25rem'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"div\", {\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"label\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!currentFileState.selected[det.id],\n                    onChange: () => toggleDetection(det.id),\n                    style: {\n                      marginRight: '0.5rem'\n                    }\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"strong\", {\n                    children: det.kind\n                  }), \" \\u2014 \", det.reason, \" \", det.preview ? `(“${det.preview}”)` : '']\n                })\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n                style: {\n                  marginLeft: '1.5rem',\n                  marginTop: '0.25rem'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"select\", {\n                  value: currentFileState.actions[det.id].style,\n                  onChange: e => changeStyle(det.id, e.target.value),\n                  style: {\n                    marginRight: '0.5rem'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"option\", {\n                    value: \"BOX\",\n                    children: \"Box\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"option\", {\n                    value: \"BLUR\",\n                    children: \"Blur\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"option\", {\n                    value: \"PIXELATE\",\n                    children: \"Pixelate\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"option\", {\n                    value: \"LABEL\",\n                    children: \"Label\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"option\", {\n                    value: \"MASK_LAST4\",\n                    children: \"Mask Last 4\"\n                  })]\n                }), currentFileState.actions[det.id].style === 'LABEL' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Label text\",\n                  value: currentFileState.actions[det.id].labelText || '',\n                  onChange: e => changeLabel(det.id, e.target.value),\n                  style: {\n                    padding: '0.25rem',\n                    border: '1px solid #ccc',\n                    borderRadius: '3px'\n                  }\n                })]\n              })]\n            }, det.id))\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n            onClick: sanitiseCurrent,\n            disabled: loading,\n            style: {\n              marginTop: '0.5rem',\n              padding: '0.5rem 1rem',\n              backgroundColor: '#10b981',\n              color: 'white',\n              borderRadius: '4px',\n              border: 'none'\n            },\n            children: \"Sanitise Current\"\n          })]\n        })]\n      })]\n    }), showPresetEditor && proUnlocked && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '1rem',\n          borderRadius: '6px',\n          width: '90%',\n          maxWidth: '600px',\n          maxHeight: '90%',\n          overflowY: 'auto'\n        },\n        children: [!editingPreset && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"h2\", {\n            style: {\n              fontSize: '1.25rem',\n              fontWeight: 'bold',\n              marginBottom: '0.5rem'\n            },\n            children: \"Manage Presets\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"ul\", {\n            style: {\n              listStyle: 'none',\n              padding: 0,\n              margin: 0\n            },\n            children: presets.map(p => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"li\", {\n              style: {\n                marginBottom: '0.5rem',\n                borderBottom: '1px solid #eee',\n                paddingBottom: '0.5rem'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"strong\", {\n                children: p.name\n              }), \" (\", p.id, \")\", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n                style: {\n                  marginTop: '0.25rem'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n                  onClick: () => {\n                    // Start editing this preset by cloning its object.  Clone to avoid\n                    // direct mutation of the PRESETS array.\n                    setEditingPreset({\n                      id: p.id,\n                      name: p.name,\n                      enabledKinds: [...p.enabledKinds],\n                      styleMap: {\n                        ...(p.styleMap || {})\n                      },\n                      customRegex: p.customRegex ? [...p.customRegex] : []\n                    });\n                  },\n                  style: {\n                    marginRight: '0.5rem',\n                    padding: '0.25rem 0.5rem',\n                    border: '1px solid #2563eb',\n                    backgroundColor: '#2563eb',\n                    color: 'white',\n                    borderRadius: '4px'\n                  },\n                  children: \"Edit\"\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n                  onClick: () => {\n                    if (confirm(`Delete preset \"${p.name}\"?`)) {\n                      (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__.deletePreset)(p.id);\n                      // Reload presets from core after deletion\n                      setPresets((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__.listPresets)());\n                    }\n                  },\n                  style: {\n                    padding: '0.25rem 0.5rem',\n                    border: '1px solid #dc2626',\n                    backgroundColor: '#dc2626',\n                    color: 'white',\n                    borderRadius: '4px'\n                  },\n                  children: \"Delete\"\n                })]\n              })]\n            }, p.id))\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n            onClick: () => {\n              // Create a new preset template\n              setEditingPreset({\n                id: '',\n                name: '',\n                enabledKinds: [],\n                styleMap: {},\n                customRegex: []\n              });\n            },\n            style: {\n              marginTop: '0.5rem',\n              padding: '0.5rem',\n              borderRadius: '4px',\n              backgroundColor: '#10b981',\n              color: 'white',\n              border: 'none'\n            },\n            children: \"Add New Preset\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n            onClick: () => {\n              setShowPresetEditor(false);\n              setEditingPreset(null);\n            },\n            style: {\n              marginLeft: '0.5rem',\n              marginTop: '0.5rem',\n              padding: '0.5rem',\n              borderRadius: '4px',\n              backgroundColor: '#6b7280',\n              color: 'white',\n              border: 'none'\n            },\n            children: \"Close\"\n          })]\n        }), editingPreset && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"h2\", {\n            style: {\n              fontSize: '1.25rem',\n              fontWeight: 'bold',\n              marginBottom: '0.5rem'\n            },\n            children: editingPreset.id ? 'Edit Preset' : 'Create Preset'\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n            style: {\n              marginBottom: '0.5rem'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: '0.25rem'\n              },\n              children: \"Preset Name\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"input\", {\n              type: \"text\",\n              value: editingPreset.name,\n              onChange: e => setEditingPreset({\n                ...editingPreset,\n                name: e.target.value\n              }),\n              style: {\n                width: '100%',\n                padding: '0.25rem',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n            style: {\n              marginBottom: '0.5rem'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: '0.25rem'\n              },\n              children: \"Enabled Detectors\"\n            }), DETECTION_KINDS.map(kind => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n              style: {\n                marginBottom: '0.25rem'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"label\", {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"input\", {\n                  type: \"checkbox\",\n                  checked: editingPreset.enabledKinds.includes(kind),\n                  onChange: e => {\n                    const checked = e.target.checked;\n                    setEditingPreset(prev => {\n                      const enabled = new Set(prev.enabledKinds);\n                      if (checked) enabled.add(kind);else enabled.delete(kind);\n                      return {\n                        ...prev,\n                        enabledKinds: Array.from(enabled)\n                      };\n                    });\n                  },\n                  style: {\n                    marginRight: '0.5rem'\n                  }\n                }), kind]\n              }), editingPreset.enabledKinds.includes(kind) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"select\", {\n                value: editingPreset.styleMap && editingPreset.styleMap[kind] || 'BOX',\n                onChange: e => {\n                  const style = e.target.value;\n                  setEditingPreset(prev => {\n                    const newMap = {\n                      ...(prev.styleMap || {})\n                    };\n                    newMap[kind] = style;\n                    return {\n                      ...prev,\n                      styleMap: newMap\n                    };\n                  });\n                },\n                style: {\n                  marginLeft: '0.5rem'\n                },\n                children: STYLE_OPTIONS.map(opt => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"option\", {\n                  value: opt,\n                  children: opt\n                }, opt))\n              })]\n            }, kind))]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n            style: {\n              marginBottom: '0.5rem'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: '0.25rem'\n              },\n              children: \"Custom Regex Patterns (one per line)\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"textarea\", {\n              value: (editingPreset.customRegex || []).join('\\n'),\n              onChange: e => {\n                const lines = e.target.value.split(/\\n+/).map(s => s.trim()).filter(Boolean);\n                setEditingPreset(prev => ({\n                  ...prev,\n                  customRegex: lines\n                }));\n              },\n              style: {\n                width: '100%',\n                height: '80px',\n                padding: '0.25rem',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                fontFamily: 'monospace'\n              }\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n              onClick: () => {\n                setEditingPreset(null);\n              },\n              style: {\n                marginRight: '0.5rem',\n                padding: '0.5rem 1rem',\n                backgroundColor: '#6b7280',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px'\n              },\n              children: \"Back\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"button\", {\n              onClick: () => {\n                // When creating a new preset, generate an ID based on the name\n                let id = editingPreset.id;\n                const name = editingPreset.name.trim();\n                if (!id) {\n                  id = name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n                }\n                const presetToSave = {\n                  id,\n                  name: editingPreset.name,\n                  enabledKinds: editingPreset.enabledKinds,\n                  styleMap: editingPreset.styleMap,\n                  customRegex: editingPreset.customRegex\n                };\n                (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__.savePreset)(presetToSave);\n                setPresets((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_4__.listPresets)());\n                setPresetId(id);\n                setEditingPreset(null);\n                setShowPresetEditor(false);\n              },\n              style: {\n                padding: '0.5rem 1rem',\n                backgroundColor: '#10b981',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px'\n              },\n              children: \"Save\"\n            })]\n          })]\n        })]\n      })\n    })]\n  });\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages/module.compiled */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n/* harmony import */ var _pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/index.tsx */ \"./pages/index.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__]);\n_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"default\"));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getStaticProps\");\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getStaticPaths\");\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getServerSideProps\");\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"config\");\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"reportWebVitals\");\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticProps\");\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticPaths\");\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticParams\");\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerProps\");\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerSideProps\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/index\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    components: {\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default())\n    },\n    userland: _pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMS4wX0BiYWJlbCtjb3JlQDcuMjguM19yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMF9fcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVMmcGFnZT0lMkYmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmluZGV4LnRzeCZhYnNvbHV0ZUFwcFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCZhYnNvbHV0ZURvY3VtZW50UGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfZG9jdW1lbnQmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ2hDO0FBQ0w7QUFDMUQ7QUFDb0Q7QUFDVjtBQUMxQztBQUM4QztBQUM5QztBQUNBLGlFQUFlLHdFQUFLLENBQUMsNkNBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sdUJBQXVCLHdFQUFLLENBQUMsNkNBQVE7QUFDckMsdUJBQXVCLHdFQUFLLENBQUMsNkNBQVE7QUFDckMsMkJBQTJCLHdFQUFLLENBQUMsNkNBQVE7QUFDekMsZUFBZSx3RUFBSyxDQUFDLDZDQUFRO0FBQzdCLHdCQUF3Qix3RUFBSyxDQUFDLDZDQUFRO0FBQzdDO0FBQ08sZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsaUNBQWlDLHdFQUFLLENBQUMsNkNBQVE7QUFDL0MsZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsb0NBQW9DLHdFQUFLLENBQUMsNkNBQVE7QUFDekQ7QUFDTyx3QkFBd0IseUdBQWdCO0FBQy9DO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsV0FBVztBQUNYLGdCQUFnQjtBQUNoQixLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQsaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8/NGQxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc1JvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIGFwcCBhbmQgZG9jdW1lbnQgbW9kdWxlcy5cbmltcG9ydCBEb2N1bWVudCBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19kb2N1bWVudFwiO1xuaW1wb3J0IEFwcCBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2luZGV4LnRzeFwiO1xuLy8gUmUtZXhwb3J0IHRoZSBjb21wb25lbnQgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBtZXRob2RzLlxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U3RhdGljUHJvcHNcIik7XG5leHBvcnQgY29uc3QgZ2V0U3RhdGljUGF0aHMgPSBob2lzdCh1c2VybGFuZCwgXCJnZXRTdGF0aWNQYXRoc1wiKTtcbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgXCJnZXRTZXJ2ZXJTaWRlUHJvcHNcIik7XG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuZXhwb3J0IGNvbnN0IHJlcG9ydFdlYlZpdGFscyA9IGhvaXN0KHVzZXJsYW5kLCBcInJlcG9ydFdlYlZpdGFsc1wiKTtcbi8vIFJlLWV4cG9ydCBsZWdhY3kgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1Byb3BzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U3RhdGljUGF0aHNcIik7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U3RhdGljUGFyYW1zID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U3RhdGljUGFyYW1zXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U2VydmVyUHJvcHNcIik7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVMsXG4gICAgICAgIHBhZ2U6IFwiL2luZGV4XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgY29tcG9uZW50czoge1xuICAgICAgICBBcHAsXG4gICAgICAgIERvY3VtZW50XG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "../core-detect/dist/detectors/index.js":
/*!**********************************************!*\
  !*** ../core-detect/dist/detectors/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectToken: () => (/* binding */ detectToken),\n/* harmony export */   isAWSKey: () => (/* binding */ isAWSKey),\n/* harmony export */   isJWT: () => (/* binding */ isJWT),\n/* harmony export */   isLuhnValid: () => (/* binding */ isLuhnValid),\n/* harmony export */   isValidIBAN: () => (/* binding */ isValidIBAN),\n/* harmony export */   isValidSSN: () => (/* binding */ isValidSSN)\n/* harmony export */ });\n/**\n * Determine whether a string of digits represents a valid PAN according\n * to the Luhn checksum algorithm.  Only digits are considered; all\n * non‑numeric characters should be stripped before calling this function.\n */\nfunction isLuhnValid(value) {\n    let sum = 0;\n    let shouldDouble = false;\n    for (let i = value.length - 1; i >= 0; i--) {\n        const c = value.charCodeAt(i) - 48;\n        if (c < 0 || c > 9) {\n            return false;\n        }\n        let digit = c;\n        if (shouldDouble) {\n            digit *= 2;\n            if (digit > 9)\n                digit -= 9;\n        }\n        sum += digit;\n        shouldDouble = !shouldDouble;\n    }\n    return sum % 10 === 0;\n}\n/**\n * Validate an International Bank Account Number (IBAN) using the MOD 97\n * algorithm defined in ISO 13616.  Letters are mapped A=10, B=11, …\n * The function returns true when the IBAN appears structurally valid.  It\n * does not verify that the account exists.\n */\nfunction isValidIBAN(iban) {\n    const cleaned = iban.replace(/\\s+/g, '').toUpperCase();\n    // Basic length check: IBANs are between 15 and 34 characters long\n    if (cleaned.length < 15 || cleaned.length > 34)\n        return false;\n    // Move the four initial characters to the end of the string\n    const rearranged = cleaned.slice(4) + cleaned.slice(0, 4);\n    // Replace letters with numbers: A=10, B=11, …\n    let numeric = '';\n    for (const ch of rearranged) {\n        const code = ch.charCodeAt(0);\n        if (code >= 48 && code <= 57) {\n            numeric += ch;\n        }\n        else if (code >= 65 && code <= 90) {\n            numeric += (code - 55).toString();\n        }\n        else {\n            return false;\n        }\n    }\n    // Compute the remainder using mod 97\n    let remainder = 0;\n    for (let i = 0; i < numeric.length; i++) {\n        remainder = (remainder * 10 + Number(numeric[i])) % 97;\n    }\n    return remainder === 1;\n}\n/**\n * Validate a US Social Security Number (SSN).  Performs basic\n * structural checks: XXX-XX-XXXX where the area number is not 000,\n * 666, or between 900–999; the group number is not 00; and the serial\n * number is not 0000.\n */\nfunction isValidSSN(value) {\n    const ssnRegex = /^(\\d{3})-(\\d{2})-(\\d{4})$/;\n    const match = ssnRegex.exec(value);\n    if (!match)\n        return false;\n    const area = parseInt(match[1], 10);\n    const group = parseInt(match[2], 10);\n    const serial = parseInt(match[3], 10);\n    if (area === 0 || group === 0 || serial === 0)\n        return false;\n    if (area === 666 || area >= 900)\n        return false;\n    return true;\n}\n/** Detect whether a token is formatted like a JSON Web Token (JWT). */\nfunction isJWT(value) {\n    return /^[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]+$/.test(value.trim());\n}\n/** Detect whether a token looks like an AWS access key ID.  AWS keys\n * typically start with AKIA or ASIA followed by 16 uppercase letters or\n * digits. */\nfunction isAWSKey(value) {\n    return /^(A(KIA|SIA)[A-Z0-9]{16})$/.test(value.trim());\n}\n/**\n * Perform high‑level detection for a single token.  If the token matches\n * a sensitive pattern, this function returns an object describing the\n * detection; otherwise it returns null.  Note that this function does\n * not compute bounding boxes – it only classifies the token.  Bounding\n * boxes are provided by the OCR engine.\n */\nfunction detectToken(token) {\n    const raw = token.trim();\n    if (!raw)\n        return null;\n    // Detect names (proper nouns) – starts with uppercase letter followed by lowercase letters\n    // and not purely numeric.  Short words like \"AI\" or all uppercase words are ignored.\n    const namePattern = /^[A-Z][a-z]{2,}$/;\n    if (namePattern.test(raw) && !/\\d/.test(raw) && raw.toUpperCase() !== raw) {\n        return { kind: 'NAME', reason: 'Likely proper name' };\n    }\n    // Detect addresses: tokens that look like street types or contain digits\n    const streetTypes = /^(Street|St\\.?|Avenue|Ave\\.?|Road|Rd\\.?|Lane|Ln\\.?|Boulevard|Blvd\\.?|Drive|Dr\\.?)$/i;\n    if (/\\d/.test(raw) && raw.length >= 3) {\n        return { kind: 'ADDRESS', reason: 'Contains digits and could be part of an address' };\n    }\n    if (streetTypes.test(raw)) {\n        return { kind: 'ADDRESS', reason: 'Street type indicator' };\n    }\n    // Email\n    const emailPattern = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    if (emailPattern.test(raw)) {\n        return { kind: 'EMAIL', reason: 'Matches email pattern' };\n    }\n    // Phone number (very permissive, minimum 7 digits)\n    const digitsOnly = raw.replace(/\\D/g, '');\n    if (digitsOnly.length >= 7 && /\\d{3,}/.test(digitsOnly)) {\n        // Simple heuristic: if it contains 10–15 digits and is not part of another pattern\n        if (digitsOnly.length >= 10 && digitsOnly.length <= 15) {\n            return { kind: 'PHONE', reason: 'Potential phone number' };\n        }\n    }\n    // PAN (credit card number) – 13–19 digits with Luhn valid\n    if (digitsOnly.length >= 13 && digitsOnly.length <= 19 && isLuhnValid(digitsOnly)) {\n        return { kind: 'PAN', reason: 'Luhn valid primary account number' };\n    }\n    // IBAN (starts with two letters followed by digits and letters)\n    const ibanPattern = /^[A-Z]{2}[0-9A-Z]{13,32}$/i;\n    if (ibanPattern.test(raw) && isValidIBAN(raw)) {\n        return { kind: 'IBAN', reason: 'Valid IBAN checksum' };\n    }\n    // SSN (US format)\n    const ssnPattern = /^\\d{3}-\\d{2}-\\d{4}$/;\n    if (ssnPattern.test(raw) && isValidSSN(raw)) {\n        return { kind: 'SSN', reason: 'Valid US SSN format' };\n    }\n    // JWT\n    if (isJWT(raw)) {\n        return { kind: 'JWT', reason: 'Looks like a JWT token' };\n    }\n    // AWS access key id\n    if (isAWSKey(raw)) {\n        return { kind: 'API_KEY', reason: 'Looks like an AWS access key' };\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/detectors/index.js\n");

/***/ }),

/***/ "../core-detect/dist/index.js":
/*!************************************!*\
  !*** ../core-detect/dist/index.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* reexport safe */ _pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__.analyzeDocument),\n/* harmony export */   applyRedactions: () => (/* reexport safe */ _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__.applyRedactions),\n/* harmony export */   deletePreset: () => (/* reexport safe */ _presets__WEBPACK_IMPORTED_MODULE_3__.deletePreset),\n/* harmony export */   getPreset: () => (/* reexport safe */ _presets__WEBPACK_IMPORTED_MODULE_3__.getPreset),\n/* harmony export */   listPresets: () => (/* reexport safe */ _presets__WEBPACK_IMPORTED_MODULE_3__.listPresets),\n/* harmony export */   savePreset: () => (/* reexport safe */ _presets__WEBPACK_IMPORTED_MODULE_3__.savePreset)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"../core-detect/dist/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"analyzeDocument\",\"applyRedactions\",\"listPresets\",\"getPreset\",\"savePreset\",\"deletePreset\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline/analyze */ \"../core-detect/dist/pipeline/analyze.js\");\n/* harmony import */ var _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pipeline/apply */ \"../core-detect/dist/pipeline/apply.js\");\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./presets */ \"../core-detect/dist/presets.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__, _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__]);\n([_pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__, _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS1kZXRlY3QvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdCO0FBQzZCO0FBQ0Y7QUFDMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8uLi9jb3JlLWRldGVjdC9kaXN0L2luZGV4LmpzPzVlY2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi90eXBlcyc7XG5leHBvcnQgeyBhbmFseXplRG9jdW1lbnQgfSBmcm9tICcuL3BpcGVsaW5lL2FuYWx5emUnO1xuZXhwb3J0IHsgYXBwbHlSZWRhY3Rpb25zIH0gZnJvbSAnLi9waXBlbGluZS9hcHBseSc7XG5leHBvcnQgeyBsaXN0UHJlc2V0cywgZ2V0UHJlc2V0LCBzYXZlUHJlc2V0LCBkZWxldGVQcmVzZXQgfSBmcm9tICcuL3ByZXNldHMnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core-detect/dist/index.js\n");

/***/ }),

/***/ "../core-detect/dist/pipeline/analyze.js":
/*!***********************************************!*\
  !*** ../core-detect/dist/pipeline/analyze.js ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* binding */ analyzeDocument)\n/* harmony export */ });\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../detectors */ \"../core-detect/dist/detectors/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tesseract.js */ \"../../node_modules/.pnpm/tesseract.js@4.1.4/node_modules/tesseract.js/src/index.js\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tesseract_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdfjs-dist */ \"pdfjs-dist\");\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var jsqr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jsqr */ \"jsqr\");\n/* harmony import */ var jsqr__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jsqr__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../presets */ \"../core-detect/dist/presets.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([uuid__WEBPACK_IMPORTED_MODULE_0__]);\nuuid__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Barcode detection library.  jsQR is a small library that can scan QR codes\n// and linear barcodes from image pixel data.  It returns the location of the\n// detected code if one is found.  See https://github.com/cozmo/jsQR for details.\n\n// Import preset utilities to allow filtering detections based on enabled kinds\n\n/*\n * The analyse pipeline orchestrates OCR and token detection for both images\n * and PDFs.  It uses native OCR when available (via Capacitor plugins) and\n * falls back to Tesseract.js running in the browser or a web worker.  PDF\n * pages are rendered to canvases via pdfjs-dist, then treated like images.\n */\n/** Convert a File/Blob to a Data URI. */\nasync function fileToDataURL(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(file);\n    });\n}\n/** Perform OCR on a data URL and return detections. */\nasync function analyzeImageDataURL(dataURL, pageIndex = 0) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    // Optionally perform a simple document auto‑crop before running OCR.  Many\n    // scanned documents contain large white margins.  Cropping to the\n    // bounding rectangle of non‑white pixels improves OCR accuracy and\n    // reduces processing time.  We detect the smallest rectangle that\n    // contains all pixels whose brightness is below a threshold.  If the\n    // resulting crop covers almost the entire image (>95%), we skip the\n    // crop to avoid losing content.  This heuristic is cheap to compute\n    // and does not require external dependencies.  See docs/ROADMAP.md.\n    async function autoCrop(dataUrl) {\n        return new Promise(resolve => {\n            const img = new Image();\n            img.onload = () => {\n                const canvas = document.createElement('canvas');\n                canvas.width = img.width;\n                canvas.height = img.height;\n                const ctx = canvas.getContext('2d');\n                if (!ctx) {\n                    resolve(dataUrl);\n                    return;\n                }\n                ctx.drawImage(img, 0, 0);\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                const data = imageData.data;\n                let minX = canvas.width;\n                let maxX = 0;\n                let minY = canvas.height;\n                let maxY = 0;\n                // Threshold to consider a pixel as background (very light)\n                const isBg = (r, g, b) => r > 230 && g > 230 && b > 230;\n                for (let y = 0; y < canvas.height; y++) {\n                    for (let x = 0; x < canvas.width; x++) {\n                        const idx = (y * canvas.width + x) * 4;\n                        const r = data[idx];\n                        const g = data[idx + 1];\n                        const b = data[idx + 2];\n                        if (!isBg(r, g, b)) {\n                            if (x < minX)\n                                minX = x;\n                            if (x > maxX)\n                                maxX = x;\n                            if (y < minY)\n                                minY = y;\n                            if (y > maxY)\n                                maxY = y;\n                        }\n                    }\n                }\n                // If no foreground found, return original\n                if (minX > maxX || minY > maxY) {\n                    resolve(dataUrl);\n                    return;\n                }\n                // Compute bounds width/height\n                const bw = maxX - minX;\n                const bh = maxY - minY;\n                // If crop covers almost entire image, skip cropping\n                if (bw / canvas.width > 0.95 && bh / canvas.height > 0.95) {\n                    resolve(dataUrl);\n                    return;\n                }\n                // Expand crop by 5% margins to avoid cutting content\n                const marginX = Math.floor(bw * 0.05);\n                const marginY = Math.floor(bh * 0.05);\n                const cropX = Math.max(0, minX - marginX);\n                const cropY = Math.max(0, minY - marginY);\n                const cropW = Math.min(canvas.width - cropX, bw + marginX * 2);\n                const cropH = Math.min(canvas.height - cropY, bh + marginY * 2);\n                const croppedCanvas = document.createElement('canvas');\n                croppedCanvas.width = cropW;\n                croppedCanvas.height = cropH;\n                const cctx = croppedCanvas.getContext('2d');\n                if (!cctx) {\n                    resolve(dataUrl);\n                    return;\n                }\n                cctx.drawImage(canvas, cropX, cropY, cropW, cropH, 0, 0, cropW, cropH);\n                resolve(croppedCanvas.toDataURL());\n            };\n            img.onerror = () => resolve(dataUrl);\n            img.src = dataUrl;\n        });\n    }\n    // Run Tesseract on the original Data URL.  Cropping is disabled by\n    // default because adjusting bounding boxes back to the original\n    // coordinates is non‑trivial.  To experiment with auto‑crop, call\n    // autoCrop() on dataURL and adjust bounding boxes accordingly.\n    const result = await tesseract_js__WEBPACK_IMPORTED_MODULE_1___default().recognize(dataURL, 'eng', { logger: () => { } });\n    const { words } = result.data;\n    const detections = [];\n    // Determine image dimensions\n    const img = new Image();\n    await new Promise(resolve => {\n        img.onload = resolve;\n        img.src = dataURL;\n    });\n    const width = img.width;\n    const height = img.height;\n    for (const word of words) {\n        const text = (word.text || '').trim();\n        if (!text)\n            continue;\n        const match = (0,_detectors__WEBPACK_IMPORTED_MODULE_4__.detectToken)(text);\n        if (match) {\n            const { kind, reason } = match;\n            const bbox = word.bbox;\n            const x0 = (_b = (_a = bbox.x0) !== null && _a !== void 0 ? _a : bbox.left) !== null && _b !== void 0 ? _b : 0;\n            const y0 = (_d = (_c = bbox.y0) !== null && _c !== void 0 ? _c : bbox.top) !== null && _d !== void 0 ? _d : 0;\n            const x1 = (_f = (_e = bbox.x1) !== null && _e !== void 0 ? _e : bbox.right) !== null && _f !== void 0 ? _f : 0;\n            const y1 = (_h = (_g = bbox.y1) !== null && _g !== void 0 ? _g : bbox.bottom) !== null && _h !== void 0 ? _h : 0;\n            const box = {\n                x: x0 / width,\n                y: y0 / height,\n                w: (x1 - x0) / width,\n                h: (y1 - y0) / height,\n                page: pageIndex\n            };\n            detections.push({\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)(),\n                kind: kind,\n                box,\n                confidence: (_j = word.confidence) !== null && _j !== void 0 ? _j : 0.9,\n                reason,\n                preview: text\n            });\n        }\n    }\n    // Barcode detection using jsQR.  Draw the image onto a temporary canvas\n    // and scan its pixels.  jsQR returns null if no code is found.\n    try {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.drawImage(img, 0, 0, width, height);\n            const imageData = ctx.getImageData(0, 0, width, height);\n            const code = jsqr__WEBPACK_IMPORTED_MODULE_3___default()(imageData.data, imageData.width, imageData.height);\n            if (code && code.location) {\n                // Compute bounding box from corner points\n                const { topLeftCorner, topRightCorner, bottomRightCorner, bottomLeftCorner } = code.location;\n                const xs = [topLeftCorner.x, topRightCorner.x, bottomRightCorner.x, bottomLeftCorner.x];\n                const ys = [topLeftCorner.y, topRightCorner.y, bottomRightCorner.y, bottomLeftCorner.y];\n                const minX = Math.min(...xs);\n                const maxX = Math.max(...xs);\n                const minY = Math.min(...ys);\n                const maxY = Math.max(...ys);\n                const bbox = {\n                    x: minX / width,\n                    y: minY / height,\n                    w: (maxX - minX) / width,\n                    h: (maxY - minY) / height,\n                    page: pageIndex\n                };\n                detections.push({\n                    id: (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)(),\n                    kind: 'BARCODE',\n                    box: bbox,\n                    confidence: 1,\n                    reason: 'Detected barcode/QR code',\n                    preview: (_k = code.data) === null || _k === void 0 ? void 0 : _k.slice(0, 64) // show truncated payload\n                });\n            }\n        }\n    }\n    catch (err) {\n        // eslint-disable-next-line no-console\n        console.warn('Barcode detection failed:', err);\n    }\n    return detections;\n}\n/** Analyse a single file (image or PDF) and return detections across all pages. */\n// Import preset utilities at the top level\nasync function analyzeDocument(file, opts = {}) {\n    // Determine the MIME type from the file object if possible\n    const type = file.type || '';\n    const detections = [];\n    let pages = 1;\n    if (type === 'application/pdf') {\n        // Read the PDF into an ArrayBuffer\n        const buffer = await file.arrayBuffer();\n        // Configure worker for pdfjs if running in a browser\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.GlobalWorkerOptions && pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.workerSrc === undefined) {\n            // Provide a default worker if none was set.  This requires that\n            // `pdfjs-dist/build/pdf.worker.js` is available in the bundle.\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const workerSrc = __webpack_require__(/*! pdfjs-dist/build/pdf.worker.js */ \"pdfjs-dist/build/pdf.worker.js\");\n                pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.GlobalWorkerOptions.workerSrc = workerSrc;\n            }\n            catch (e) {\n                // ignore if require fails – pdfjs will attempt to fallback\n            }\n        }\n        const loadingTask = pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.getDocument({ data: buffer });\n        const pdf = await loadingTask.promise;\n        pages = pdf.numPages;\n        for (let i = 1; i <= pages; i++) {\n            const page = await pdf.getPage(i);\n            const viewport = page.getViewport({ scale: 1.0 });\n            const canvas = document.createElement('canvas');\n            canvas.width = viewport.width;\n            canvas.height = viewport.height;\n            const context = canvas.getContext('2d');\n            if (!context)\n                continue;\n            const renderContext = { canvasContext: context, viewport };\n            await page.render(renderContext).promise;\n            const dataURL = canvas.toDataURL();\n            const pageDetections = await analyzeImageDataURL(dataURL, i - 1);\n            detections.push(...pageDetections);\n        }\n    }\n    else {\n        // Assume image\n        const dataURL = await fileToDataURL(file);\n        const imgDetections = await analyzeImageDataURL(dataURL, 0);\n        detections.push(...imgDetections);\n    }\n    // Filter detections by preset if provided\n    if (opts.presetId) {\n        const preset = (0,_presets__WEBPACK_IMPORTED_MODULE_5__.getPreset)(opts.presetId);\n        if (preset && preset.enabledKinds && preset.enabledKinds.length > 0) {\n            // Remove detections whose kind is not enabled\n            for (let i = detections.length - 1; i >= 0; i--) {\n                if (!preset.enabledKinds.includes(detections[i].kind)) {\n                    detections.splice(i, 1);\n                }\n            }\n        }\n    }\n    return { detections, pages };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/pipeline/analyze.js\n");

/***/ }),

/***/ "../core-detect/dist/pipeline/apply.js":
/*!*********************************************!*\
  !*** ../core-detect/dist/pipeline/apply.js ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* binding */ analyzeDocument),\n/* harmony export */   applyRedactions: () => (/* binding */ applyRedactions)\n/* harmony export */ });\n/* harmony import */ var _analyze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analyze */ \"../core-detect/dist/pipeline/analyze.js\");\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdf-lib */ \"../../node_modules/.pnpm/pdf-lib@1.17.1/node_modules/pdf-lib/cjs/index.js\");\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pdf_lib__WEBPACK_IMPORTED_MODULE_0__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_analyze__WEBPACK_IMPORTED_MODULE_1__]);\n_analyze__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// A module‑scoped variable to store the last analysis result.  applyRedactions()\n// uses this map to resolve detection IDs to bounding boxes.  In a real\n// application you should pass the detections directly to avoid shared\n// mutable state.  This simplified implementation is sufficient for the\n// demonstration.\nlet lastResult = null;\n/** Override the exported analyse function to capture the last result. */\nasync function analyzeDocument(file, opts = {}) {\n    const result = await (0,_analyze__WEBPACK_IMPORTED_MODULE_1__.analyzeDocument)(file, opts);\n    lastResult = result;\n    return result;\n}\n/** Internal helper: convert a canvas to a data URI. */\nfunction canvasToDataURL(canvas, mimeType = 'image/png', quality = 0.92) {\n    return canvas.toDataURL(mimeType, quality);\n}\n/** Internal helper: convert a File/Blob into a HTMLImageElement. */\nasync function fileToImage(file) {\n    const dataURL = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(file);\n    });\n    const img = new Image();\n    await new Promise(resolve => {\n        img.onload = () => resolve();\n        img.src = dataURL;\n    });\n    return img;\n}\n/** Apply redactions to an image.  Returns a Data URI. */\nasync function applyRedactionsToImage(file, actions, quality = 0.92) {\n    const img = await fileToImage(file);\n    const canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        throw new Error('Cannot obtain 2D context');\n    // Draw original image\n    ctx.drawImage(img, 0, 0);\n    // Build detection map\n    const map = new Map();\n    if (lastResult) {\n        for (const det of lastResult.detections) {\n            map.set(det.id, det);\n        }\n    }\n    // Utility helpers for drawing various redaction styles on images\n    function drawBox(x, y, w, h) {\n        ctx.fillStyle = 'black';\n        ctx.fillRect(x, y, w, h);\n    }\n    // Apply a CSS blur filter to a region by drawing the original image with\n    // the filter enabled only for that region.  Canvas 2D `filter` is\n    // supported in modern browsers.  We temporarily clip the context to\n    // restrict the blur effect to the redaction box.\n    function drawBlur(x, y, w, h) {\n        ctx.save();\n        ctx.filter = 'blur(8px)';\n        ctx.beginPath();\n        ctx.rect(x, y, w, h);\n        ctx.clip();\n        ctx.drawImage(img, 0, 0);\n        ctx.restore();\n    }\n    // Pixelate by drawing the region scaled down and back up.  Choose a\n    // pixel size relative to region size to maintain some obfuscation but\n    // not degrade performance too much.\n    function drawPixelate(x, y, w, h) {\n        const pixelSize = Math.max(4, Math.floor(Math.min(w, h) / 10));\n        // Create a temporary canvas to hold the region scaled down\n        const tempCanvas = document.createElement('canvas');\n        tempCanvas.width = Math.max(1, Math.floor(w / pixelSize));\n        tempCanvas.height = Math.max(1, Math.floor(h / pixelSize));\n        const tctx = tempCanvas.getContext('2d');\n        if (!tctx) {\n            drawBox(x, y, w, h);\n            return;\n        }\n        // Draw the region scaled down onto the temp canvas\n        tctx.drawImage(img, x, y, w, h, 0, 0, tempCanvas.width, tempCanvas.height);\n        // Now draw the scaled up version onto the main canvas to pixelate\n        ctx.imageSmoothingEnabled = false;\n        ctx.drawImage(tempCanvas, 0, 0, tempCanvas.width, tempCanvas.height, x, y, w, h);\n        ctx.imageSmoothingEnabled = true;\n    }\n    // Draw a label over the region.  Fill a semi‑opaque box then draw\n    // the label text centred within.  When the label is too long to fit,\n    // truncate and append an ellipsis.\n    function drawLabel(x, y, w, h, text) {\n        ctx.save();\n        ctx.fillStyle = 'black';\n        ctx.fillRect(x, y, w, h);\n        ctx.fillStyle = 'white';\n        const fontSize = Math.max(10, Math.floor(h * 0.6));\n        ctx.font = `${fontSize}px sans-serif`;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        // Truncate text if it won't fit\n        let label = text;\n        const maxWidth = w - 4;\n        while (ctx.measureText(label).width > maxWidth && label.length > 1) {\n            label = label.slice(0, -1);\n        }\n        if (label !== text) {\n            label = label.slice(0, -1) + '…';\n        }\n        ctx.fillText(label, x + w / 2, y + h / 2);\n        ctx.restore();\n    }\n    // Draw a mask that obscures all but the last four characters of the\n    // provided preview text.  The mask uses asterisks for the hidden\n    // portion.  Non‑digit characters are preserved in their positions.\n    function drawMaskLast4(x, y, w, h, preview) {\n        const text = preview || '';\n        // Keep only last 4 alphanumeric characters; replace preceding\n        // characters (letters or digits) with asterisks but preserve spaces and other symbols.\n        let masked = '';\n        let remaining = 4;\n        for (let i = text.length - 1; i >= 0; i--) {\n            const ch = text[i];\n            if (/\\w/.test(ch) && remaining > 0) {\n                masked = ch + masked;\n                remaining--;\n            }\n            else if (/\\w/.test(ch)) {\n                masked = '*' + masked;\n            }\n            else {\n                masked = ch + masked;\n            }\n        }\n        drawLabel(x, y, w, h, masked);\n    }\n    // Draw redactions using the selected style for each action.  If the\n    // style is not recognised, fallback to a solid box.\n    actions.forEach(action => {\n        const det = map.get(action.detectionId);\n        if (!det)\n            return;\n        const { box } = det;\n        const x = box.x * canvas.width;\n        const y = box.y * canvas.height;\n        const w = box.w * canvas.width;\n        const h = box.h * canvas.height;\n        switch (action.style) {\n            case 'BLUR':\n                drawBlur(x, y, w, h);\n                break;\n            case 'PIXELATE':\n                drawPixelate(x, y, w, h);\n                break;\n            case 'LABEL':\n                drawLabel(x, y, w, h, action.labelText || det.kind);\n                break;\n            case 'MASK_LAST4':\n                drawMaskLast4(x, y, w, h, det.preview);\n                break;\n            case 'REMOVE_METADATA':\n                // Metadata removal is handled by re‑encoding the image; no\n                // drawing needed for this redaction.\n                break;\n            default:\n                drawBox(x, y, w, h);\n        }\n    });\n    // Return a data URI without metadata (re‑encoding strips EXIF)\n    return canvas.toDataURL('image/jpeg', quality);\n}\n/** Apply redactions to a PDF.  Returns a Data URI of the new PDF. */\nasync function applyRedactionsToPdf(file, actions) {\n    const origBytes = await file.arrayBuffer();\n    const origPdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(origBytes);\n    const newPdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.create();\n    const detectionMap = new Map();\n    if (lastResult) {\n        for (const det of lastResult.detections) {\n            detectionMap.set(det.id, det);\n        }\n    }\n    const total = origPdf.getPageCount();\n    for (let i = 0; i < total; i++) {\n        const [copiedPage] = await newPdf.copyPages(origPdf, [i]);\n        newPdf.addPage(copiedPage);\n        const { width, height } = copiedPage.getSize();\n        // Filter actions for this page\n        const pageActions = actions.filter(act => {\n            var _a;\n            const det = detectionMap.get(act.detectionId);\n            return det && ((_a = det.box.page) !== null && _a !== void 0 ? _a : 0) === i;\n        });\n        // Draw each redaction.  Always draw a black rectangle; then if the\n        // style supports text (LABEL or MASK_LAST4) overlay text on top.\n        for (const action of pageActions) {\n            const det = detectionMap.get(action.detectionId);\n            if (!det)\n                continue;\n            const { box } = det;\n            const x = box.x * width;\n            // Convert from top-left origin to PDF bottom-left origin\n            const y = (1 - box.y - box.h) * height;\n            const w = box.w * width;\n            const h = box.h * height;\n            // Draw base rectangle\n            copiedPage.drawRectangle({\n                x,\n                y,\n                width: w,\n                height: h,\n                color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0),\n                opacity: 1\n            });\n            // Overlay text for LABEL or MASK_LAST4\n            if (action.style === 'LABEL' || action.style === 'MASK_LAST4') {\n                let text = '';\n                if (action.style === 'LABEL') {\n                    text = action.labelText || det.kind;\n                }\n                else if (action.style === 'MASK_LAST4') {\n                    const preview = det.preview || '';\n                    // Mask all but last four alphanumeric characters\n                    let masked = '';\n                    let remaining = 4;\n                    for (let i = preview.length - 1; i >= 0; i--) {\n                        const ch = preview[i];\n                        if (/\\w/.test(ch) && remaining > 0) {\n                            masked = ch + masked;\n                            remaining--;\n                        }\n                        else if (/\\w/.test(ch)) {\n                            masked = '*' + masked;\n                        }\n                        else {\n                            masked = ch + masked;\n                        }\n                    }\n                    text = masked;\n                }\n                // Ensure font size reasonably scales with height\n                const fontSize = Math.max(8, h * 0.6);\n                // Constrain text width; if too long, truncate and add ellipsis\n                let label = text;\n                // pdf-lib drawText does not provide measureText; approximate by\n                // character count relative to width and font size\n                const maxChars = Math.floor((w - 4) / (fontSize * 0.6));\n                if (label.length > maxChars) {\n                    label = label.slice(0, maxChars > 3 ? maxChars - 1 : 0) + '…';\n                }\n                // Approximate horizontal centering.  Estimate each character width as\n                // 0.6 × fontSize and compute offset relative to the region width.\n                const estTextWidth = label.length * fontSize * 0.6;\n                const xOffset = (w - estTextWidth) / 2;\n                copiedPage.drawText(label, {\n                    x: x + Math.max(0, xOffset),\n                    y: y + h / 2 - fontSize / 2,\n                    size: fontSize,\n                    color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(1, 1, 1)\n                });\n            }\n        }\n    }\n    const pdfBytes = await newPdf.save();\n    const base64 = typeof Buffer !== 'undefined' ? Buffer.from(pdfBytes).toString('base64') : btoa(String.fromCharCode(...new Uint8Array(pdfBytes)));\n    return `data:application/pdf;base64,${base64}`;\n}\n/**\n * Apply redactions to a file using the previously analysed detections.\n *\n * Note: This implementation relies on `lastResult` set by analyzeDocument().\n * In a real application you should pass the detections explicitly to avoid\n * hidden state.\n */\nasync function applyRedactions(file, actions, opts) {\n    var _a;\n    if (!lastResult) {\n        throw new Error('No analysis result available.  Call analyzeDocument() first.');\n    }\n    const mime = file.type || '';\n    let fileUri;\n    if (mime === 'application/pdf' || opts.output === 'pdf') {\n        fileUri = await applyRedactionsToPdf(file, actions);\n    }\n    else {\n        const quality = (_a = opts.quality) !== null && _a !== void 0 ? _a : 0.92;\n        fileUri = await applyRedactionsToImage(file, actions, quality);\n    }\n    // Build a simple report summarising redactions\n    const report = {};\n    if (lastResult) {\n        report.totalDetections = lastResult.detections.length;\n        report.redactedCount = actions.length;\n        const counts = {};\n        for (const action of actions) {\n            const det = lastResult.detections.find(d => d.id === action.detectionId);\n            if (det) {\n                counts[det.kind] = (counts[det.kind] || 0) + 1;\n            }\n        }\n        report.byKind = counts;\n    }\n    return { fileUri, report };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/pipeline/apply.js\n");

/***/ }),

/***/ "../core-detect/dist/presets.js":
/*!**************************************!*\
  !*** ../core-detect/dist/presets.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PRESETS: () => (/* binding */ PRESETS),\n/* harmony export */   deletePreset: () => (/* binding */ deletePreset),\n/* harmony export */   getPreset: () => (/* binding */ getPreset),\n/* harmony export */   listPresets: () => (/* binding */ listPresets),\n/* harmony export */   savePreset: () => (/* binding */ savePreset)\n/* harmony export */ });\n// Predefined presets.  These can be customised by the user at runtime via the UI.\nconst PRESETS = [\n    {\n        id: 'developer',\n        name: 'Developer Secrets',\n        enabledKinds: ['EMAIL', 'PHONE', 'PAN', 'JWT', 'API_KEY', 'IBAN', 'SSN'],\n        styleMap: {},\n        customRegex: []\n    },\n    {\n        id: 'work',\n        name: 'Work Screenshot',\n        enabledKinds: ['EMAIL', 'PHONE', 'PAN', 'JWT', 'API_KEY', 'NAME', 'ADDRESS'],\n        styleMap: {},\n        customRegex: []\n    },\n    {\n        id: 'all',\n        name: 'All Detectors',\n        enabledKinds: ['FACE', 'EMAIL', 'PHONE', 'PAN', 'IBAN', 'SSN', 'JWT', 'API_KEY', 'BARCODE', 'NAME', 'ADDRESS', 'OTHER'],\n        styleMap: {},\n        customRegex: []\n    }\n];\n/** Return all registered presets. */\nfunction listPresets() {\n    return PRESETS.slice();\n}\n/** Lookup a preset by its ID. */\nfunction getPreset(id) {\n    return PRESETS.find(p => p.id === id);\n}\n/** Save or update a preset.  If the ID exists, it will be replaced; otherwise it is added. */\nfunction savePreset(preset) {\n    const index = PRESETS.findIndex(p => p.id === preset.id);\n    if (index >= 0) {\n        PRESETS[index] = preset;\n    }\n    else {\n        PRESETS.push(preset);\n    }\n}\n/** Delete a preset by its ID.  If the preset does not exist, no action is taken. */\nfunction deletePreset(id) {\n    const index = PRESETS.findIndex(p => p.id === id);\n    if (index >= 0) {\n        PRESETS.splice(index, 1);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS1kZXRlY3QvZGlzdC9wcmVzZXRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxxRUFBcUU7QUFDOUQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8uLi9jb3JlLWRldGVjdC9kaXN0L3ByZXNldHMuanM/MjI4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQcmVkZWZpbmVkIHByZXNldHMuICBUaGVzZSBjYW4gYmUgY3VzdG9taXNlZCBieSB0aGUgdXNlciBhdCBydW50aW1lIHZpYSB0aGUgVUkuXG5leHBvcnQgY29uc3QgUFJFU0VUUyA9IFtcbiAgICB7XG4gICAgICAgIGlkOiAnZGV2ZWxvcGVyJyxcbiAgICAgICAgbmFtZTogJ0RldmVsb3BlciBTZWNyZXRzJyxcbiAgICAgICAgZW5hYmxlZEtpbmRzOiBbJ0VNQUlMJywgJ1BIT05FJywgJ1BBTicsICdKV1QnLCAnQVBJX0tFWScsICdJQkFOJywgJ1NTTiddLFxuICAgICAgICBzdHlsZU1hcDoge30sXG4gICAgICAgIGN1c3RvbVJlZ2V4OiBbXVxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogJ3dvcmsnLFxuICAgICAgICBuYW1lOiAnV29yayBTY3JlZW5zaG90JyxcbiAgICAgICAgZW5hYmxlZEtpbmRzOiBbJ0VNQUlMJywgJ1BIT05FJywgJ1BBTicsICdKV1QnLCAnQVBJX0tFWScsICdOQU1FJywgJ0FERFJFU1MnXSxcbiAgICAgICAgc3R5bGVNYXA6IHt9LFxuICAgICAgICBjdXN0b21SZWdleDogW11cbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6ICdhbGwnLFxuICAgICAgICBuYW1lOiAnQWxsIERldGVjdG9ycycsXG4gICAgICAgIGVuYWJsZWRLaW5kczogWydGQUNFJywgJ0VNQUlMJywgJ1BIT05FJywgJ1BBTicsICdJQkFOJywgJ1NTTicsICdKV1QnLCAnQVBJX0tFWScsICdCQVJDT0RFJywgJ05BTUUnLCAnQUREUkVTUycsICdPVEhFUiddLFxuICAgICAgICBzdHlsZU1hcDoge30sXG4gICAgICAgIGN1c3RvbVJlZ2V4OiBbXVxuICAgIH1cbl07XG4vKiogUmV0dXJuIGFsbCByZWdpc3RlcmVkIHByZXNldHMuICovXG5leHBvcnQgZnVuY3Rpb24gbGlzdFByZXNldHMoKSB7XG4gICAgcmV0dXJuIFBSRVNFVFMuc2xpY2UoKTtcbn1cbi8qKiBMb29rdXAgYSBwcmVzZXQgYnkgaXRzIElELiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFByZXNldChpZCkge1xuICAgIHJldHVybiBQUkVTRVRTLmZpbmQocCA9PiBwLmlkID09PSBpZCk7XG59XG4vKiogU2F2ZSBvciB1cGRhdGUgYSBwcmVzZXQuICBJZiB0aGUgSUQgZXhpc3RzLCBpdCB3aWxsIGJlIHJlcGxhY2VkOyBvdGhlcndpc2UgaXQgaXMgYWRkZWQuICovXG5leHBvcnQgZnVuY3Rpb24gc2F2ZVByZXNldChwcmVzZXQpIHtcbiAgICBjb25zdCBpbmRleCA9IFBSRVNFVFMuZmluZEluZGV4KHAgPT4gcC5pZCA9PT0gcHJlc2V0LmlkKTtcbiAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgICBQUkVTRVRTW2luZGV4XSA9IHByZXNldDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIFBSRVNFVFMucHVzaChwcmVzZXQpO1xuICAgIH1cbn1cbi8qKiBEZWxldGUgYSBwcmVzZXQgYnkgaXRzIElELiAgSWYgdGhlIHByZXNldCBkb2VzIG5vdCBleGlzdCwgbm8gYWN0aW9uIGlzIHRha2VuLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVByZXNldChpZCkge1xuICAgIGNvbnN0IGluZGV4ID0gUFJFU0VUUy5maW5kSW5kZXgocCA9PiBwLmlkID09PSBpZCk7XG4gICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgICAgUFJFU0VUUy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../core-detect/dist/presets.js\n");

/***/ }),

/***/ "../core-detect/dist/types.js":
/*!************************************!*\
  !*** ../core-detect/dist/types.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS1kZXRlY3QvZGlzdC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8uLi9jb3JlLWRldGVjdC9kaXN0L3R5cGVzLmpzP2I1NjMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core-detect/dist/types.js\n");

/***/ }),

/***/ "jsqr":
/*!***********************!*\
  !*** external "jsqr" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("jsqr");

/***/ }),

/***/ "jszip":
/*!************************!*\
  !*** external "jszip" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("jszip");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "pdfjs-dist":
/*!*****************************!*\
  !*** external "pdfjs-dist" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("pdfjs-dist");

/***/ }),

/***/ "pdfjs-dist/build/pdf.worker.js":
/*!*************************************************!*\
  !*** external "pdfjs-dist/build/pdf.worker.js" ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("pdfjs-dist/build/pdf.worker.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = import("uuid");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?60a5":
/*!**************************!*\
  !*** encoding (ignored) ***!
  \**************************/
/***/ (() => {

/* (ignored) */

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0","vendor-chunks/@swc+helpers@0.5.2","vendor-chunks/pdf-lib@1.17.1","vendor-chunks/tesseract.js@4.1.4","vendor-chunks/@pdf-lib+standard-fonts@1.0.0","vendor-chunks/pako@1.0.11","vendor-chunks/whatwg-url@5.0.0","vendor-chunks/tr46@0.0.3","vendor-chunks/webidl-conversions@3.0.1","vendor-chunks/tslib@1.14.1","vendor-chunks/regenerator-runtime@0.13.11","vendor-chunks/node-fetch@2.7.0","vendor-chunks/is-url@1.2.4","vendor-chunks/is-electron@2.2.2","vendor-chunks/@pdf-lib+upng@1.0.1"], () => (__webpack_exec__("../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();