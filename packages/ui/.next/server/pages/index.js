/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction App({\n  Component,\n  pageProps\n}) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    // Initialize any global app state here\n    console.log('CleanShare Pro UI initialized');\n  }, []);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {\n    ...pageProps\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ2lDO0FBQ0g7QUFBQTtBQUVmLFNBQVNHLEdBQUdBLENBQUM7RUFBRUMsU0FBUztFQUFFQztBQUFvQixDQUFDLEVBQUU7RUFDOURMLGdEQUFTLENBQUMsTUFBTTtJQUNkO0lBQ0FNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLCtCQUErQixDQUFDO0VBQzlDLENBQUMsRUFBRSxFQUFFLENBQUM7RUFFTixvQkFBT0wsc0RBQUEsQ0FBQ0UsU0FBUztJQUFBLEdBQUtDO0VBQVMsQ0FBRyxDQUFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNsZWFuc2hhcmUvdWkvLi9wYWdlcy9fYXBwLnRzeD8yZmJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCdcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gSW5pdGlhbGl6ZSBhbnkgZ2xvYmFsIGFwcCBzdGF0ZSBoZXJlXG4gICAgY29uc29sZS5sb2coJ0NsZWFuU2hhcmUgUHJvIFVJIGluaXRpYWxpemVkJyk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxufSJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJqc3giLCJfanN4IiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CleanSharePro)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\");\n/* harmony import */ var _src_components_PresetManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components/PresetManager */ \"./src/components/PresetManager.tsx\");\n/* harmony import */ var _src_components_HistoryDashboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/components/HistoryDashboard */ \"./src/components/HistoryDashboard.tsx\");\n/* harmony import */ var _src_components_UndoRedoManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/components/UndoRedoManager */ \"./src/components/UndoRedoManager.tsx\");\n/* harmony import */ var _src_components_KeyboardShortcutsHelp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../src/components/KeyboardShortcutsHelp */ \"./src/components/KeyboardShortcutsHelp.tsx\");\n/* harmony import */ var _src_hooks_useUndoRedo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../src/hooks/useUndoRedo */ \"./src/hooks/useUndoRedo.ts\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_components_PresetManager__WEBPACK_IMPORTED_MODULE_1__, _src_components_HistoryDashboard__WEBPACK_IMPORTED_MODULE_2__, _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__]);\n([_src_components_PresetManager__WEBPACK_IMPORTED_MODULE_1__, _src_components_HistoryDashboard__WEBPACK_IMPORTED_MODULE_2__, _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// CleanShare Pro - Modern UI Implementation\n\n\n\n\n\n\n\n\nfunction CleanSharePro() {\n  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [fileStates, setFileStates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [currentFileIndex, setCurrentFileIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [presets, setPresets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [presetId, setPresetId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [proUnlocked, setProUnlocked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showPresetEditor, setShowPresetEditor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showHistoryDashboard, setShowHistoryDashboard] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showUndoRedoManager, setShowUndoRedoManager] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showKeyboardHelp, setShowKeyboardHelp] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [currentSessionId, setCurrentSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [fileProcessingRecords, setFileProcessingRecords] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Map());\n\n  // Undo/Redo system for file states\n  const undoRedoSystem = (0,_src_hooks_useUndoRedo__WEBPACK_IMPORTED_MODULE_5__.useUndoRedo)([], {\n    maxHistorySize: 100\n  });\n\n  // Sync file states with undo/redo system\n  const updateFileStates = (newStates, actionType, description) => {\n    if (actionType && description) {\n      const oldStates = fileStates;\n      undoRedoSystem.execute(actionType, description, () => {\n        setFileStates(oldStates);\n        return oldStates;\n      }, () => {\n        setFileStates(newStates);\n        return newStates;\n      });\n    } else {\n      setFileStates(newStates);\n    }\n  };\n\n  // Load presets on mount and when preset manager updates\n  const loadPresets = () => {\n    // Import listPresets dynamically to avoid SSR issues\n    Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\")).then(({\n      listPresets\n    }) => {\n      const ps = listPresets();\n      setPresets(ps);\n      if (ps.length > 0 && !presetId) {\n        setPresetId(ps[0].id);\n      }\n    });\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    loadPresets();\n  }, []);\n\n  // Keyboard shortcuts\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const handleKeydown = e => {\n      // Only handle shortcuts when not in input fields\n      if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) {\n        return;\n      }\n      const isCtrl = e.ctrlKey || e.metaKey;\n      if (isCtrl && e.key === 'z' && !e.shiftKey) {\n        e.preventDefault();\n        undoRedoSystem.undo();\n      } else if (isCtrl && e.key === 'y' || isCtrl && e.shiftKey && e.key === 'z') {\n        e.preventDefault();\n        undoRedoSystem.redo();\n      } else if (isCtrl && e.key === 'o') {\n        e.preventDefault();\n        document.getElementById('file-input')?.click();\n      } else if (e.key === 'Escape') {\n        // Close any open modals\n        setShowPresetEditor(false);\n        setShowHistoryDashboard(false);\n        setShowUndoRedoManager(false);\n        setShowKeyboardHelp(false);\n      } else if (e.key === '?' || e.key === 'F1') {\n        e.preventDefault();\n        setShowKeyboardHelp(true);\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [undoRedoSystem]);\n\n  // Process files when they change\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (files.length === 0) return;\n    async function processFiles() {\n      setLoading(true);\n      const newStates = [];\n\n      // Start processing session\n      const currentPreset = presets.find(p => p.id === presetId);\n      const sessionId = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.startSession)({\n        totalFiles: files.length,\n        presetId,\n        presetName: currentPreset?.name,\n        analyzeOptions: {\n          presetId\n        }\n      });\n      setCurrentSessionId(sessionId);\n      const processingRecords = new Map();\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const startTime = Date.now();\n\n        // Start tracking this file\n        const recordId = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.startFileProcessing)({\n          sessionId,\n          fileName: file.name,\n          fileSize: file.size,\n          fileType: file.type\n        });\n        processingRecords.set(i, recordId);\n        try {\n          const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.analyzeDocument)(file, {\n            presetId\n          });\n          const analysisTime = Date.now() - startTime;\n\n          // Record analysis results\n          (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.recordAnalysisResults)(recordId, {\n            detections: result.detections,\n            detectionTime: analysisTime\n          });\n          const selected = {};\n          const actions = {};\n          result.detections.forEach(det => {\n            selected[det.id] = true;\n            actions[det.id] = {\n              style: 'BOX'\n            };\n          });\n          newStates.push({\n            file,\n            detections: result.detections,\n            selected,\n            actions,\n            pages: result.pages || 1,\n            pageImages: [],\n            currentPage: 0,\n            processing: false\n          });\n        } catch (error) {\n          console.error('Failed to process file:', file.name, error);\n\n          // Record analysis error\n          (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.recordAnalysisResults)(recordId, {\n            detections: [],\n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n\n          // Add the file with error state\n          newStates.push({\n            file,\n            detections: [],\n            selected: {},\n            actions: {},\n            pages: 1,\n            pageImages: [],\n            currentPage: 0,\n            processing: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n        }\n      }\n      setFileStates(newStates);\n      setFileProcessingRecords(processingRecords);\n      setLoading(false);\n\n      // End the session\n      (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.endSession)(sessionId, 'completed');\n    }\n    processFiles();\n  }, [files, presetId]);\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files || []);\n    setFiles(selectedFiles);\n    setCurrentFileIndex(0);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    setFiles(droppedFiles);\n    setCurrentFileIndex(0);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleSanitize = async fileIndex => {\n    const fileState = fileStates[fileIndex];\n    if (!fileState) return;\n\n    // Update processing state\n    setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n      ...state,\n      processing: true\n    } : state));\n    const redactionStartTime = Date.now();\n    const recordId = fileProcessingRecords.get(fileIndex);\n    try {\n      // Re-analyze the file to ensure lastResult is set correctly  \n      await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.analyzeDocument)(fileState.file, {\n        presetId\n      });\n      const redactionActions = fileState.detections.filter(det => fileState.selected[det.id]).map(det => ({\n        detectionId: det.id,\n        style: fileState.actions[det.id]?.style || 'BOX',\n        labelText: fileState.actions[det.id]?.labelText\n      }));\n      const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.applyRedactions)(fileState.file, redactionActions, {\n        output: 'image'\n      }, fileState.detections);\n\n      // Convert data URI to blob for download\n      const response = await fetch(result.fileUri);\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      const redactionTime = Date.now() - redactionStartTime;\n\n      // Record redaction results\n      if (recordId) {\n        (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.recordRedactionResults)(recordId, {\n          appliedRedactions: redactionActions,\n          redactionTime,\n          outputSize: blob.size\n        });\n      }\n\n      // Update file state with result\n      setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n        ...state,\n        outputUri: url,\n        previewUri: result.fileUri,\n        processing: false\n      } : state));\n    } catch (error) {\n      console.error('Sanitization failed:', error);\n\n      // Record redaction error\n      if (recordId) {\n        (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.recordRedactionResults)(recordId, {\n          appliedRedactions: [],\n          error: error instanceof Error ? error.message : 'Unknown error'\n        });\n      }\n\n      // Show error to user\n      alert(`Sanitization failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n        ...state,\n        processing: false\n      } : state));\n    }\n  };\n  const handleDownload = fileIndex => {\n    const fileState = fileStates[fileIndex];\n    if (!fileState?.outputUri) return;\n    const link = document.createElement('a');\n    link.href = fileState.outputUri;\n    link.download = `sanitized_${fileState.file.name}`;\n    link.click();\n  };\n  const handleBulkSanitize = async () => {\n    const filesToProcess = fileStates.map((state, index) => ({\n      state,\n      index\n    })).filter(({\n      state\n    }) => !state.outputUri && !state.error);\n    if (filesToProcess.length === 0) return;\n\n    // Set all eligible files to processing state\n    setFileStates(prev => prev.map((state, index) => {\n      const shouldProcess = filesToProcess.some(({\n        index: processIndex\n      }) => processIndex === index);\n      return shouldProcess ? {\n        ...state,\n        processing: true\n      } : state;\n    }));\n    try {\n      // Process files with limited concurrency\n      const maxConcurrency = 3;\n      for (let i = 0; i < filesToProcess.length; i += maxConcurrency) {\n        const batch = filesToProcess.slice(i, i + maxConcurrency);\n        const promises = batch.map(async ({\n          state,\n          index: fileIndex\n        }) => {\n          try {\n            // Re-analyze the file to ensure lastResult is set correctly  \n            await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.analyzeDocument)(state.file, {\n              presetId\n            });\n            const redactionActions = state.detections.filter(det => state.selected[det.id]).map(det => ({\n              detectionId: det.id,\n              style: state.actions[det.id]?.style || 'BOX',\n              labelText: state.actions[det.id]?.labelText\n            }));\n            const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_7__.applyRedactions)(state.file, redactionActions, {\n              output: 'image'\n            }, state.detections);\n\n            // Convert data URI to blob for download\n            const response = await fetch(result.fileUri);\n            const blob = await response.blob();\n            const url = URL.createObjectURL(blob);\n\n            // Update file state with result\n            setFileStates(prev => prev.map((s, i) => i === fileIndex ? {\n              ...s,\n              outputUri: url,\n              previewUri: result.fileUri,\n              processing: false\n            } : s));\n          } catch (error) {\n            console.error(`Sanitization failed for ${state.file.name}:`, error);\n            setFileStates(prev => prev.map((s, i) => i === fileIndex ? {\n              ...s,\n              processing: false,\n              error: error instanceof Error ? error.message : 'Unknown error'\n            } : s));\n          }\n        });\n        await Promise.all(promises);\n      }\n    } catch (error) {\n      console.error('Bulk sanitization failed:', error);\n    }\n  };\n  const handleBulkDownload = () => {\n    const processedFiles = fileStates.filter(state => state.outputUri);\n    if (processedFiles.length === 0) return;\n\n    // Download each file individually\n    processedFiles.forEach((state, index) => {\n      if (state.outputUri) {\n        setTimeout(() => {\n          const link = document.createElement('a');\n          link.href = state.outputUri;\n          link.download = `sanitized_${state.file.name}`;\n          link.click();\n        }, index * 100); // Stagger downloads by 100ms\n      }\n    });\n  };\n\n  const currentFileState = fileStates[currentFileIndex];\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"a\", {\n          href: \"#\",\n          className: \"logo\",\n          children: \"CleanShare Pro\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 'var(--space-md)'\n          },\n          children: [presets.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-xs)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"select\", {\n              value: presetId,\n              onChange: e => setPresetId(e.target.value),\n              className: \"form-select\",\n              style: {\n                minWidth: '180px'\n              },\n              children: presets.map(p => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"option\", {\n                value: p.id,\n                children: [p.name, \" \", p.domain && p.domain !== 'General' ? `(${p.domain})` : '']\n              }, p.id))\n            }), (() => {\n              const currentPreset = presets.find(p => p.id === presetId);\n              return currentPreset?.description ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-xs)',\n                  color: 'var(--text-secondary)',\n                  maxWidth: '200px',\n                  lineHeight: '1.2'\n                },\n                children: currentPreset.description\n              }) : null;\n            })()]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n            onClick: () => setProUnlocked(!proUnlocked),\n            className: `btn ${proUnlocked ? 'btn-secondary' : 'btn-outline'} btn-sm`,\n            children: proUnlocked ? '✓ Pro Unlocked' : '🔓 Unlock Pro'\n          }), proUnlocked && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n              onClick: () => setShowPresetEditor(true),\n              className: \"btn btn-primary btn-sm\",\n              children: \"Manage Presets\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n              onClick: () => setShowHistoryDashboard(true),\n              className: \"btn btn-secondary btn-sm\",\n              children: \"\\uD83D\\uDCCA History\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n            onClick: () => setShowKeyboardHelp(true),\n            className: \"btn btn-outline btn-sm\",\n            title: \"Keyboard Shortcuts (Press ? for help)\",\n            children: \"\\u2328\\uFE0F\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n        className: \"card\",\n        style: {\n          marginBottom: 'var(--space-xl)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"h2\", {\n            className: \"card-title\",\n            children: \"Upload Files\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"p\", {\n            className: \"card-subtitle\",\n            children: \"Select images or PDF documents to sanitize\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n            className: \"file-upload-zone\",\n            onDrop: handleDrop,\n            onDragOver: handleDragOver,\n            onDragLeave: handleDragLeave,\n            onClick: () => document.getElementById('file-input')?.click(),\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n              className: \"file-upload-icon\",\n              children: \"\\uD83D\\uDCC4\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n              className: \"file-upload-text\",\n              children: \"Drop files here or click to browse\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n              className: \"file-upload-subtext\",\n              children: \"Supports images (JPG, PNG, WebP, HEIC, TIFF), PDFs, and documents (DOCX, XLSX) up to 10MB each\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"input\", {\n              id: \"file-input\",\n              type: \"file\",\n              accept: \"image/*,application/pdf,.webp,.heic,.tiff,.docx,.xlsx\",\n              multiple: true,\n              onChange: handleFileChange,\n              style: {\n                display: 'none'\n              }\n            })]\n          }), loading && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n            className: \"loading-text\",\n            style: {\n              marginTop: 'var(--space-md)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n              className: \"loading-spinner\"\n            }), \"Processing files...\"]\n          })]\n        })]\n      }), fileStates.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 'var(--space-xl)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n          className: \"sidebar\",\n          style: {\n            minWidth: '250px'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"h3\", {\n            className: \"sidebar-title\",\n            children: [\"Files (\", fileStates.length, \")\"]\n          }), fileStates.length > 1 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n            style: {\n              padding: 'var(--space-md)',\n              marginBottom: 'var(--space-md)',\n              border: '2px solid var(--color-primary)',\n              borderRadius: 'var(--radius-md)',\n              background: 'var(--bg-secondary)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"h4\", {\n              style: {\n                margin: '0 0 var(--space-sm) 0',\n                fontSize: 'var(--font-size-sm)',\n                fontWeight: '600'\n              },\n              children: \"\\uD83D\\uDE80 Bulk Processing\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 'var(--space-xs)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n                onClick: handleBulkSanitize,\n                className: \"btn btn-primary btn-sm\",\n                disabled: fileStates.some(s => s.processing) || fileStates.every(s => s.outputUri),\n                style: {\n                  width: '100%'\n                },\n                children: fileStates.some(s => s.processing) ? 'Processing...' : fileStates.every(s => s.outputUri) ? 'All Complete' : `Sanitize All (${fileStates.filter(s => !s.outputUri && !s.error).length})`\n              }), fileStates.some(s => s.outputUri) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"button\", {\n                onClick: handleBulkDownload,\n                className: \"btn btn-secondary btn-sm\",\n                style: {\n                  width: '100%'\n                },\n                children: [\"\\uD83D\\uDCE6 Download All (\", fileStates.filter(s => s.outputUri).length, \")\"]\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n              style: {\n                marginTop: 'var(--space-xs)',\n                fontSize: 'var(--font-size-xs)',\n                color: 'var(--text-secondary)'\n              },\n              children: \"Concurrent processing with progress tracking\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-sm)'\n            },\n            children: fileStates.map((state, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n              onClick: () => setCurrentFileIndex(index),\n              style: {\n                padding: 'var(--space-md)',\n                border: `2px solid ${index === currentFileIndex ? 'var(--color-primary)' : 'var(--border-light)'}`,\n                borderRadius: 'var(--radius-md)',\n                cursor: 'pointer',\n                background: index === currentFileIndex ? 'var(--bg-secondary)' : 'var(--bg-primary)',\n                transition: 'all var(--transition-fast)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                style: {\n                  fontWeight: '600',\n                  fontSize: 'var(--font-size-sm)',\n                  marginBottom: 'var(--space-xs)'\n                },\n                children: state.file.name\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-xs)',\n                  color: state.error ? 'var(--color-error)' : 'var(--text-secondary)'\n                },\n                children: state.error ? `Error: ${state.error}` : `${state.detections.length} detections found`\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                style: {\n                  marginTop: 'var(--space-sm)',\n                  display: 'flex',\n                  gap: 'var(--space-xs)'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleSanitize(index);\n                  },\n                  className: \"btn btn-primary btn-sm\",\n                  disabled: state.processing || !!state.error,\n                  style: {\n                    flex: 1\n                  },\n                  children: state.processing ? 'Processing...' : 'Sanitize'\n                }), state.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDownload(index);\n                  },\n                  className: \"btn btn-secondary btn-sm\",\n                  children: \"Download\"\n                })]\n              })]\n            }, index))\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: currentFileState && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"h3\", {\n                className: \"card-title\",\n                children: currentFileState.file.name\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"p\", {\n                className: \"card-subtitle\",\n                children: currentFileState.error ? 'Processing failed' : `Found ${currentFileState.detections.length} sensitive items`\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n              className: \"card-body\",\n              children: currentFileState.error ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                className: \"alert alert-error\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"strong\", {\n                    children: \"Processing Error\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"p\", {\n                    style: {\n                      margin: '0',\n                      marginTop: 'var(--space-xs)'\n                    },\n                    children: [\"Failed to analyze this file: \", currentFileState.error]\n                  })]\n                })\n              }) : currentFileState.detections.length > 0 ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"h4\", {\n                  style: {\n                    marginBottom: 'var(--space-md)',\n                    fontSize: 'var(--font-size-lg)'\n                  },\n                  children: \"Detected Sensitive Information\"\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 'var(--space-sm)'\n                  },\n                  children: currentFileState.detections.map(detection => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                    style: {\n                      padding: 'var(--space-md)',\n                      border: '1px solid var(--border-light)',\n                      borderRadius: 'var(--radius-md)',\n                      background: 'var(--bg-secondary)',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 'var(--space-md)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"input\", {\n                        type: \"checkbox\",\n                        checked: currentFileState.selected[detection.id] || false,\n                        onChange: e => {\n                          const newStates = fileStates.map((state, i) => i === currentFileIndex ? {\n                            ...state,\n                            selected: {\n                              ...state.selected,\n                              [detection.id]: e.target.checked\n                            }\n                          } : state);\n                          updateFileStates(newStates, 'toggle-detection', `${e.target.checked ? 'Selected' : 'Deselected'} ${detection.kind} detection`);\n                        }\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                          style: {\n                            fontWeight: '600',\n                            fontSize: 'var(--font-size-sm)'\n                          },\n                          children: [detection.kind, \": \", detection.preview || 'N/A']\n                        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                          style: {\n                            fontSize: 'var(--font-size-xs)',\n                            color: 'var(--text-secondary)'\n                          },\n                          children: [\"Confidence: \", Math.round(detection.confidence * 100), \"%\"]\n                        })]\n                      })]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"select\", {\n                      value: currentFileState.actions[detection.id]?.style || 'BOX',\n                      onChange: e => {\n                        const newStates = fileStates.map((state, i) => i === currentFileIndex ? {\n                          ...state,\n                          actions: {\n                            ...state.actions,\n                            [detection.id]: {\n                              ...state.actions[detection.id],\n                              style: e.target.value\n                            }\n                          }\n                        } : state);\n                        updateFileStates(newStates, 'change-redaction-style', `Changed ${detection.kind} redaction style to ${e.target.value}`);\n                      },\n                      className: \"form-select\",\n                      style: {\n                        minWidth: '120px'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"option\", {\n                        value: \"BOX\",\n                        children: \"Black Box\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"option\", {\n                        value: \"BLUR\",\n                        children: \"Blur\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"option\", {\n                        value: \"PIXELATE\",\n                        children: \"Pixelate\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"option\", {\n                        value: \"LABEL\",\n                        children: \"Label\"\n                      })]\n                    })]\n                  }, detection.id))\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                  className: \"card-footer\",\n                  style: {\n                    marginTop: 'var(--space-xl)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n                    onClick: () => handleSanitize(currentFileIndex),\n                    className: \"btn btn-primary btn-lg\",\n                    disabled: currentFileState.processing,\n                    children: currentFileState.processing ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment, {\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                        className: \"loading-spinner\",\n                        style: {\n                          width: '1rem',\n                          height: '1rem'\n                        }\n                      }), \"Processing...\"]\n                    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment, {\n                      children: \"\\uD83D\\uDD12 Sanitize Document\"\n                    })\n                  }), currentFileState.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"button\", {\n                    onClick: () => handleDownload(currentFileIndex),\n                    className: \"btn btn-secondary btn-lg\",\n                    children: \"\\uD83D\\uDCE5 Download Clean File\"\n                  })]\n                }), currentFileState.previewUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                  style: {\n                    marginTop: 'var(--space-xl)',\n                    padding: 'var(--space-lg)',\n                    background: 'var(--bg-secondary)',\n                    borderRadius: 'var(--radius-md)',\n                    border: '1px solid var(--border-light)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"h4\", {\n                    style: {\n                      marginBottom: 'var(--space-md)',\n                      fontSize: 'var(--font-size-lg)',\n                      color: 'var(--color-primary)'\n                    },\n                    children: \"\\uD83D\\uDD12 Sanitized Preview\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      padding: 'var(--space-md)',\n                      background: 'var(--bg-primary)',\n                      borderRadius: 'var(--radius-md)',\n                      border: '1px solid var(--border-light)'\n                    },\n                    children: currentFileState.file.type.startsWith('image/') ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"img\", {\n                      src: currentFileState.previewUri,\n                      alt: \"Sanitized preview\",\n                      style: {\n                        maxWidth: '100%',\n                        maxHeight: '400px',\n                        borderRadius: 'var(--radius-sm)',\n                        boxShadow: 'var(--shadow-md)'\n                      }\n                    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                      style: {\n                        textAlign: 'center',\n                        padding: 'var(--space-xl)',\n                        color: 'var(--text-secondary)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                        style: {\n                          fontSize: 'var(--font-size-3xl)',\n                          marginBottom: 'var(--space-md)'\n                        },\n                        children: \"\\uD83D\\uDCC4\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"p\", {\n                        children: \"PDF sanitized successfully\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"p\", {\n                        style: {\n                          fontSize: 'var(--font-size-sm)'\n                        },\n                        children: \"Click download to save the clean file\"\n                      })]\n                    })\n                  })]\n                })]\n              }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"div\", {\n                className: \"alert alert-success\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"strong\", {\n                    children: \"No sensitive information detected!\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"p\", {\n                    style: {\n                      margin: '0',\n                      marginTop: 'var(--space-xs)'\n                    },\n                    children: \"This document appears to be clean and safe to share.\"\n                  })]\n                })\n              })\n            })]\n          })\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_src_components_PresetManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        isOpen: showPresetEditor && proUnlocked,\n        onClose: () => setShowPresetEditor(false),\n        currentPresetId: presetId,\n        onPresetSelect: id => {\n          setPresetId(id);\n          loadPresets(); // Refresh presets list in case new ones were created\n          setShowPresetEditor(false);\n        }\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_src_components_HistoryDashboard__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        isOpen: showHistoryDashboard && proUnlocked,\n        onClose: () => setShowHistoryDashboard(false)\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_src_components_UndoRedoManager__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        isOpen: showUndoRedoManager,\n        onClose: () => setShowUndoRedoManager(false),\n        onUndo: () => undoRedoSystem.undo(),\n        onRedo: () => undoRedoSystem.redo(),\n        canUndo: undoRedoSystem.canUndo,\n        canRedo: undoRedoSystem.canRedo,\n        historyPreview: undoRedoSystem.getHistoryPreview(20),\n        onJumpTo: index => undoRedoSystem.jumpToIndex(index)\n      }), fileStates.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_src_components_UndoRedoManager__WEBPACK_IMPORTED_MODULE_3__.UndoRedoControls, {\n        onUndo: () => undoRedoSystem.undo(),\n        onRedo: () => undoRedoSystem.redo(),\n        canUndo: undoRedoSystem.canUndo,\n        canRedo: undoRedoSystem.canRedo,\n        onOpenHistory: () => setShowUndoRedoManager(true)\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_src_components_KeyboardShortcutsHelp__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        isOpen: showKeyboardHelp,\n        onClose: () => setShowKeyboardHelp(false)\n      })]\n    })]\n  });\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "./src/components/HistoryDashboard.tsx":
/*!*********************************************!*\
  !*** ./src/components/HistoryDashboard.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HistoryDashboard)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__]);\n_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nfunction HistoryDashboard({\n  isOpen,\n  onClose\n}) {\n  const [selectedTab, setSelectedTab] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('overview');\n  const [sessions, setSessions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [records, setRecords] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [stats, setStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [selectedSession, setSelectedSession] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [dateRange, setDateRange] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    start: '',\n    end: ''\n  });\n  const [exportFormat, setExportFormat] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('json');\n\n  // Load data when modal opens\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isOpen) {\n      refreshData();\n    }\n  }, [isOpen]);\n  const refreshData = () => {\n    setSessions((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.getSessions)());\n    setRecords((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.getAllRecords)());\n    setStats((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.getProcessingStats)());\n  };\n  const handleDateRangeChange = () => {\n    if (dateRange.start && dateRange.end) {\n      const filteredStats = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.getProcessingStats)({\n        start: dateRange.start,\n        end: dateRange.end\n      });\n      setStats(filteredStats);\n    } else {\n      setStats((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.getProcessingStats)());\n    }\n  };\n  const handleExport = () => {\n    const exported = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.exportHistory)({\n      format: exportFormat,\n      dateRange: dateRange.start && dateRange.end ? dateRange : undefined,\n      includeFileDetails: true,\n      includeDetectionDetails: false\n    });\n    const blob = new Blob([exported], {\n      type: exportFormat === 'json' ? 'application/json' : 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `cleanshare-history.${exportFormat}`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleClearHistory = () => {\n    if (window.confirm('Are you sure you want to clear all processing history? This cannot be undone.')) {\n      (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.clearHistory)();\n      refreshData();\n    }\n  };\n  const formatDuration = ms => {\n    if (ms < 1000) return `${Math.round(ms)}ms`;\n    if (ms < 60000) return `${(ms / 1000).toFixed(1)}s`;\n    return `${(ms / 60000).toFixed(1)}m`;\n  };\n  const formatFileSize = bytes => {\n    if (bytes < 1024) return `${bytes}B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(1)}KB`;\n    return `${(bytes / (1024 * 1024)).toFixed(1)}MB`;\n  };\n  const formatDate = dateStr => {\n    return new Date(dateStr).toLocaleString();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n      padding: 'var(--space-md)'\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      className: \"card\",\n      style: {\n        minWidth: '900px',\n        maxWidth: '95vw',\n        maxHeight: '90vh',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h3\", {\n          className: \"card-title\",\n          children: \"Processing History & Analytics\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n          className: \"card-subtitle\",\n          children: \"View processing statistics and audit trail\"\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        style: {\n          borderBottom: '1px solid var(--border-light)',\n          display: 'flex',\n          gap: '1px',\n          background: 'var(--bg-secondary)'\n        },\n        children: ['overview', 'sessions', 'analytics', 'export'].map(tab => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n          onClick: () => setSelectedTab(tab),\n          style: {\n            padding: 'var(--space-sm) var(--space-md)',\n            border: 'none',\n            background: selectedTab === tab ? 'var(--bg-primary)' : 'transparent',\n            color: selectedTab === tab ? 'var(--text-primary)' : 'var(--text-secondary)',\n            borderBottom: selectedTab === tab ? '2px solid var(--color-primary)' : '2px solid transparent',\n            cursor: 'pointer',\n            fontWeight: selectedTab === tab ? '600' : '400',\n            textTransform: 'capitalize'\n          },\n          children: tab\n        }, tab))\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card-body\",\n        style: {\n          flex: 1,\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 'var(--space-md)',\n            marginBottom: 'var(--space-lg)',\n            alignItems: 'center',\n            flexWrap: 'wrap'\n          },\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 'var(--space-sm)',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n              style: {\n                fontWeight: '600'\n              },\n              children: \"Date Range:\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"date\",\n              value: dateRange.start,\n              onChange: e => setDateRange(prev => ({\n                ...prev,\n                start: e.target.value\n              })),\n              className: \"form-input\",\n              style: {\n                width: '150px'\n              }\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n              children: \"to\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"date\",\n              value: dateRange.end,\n              onChange: e => setDateRange(prev => ({\n                ...prev,\n                end: e.target.value\n              })),\n              className: \"form-input\",\n              style: {\n                width: '150px'\n              }\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n              onClick: handleDateRangeChange,\n              className: \"btn btn-outline btn-sm\",\n              children: \"Apply Filter\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n              onClick: () => {\n                setDateRange({\n                  start: '',\n                  end: ''\n                });\n                setStats((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.getProcessingStats)());\n              },\n              className: \"btn btn-outline btn-sm\",\n              children: \"Clear\"\n            })]\n          })\n        }), selectedTab === 'overview' && stats && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n              gap: 'var(--space-md)',\n              marginBottom: 'var(--space-xl)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"card\",\n              style: {\n                padding: 'var(--space-md)',\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-2xl)',\n                  fontWeight: 'bold',\n                  color: 'var(--color-primary)'\n                },\n                children: stats.totalSessions\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  color: 'var(--text-secondary)'\n                },\n                children: \"Total Sessions\"\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"card\",\n              style: {\n                padding: 'var(--space-md)',\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-2xl)',\n                  fontWeight: 'bold',\n                  color: 'var(--color-primary)'\n                },\n                children: stats.totalFiles\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  color: 'var(--text-secondary)'\n                },\n                children: \"Files Processed\"\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"card\",\n              style: {\n                padding: 'var(--space-md)',\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-2xl)',\n                  fontWeight: 'bold',\n                  color: 'var(--color-primary)'\n                },\n                children: stats.totalDetections.toLocaleString()\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  color: 'var(--text-secondary)'\n                },\n                children: \"Detections Made\"\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"card\",\n              style: {\n                padding: 'var(--space-md)',\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-2xl)',\n                  fontWeight: 'bold',\n                  color: 'var(--color-success)'\n                },\n                children: [Math.round(stats.successRate * 100), \"%\"]\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  color: 'var(--text-secondary)'\n                },\n                children: \"Success Rate\"\n              })]\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"card\",\n            style: {\n              marginBottom: 'var(--space-lg)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                className: \"card-title\",\n                children: \"Detection Types\"\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 'var(--space-sm)'\n                },\n                children: Object.entries(stats.detectionsByType).sort(([, a], [, b]) => b - a).map(([type, count]) => {\n                  const percentage = count / stats.totalDetections * 100;\n                  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 'var(--space-md)'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                      style: {\n                        minWidth: '100px',\n                        fontWeight: '600'\n                      },\n                      children: type\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                      style: {\n                        flex: 1,\n                        height: '20px',\n                        background: 'var(--bg-secondary)',\n                        borderRadius: '10px',\n                        overflow: 'hidden'\n                      },\n                      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                        style: {\n                          height: '100%',\n                          width: `${percentage}%`,\n                          background: 'var(--color-primary)',\n                          transition: 'width 0.3s ease'\n                        }\n                      })\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        minWidth: '60px',\n                        textAlign: 'right',\n                        fontSize: 'var(--font-size-sm)'\n                      },\n                      children: [count, \" (\", percentage.toFixed(1), \"%)\"]\n                    })]\n                  }, type);\n                })\n              })\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                className: \"card-title\",\n                children: \"Recent Activity\"\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"card-body\",\n              children: [records.slice(0, 10).map(record => {\n                const session = sessions.find(s => s.id === record.sessionId);\n                return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  style: {\n                    padding: 'var(--space-sm)',\n                    border: '1px solid var(--border-light)',\n                    borderRadius: 'var(--radius-sm)',\n                    marginBottom: 'var(--space-sm)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                      style: {\n                        fontWeight: '600'\n                      },\n                      children: record.fileName\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        fontSize: 'var(--font-size-sm)',\n                        color: 'var(--text-secondary)'\n                      },\n                      children: [record.totalDetections, \" detections \\u2022 \", formatDuration(record.processingTime), session?.presetName && ` • ${session.presetName}`]\n                    })]\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                    style: {\n                      padding: '2px 8px',\n                      borderRadius: '12px',\n                      fontSize: 'var(--font-size-xs)',\n                      fontWeight: '600',\n                      background: record.status === 'completed' ? 'var(--color-success)' : record.status === 'failed' ? 'var(--color-error)' : 'var(--color-warning)',\n                      color: 'white'\n                    },\n                    children: record.status\n                  })]\n                }, record.id);\n              }), records.length === 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  color: 'var(--text-secondary)',\n                  padding: 'var(--space-xl)'\n                },\n                children: \"No processing history yet\"\n              })]\n            })]\n          })]\n        }), selectedTab === 'sessions' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-md)'\n            },\n            children: [sessions.map(session => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card\",\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => setSelectedSession(selectedSession === session.id ? null : session.id),\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 'var(--space-sm)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"span\", {\n                        style: {\n                          fontSize: 'var(--font-size-lg)',\n                          fontWeight: '600'\n                        },\n                        children: [\"Session \", formatDate(session.startTime)]\n                      }), session.presetName && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                        style: {\n                          padding: '2px 6px',\n                          background: 'var(--color-secondary)',\n                          color: 'white',\n                          borderRadius: '3px',\n                          fontSize: 'var(--font-size-xs)'\n                        },\n                        children: session.presetName\n                      })]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        fontSize: 'var(--font-size-sm)',\n                        color: 'var(--text-secondary)',\n                        marginTop: 'var(--space-xs)'\n                      },\n                      children: [session.processedFiles, \"/\", session.totalFiles, \" files processed\", session.failedFiles > 0 && ` • ${session.failedFiles} failed`, session.endTime && ` • Duration: ${formatDuration(new Date(session.endTime).getTime() - new Date(session.startTime).getTime())}`]\n                    })]\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                    style: {\n                      padding: '4px 12px',\n                      borderRadius: '12px',\n                      fontSize: 'var(--font-size-sm)',\n                      fontWeight: '600',\n                      background: session.status === 'completed' ? 'var(--color-success)' : session.status === 'failed' ? 'var(--color-error)' : 'var(--color-warning)',\n                      color: 'white'\n                    },\n                    children: session.status\n                  })]\n                }), selectedSession === session.id && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  style: {\n                    marginTop: 'var(--space-md)',\n                    borderTop: '1px solid var(--border-light)',\n                    paddingTop: 'var(--space-md)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h5\", {\n                    style: {\n                      marginBottom: 'var(--space-sm)'\n                    },\n                    children: \"Session Files\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: 'var(--space-xs)'\n                    },\n                    children: records.filter(r => r.sessionId === session.id).map(record => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        padding: 'var(--space-xs) var(--space-sm)',\n                        background: 'var(--bg-secondary)',\n                        borderRadius: 'var(--radius-sm)',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                          style: {\n                            fontWeight: '600'\n                          },\n                          children: record.fileName\n                        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"span\", {\n                          style: {\n                            marginLeft: 'var(--space-sm)',\n                            color: 'var(--text-secondary)'\n                          },\n                          children: [\"(\", formatFileSize(record.fileSize), \")\"]\n                        })]\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                        style: {\n                          display: 'flex',\n                          gap: 'var(--space-md)',\n                          alignItems: 'center'\n                        },\n                        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"span\", {\n                          style: {\n                            fontSize: 'var(--font-size-sm)'\n                          },\n                          children: [record.totalDetections, \" detections\"]\n                        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                          style: {\n                            fontSize: 'var(--font-size-sm)'\n                          },\n                          children: formatDuration(record.processingTime)\n                        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                          style: {\n                            padding: '1px 6px',\n                            borderRadius: '8px',\n                            fontSize: 'var(--font-size-xs)',\n                            background: record.status === 'completed' ? 'var(--color-success)' : record.status === 'failed' ? 'var(--color-error)' : 'var(--color-warning)',\n                            color: 'white'\n                          },\n                          children: record.status\n                        })]\n                      })]\n                    }, record.id))\n                  })]\n                })]\n              })\n            }, session.id)), sessions.length === 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              style: {\n                textAlign: 'center',\n                color: 'var(--text-secondary)',\n                padding: 'var(--space-xl)'\n              },\n              children: \"No processing sessions yet\"\n            })]\n          })\n        }), selectedTab === 'analytics' && stats && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"card\",\n            style: {\n              marginBottom: 'var(--space-lg)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                className: \"card-title\",\n                children: \"Processing Performance\"\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                style: {\n                  marginBottom: 'var(--space-md)'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n                  children: \"Average Processing Time:\"\n                }), \" \", formatDuration(stats.averageProcessingTime)]\n              }), stats.processingTimesByDate.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h5\", {\n                  children: \"Daily Processing Times\"\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 'var(--space-xs)'\n                  },\n                  children: stats.processingTimesByDate.slice(-10).map(({\n                    date,\n                    averageTime,\n                    fileCount\n                  }) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                      children: new Date(date).toLocaleDateString()\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"span\", {\n                      children: [fileCount, \" files\"]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                      children: formatDuration(averageTime)\n                    })]\n                  }, date))\n                })]\n              })]\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"card\",\n            style: {\n              marginBottom: 'var(--space-lg)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                className: \"card-title\",\n                children: \"Detection Confidence Distribution\"\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 'var(--space-sm)'\n                },\n                children: [{\n                  label: 'High Confidence (80%+)',\n                  count: stats.detectionsByConfidence.high,\n                  color: 'var(--color-success)'\n                }, {\n                  label: 'Medium Confidence (50-80%)',\n                  count: stats.detectionsByConfidence.medium,\n                  color: 'var(--color-warning)'\n                }, {\n                  label: 'Low Confidence (<50%)',\n                  count: stats.detectionsByConfidence.low,\n                  color: 'var(--color-error)'\n                }].map(({\n                  label,\n                  count,\n                  color\n                }) => {\n                  const percentage = stats.totalDetections > 0 ? count / stats.totalDetections * 100 : 0;\n                  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 'var(--space-md)'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                      style: {\n                        minWidth: '180px'\n                      },\n                      children: label\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                      style: {\n                        flex: 1,\n                        height: '20px',\n                        background: 'var(--bg-secondary)',\n                        borderRadius: '10px',\n                        overflow: 'hidden'\n                      },\n                      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                        style: {\n                          height: '100%',\n                          width: `${percentage}%`,\n                          background: color,\n                          transition: 'width 0.3s ease'\n                        }\n                      })\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        minWidth: '80px',\n                        textAlign: 'right',\n                        fontSize: 'var(--font-size-sm)'\n                      },\n                      children: [count, \" (\", percentage.toFixed(1), \"%)\"]\n                    })]\n                  }, label);\n                })\n              })\n            })]\n          }), Object.keys(stats.presetUsage).length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                className: \"card-title\",\n                children: \"Preset Usage\"\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 'var(--space-sm)'\n                },\n                children: Object.entries(stats.presetUsage).sort(([, a], [, b]) => b - a).map(([presetName, usage]) => {\n                  const totalUsage = Object.values(stats.presetUsage).reduce((sum, count) => sum + count, 0);\n                  const percentage = usage / totalUsage * 100;\n                  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 'var(--space-md)'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                      style: {\n                        minWidth: '150px',\n                        fontWeight: '600'\n                      },\n                      children: presetName\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                      style: {\n                        flex: 1,\n                        height: '20px',\n                        background: 'var(--bg-secondary)',\n                        borderRadius: '10px',\n                        overflow: 'hidden'\n                      },\n                      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                        style: {\n                          height: '100%',\n                          width: `${percentage}%`,\n                          background: 'var(--color-secondary)',\n                          transition: 'width 0.3s ease'\n                        }\n                      })\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                      style: {\n                        minWidth: '80px',\n                        textAlign: 'right',\n                        fontSize: 'var(--font-size-sm)'\n                      },\n                      children: [usage, \" (\", percentage.toFixed(1), \"%)\"]\n                    })]\n                  }, presetName);\n                })\n              })\n            })]\n          })]\n        }), selectedTab === 'export' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-lg)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                style: {\n                  marginBottom: 'var(--space-md)'\n                },\n                children: \"Export Processing History\"\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: 'var(--space-md)',\n                  marginBottom: 'var(--space-md)',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"label\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 'var(--space-xs)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n                    type: \"radio\",\n                    value: \"json\",\n                    checked: exportFormat === 'json',\n                    onChange: e => setExportFormat(e.target.value)\n                  }), \"JSON (Complete Data)\"]\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"label\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 'var(--space-xs)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n                    type: \"radio\",\n                    value: \"csv\",\n                    checked: exportFormat === 'csv',\n                    onChange: e => setExportFormat(e.target.value)\n                  }), \"CSV (Tabular Data)\"]\n                })]\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"button\", {\n                onClick: handleExport,\n                className: \"btn btn-primary\",\n                children: [\"\\uD83D\\uDCCA Export \", exportFormat.toUpperCase()]\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                style: {\n                  marginBottom: 'var(--space-md)'\n                },\n                children: \"Clear History\"\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n                style: {\n                  color: 'var(--text-secondary)',\n                  marginBottom: 'var(--space-md)'\n                },\n                children: \"This will permanently delete all processing history and cannot be undone.\"\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                onClick: handleClearHistory,\n                className: \"btn btn-outline\",\n                style: {\n                  color: 'var(--color-error)'\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F Clear All History\"\n              })]\n            }), stats && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                className: \"card-header\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                  className: \"card-title\",\n                  children: \"Export Preview\"\n                })\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                className: \"card-body\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  style: {\n                    fontSize: 'var(--font-size-sm)',\n                    color: 'var(--text-secondary)'\n                  },\n                  children: [\"Your export will include:\", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n                    style: {\n                      marginTop: 'var(--space-xs)',\n                      paddingLeft: '20px'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"li\", {\n                      children: [stats.totalSessions, \" processing sessions\"]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"li\", {\n                      children: [stats.totalFiles, \" file records\"]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"li\", {\n                      children: [stats.totalDetections, \" detection entries\"]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n                      children: \"Processing performance metrics\"\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n                      children: \"Detection confidence statistics\"\n                    })]\n                  })]\n                })\n              })]\n            })]\n          })\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              fontSize: 'var(--font-size-sm)',\n              color: 'var(--text-secondary)'\n            },\n            children: [sessions.length, \" sessions \\u2022 \", records.length, \" files processed\", stats && ` • ${Math.round(stats.successRate * 100)}% success rate`]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n            onClick: onClose,\n            className: \"btn btn-ghost\",\n            children: \"Close\"\n          })]\n        })\n      })]\n    })\n  });\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/HistoryDashboard.tsx\n");

/***/ }),

/***/ "./src/components/KeyboardShortcutsHelp.tsx":
/*!**************************************************!*\
  !*** ./src/components/KeyboardShortcutsHelp.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KeyboardShortcutsHelp)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst SHORTCUT_SECTIONS = [{\n  title: 'File Operations',\n  shortcuts: [{\n    keys: ['Ctrl', 'O'],\n    description: 'Open file picker to upload files',\n    context: 'Global'\n  }, {\n    keys: ['Escape'],\n    description: 'Close any open modal or dialog',\n    context: 'Global'\n  }]\n}, {\n  title: 'Editing & Undo/Redo',\n  shortcuts: [{\n    keys: ['Ctrl', 'Z'],\n    description: 'Undo last action',\n    context: 'When files are loaded'\n  }, {\n    keys: ['Ctrl', 'Y'],\n    description: 'Redo last undone action',\n    context: 'When files are loaded'\n  }, {\n    keys: ['Ctrl', 'Shift', 'Z'],\n    description: 'Redo last undone action (alternative)',\n    context: 'When files are loaded'\n  }]\n}, {\n  title: 'Navigation',\n  shortcuts: [{\n    keys: ['Tab'],\n    description: 'Navigate to next interactive element',\n    context: 'Global'\n  }, {\n    keys: ['Shift', 'Tab'],\n    description: 'Navigate to previous interactive element',\n    context: 'Global'\n  }, {\n    keys: ['Space'],\n    description: 'Toggle checkboxes and activate buttons',\n    context: 'When focused'\n  }, {\n    keys: ['Enter'],\n    description: 'Activate buttons and submit forms',\n    context: 'When focused'\n  }]\n}, {\n  title: 'Help & Information',\n  shortcuts: [{\n    keys: ['?'],\n    description: 'Show this keyboard shortcuts help',\n    context: 'Global'\n  }, {\n    keys: ['F1'],\n    description: 'Show keyboard shortcuts help (alternative)',\n    context: 'Global'\n  }]\n}];\nfunction KeyboardShortcutsHelp({\n  isOpen,\n  onClose\n}) {\n  if (!isOpen) return null;\n  const renderKeyCombo = keys => {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2px',\n        alignItems: 'center'\n      },\n      children: keys.map((key, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"kbd\", {\n          style: {\n            padding: '2px 6px',\n            background: 'var(--bg-secondary)',\n            border: '1px solid var(--border-light)',\n            borderRadius: '3px',\n            fontSize: 'var(--font-size-xs)',\n            fontFamily: 'monospace',\n            minWidth: '20px',\n            textAlign: 'center'\n          },\n          children: key\n        }), index < keys.length - 1 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n          style: {\n            fontSize: 'var(--font-size-xs)',\n            margin: '0 2px'\n          },\n          children: \"+\"\n        })]\n      }, key))\n    });\n  };\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n      padding: 'var(--space-md)'\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      className: \"card\",\n      style: {\n        minWidth: '600px',\n        maxWidth: '90vw',\n        maxHeight: '90vh',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h3\", {\n          className: \"card-title\",\n          children: \"\\u2328\\uFE0F Keyboard Shortcuts\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n          className: \"card-subtitle\",\n          children: \"Power user shortcuts for faster workflow\"\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card-body\",\n        style: {\n          flex: 1,\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 'var(--space-xl)'\n          },\n          children: SHORTCUT_SECTIONS.map(section => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n              style: {\n                marginBottom: 'var(--space-md)',\n                color: 'var(--color-primary)',\n                borderBottom: '1px solid var(--border-light)',\n                paddingBottom: 'var(--space-xs)'\n              },\n              children: section.title\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 'var(--space-sm)'\n              },\n              children: section.shortcuts.map((shortcut, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  padding: 'var(--space-sm)',\n                  background: 'var(--bg-secondary)',\n                  borderRadius: 'var(--radius-sm)',\n                  gap: 'var(--space-md)'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  style: {\n                    flex: 1\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                    style: {\n                      fontWeight: '600',\n                      marginBottom: '2px'\n                    },\n                    children: shortcut.description\n                  }), shortcut.context && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    style: {\n                      fontSize: 'var(--font-size-xs)',\n                      color: 'var(--text-secondary)'\n                    },\n                    children: [\"Context: \", shortcut.context]\n                  })]\n                }), renderKeyCombo(shortcut.keys)]\n              }, index))\n            })]\n          }, section.title))\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            marginTop: 'var(--space-xl)',\n            padding: 'var(--space-md)',\n            background: 'var(--bg-secondary)',\n            borderRadius: 'var(--radius-md)',\n            border: '1px solid var(--border-light)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n            style: {\n              marginBottom: 'var(--space-sm)',\n              color: 'var(--color-primary)'\n            },\n            children: \"\\uD83C\\uDF10 Accessibility Features\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n            style: {\n              margin: 0,\n              paddingLeft: '20px',\n              fontSize: 'var(--font-size-sm)',\n              color: 'var(--text-secondary)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Full keyboard navigation support - use Tab to navigate\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Screen reader compatible with proper ARIA labels\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"High contrast mode available in system preferences\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Focus indicators clearly show current selection\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Skip navigation links available (press Tab when page loads)\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"All interactive elements are keyboard accessible\"\n            })]\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            marginTop: 'var(--space-lg)',\n            padding: 'var(--space-md)',\n            background: 'linear-gradient(135deg, var(--color-primary) 0%, var(--color-secondary) 100%)',\n            borderRadius: 'var(--radius-md)',\n            color: 'white'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n            style: {\n              marginBottom: 'var(--space-sm)',\n              color: 'white'\n            },\n            children: \"\\uD83D\\uDCA1 Pro Tips\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n            style: {\n              margin: 0,\n              paddingLeft: '20px',\n              fontSize: 'var(--font-size-sm)',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"li\", {\n              children: [\"Use \", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n                children: \"Ctrl+Z/Ctrl+Y\"\n              }), \" to quickly experiment with different redaction styles\"]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"The floating undo/redo controls appear when you're working with files\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"li\", {\n              children: [\"Press \", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n                children: \"?\"\n              }), \" anytime to quickly reference these shortcuts\"]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"All shortcuts work even when not focused on buttons - perfect for power users\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Your action history persists across browser sessions\"\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              fontSize: 'var(--font-size-sm)',\n              color: 'var(--text-secondary)'\n            },\n            children: [\"Press \", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"kbd\", {\n              style: {\n                padding: '2px 4px',\n                background: 'var(--bg-secondary)',\n                border: '1px solid var(--border-light)',\n                borderRadius: '2px',\n                fontSize: 'var(--font-size-xs)'\n              },\n              children: \"Escape\"\n            }), \" or click Close to dismiss\"]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n            onClick: onClose,\n            className: \"btn btn-primary\",\n            children: \"Close\"\n          })]\n        })\n      })]\n    })\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9LZXlib2FyZFNob3J0Y3V0c0hlbHAudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBCO0FBQUE7QUFnQjFCLE1BQU1LLGlCQUFvQyxHQUFHLENBQzNDO0VBQ0VDLEtBQUssRUFBRSxpQkFBaUI7RUFDeEJDLFNBQVMsRUFBRSxDQUNUO0lBQ0VDLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7SUFDbkJDLFdBQVcsRUFBRSxrQ0FBa0M7SUFDL0NDLE9BQU8sRUFBRTtFQUNYLENBQUMsRUFDRDtJQUNFRixJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUM7SUFDaEJDLFdBQVcsRUFBRSxnQ0FBZ0M7SUFDN0NDLE9BQU8sRUFBRTtFQUNYLENBQUM7QUFFTCxDQUFDLEVBQ0Q7RUFDRUosS0FBSyxFQUFFLHFCQUFxQjtFQUM1QkMsU0FBUyxFQUFFLENBQ1Q7SUFDRUMsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQztJQUNuQkMsV0FBVyxFQUFFLGtCQUFrQjtJQUMvQkMsT0FBTyxFQUFFO0VBQ1gsQ0FBQyxFQUNEO0lBQ0VGLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7SUFDbkJDLFdBQVcsRUFBRSx5QkFBeUI7SUFDdENDLE9BQU8sRUFBRTtFQUNYLENBQUMsRUFDRDtJQUNFRixJQUFJLEVBQUUsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsQ0FBQztJQUM1QkMsV0FBVyxFQUFFLHVDQUF1QztJQUNwREMsT0FBTyxFQUFFO0VBQ1gsQ0FBQztBQUVMLENBQUMsRUFDRDtFQUNFSixLQUFLLEVBQUUsWUFBWTtFQUNuQkMsU0FBUyxFQUFFLENBQ1Q7SUFDRUMsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDO0lBQ2JDLFdBQVcsRUFBRSxzQ0FBc0M7SUFDbkRDLE9BQU8sRUFBRTtFQUNYLENBQUMsRUFDRDtJQUNFRixJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDO0lBQ3RCQyxXQUFXLEVBQUUsMENBQTBDO0lBQ3ZEQyxPQUFPLEVBQUU7RUFDWCxDQUFDLEVBQ0Q7SUFDRUYsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDO0lBQ2ZDLFdBQVcsRUFBRSx3Q0FBd0M7SUFDckRDLE9BQU8sRUFBRTtFQUNYLENBQUMsRUFDRDtJQUNFRixJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUM7SUFDZkMsV0FBVyxFQUFFLG1DQUFtQztJQUNoREMsT0FBTyxFQUFFO0VBQ1gsQ0FBQztBQUVMLENBQUMsRUFDRDtFQUNFSixLQUFLLEVBQUUsb0JBQW9CO0VBQzNCQyxTQUFTLEVBQUUsQ0FDVDtJQUNFQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDWEMsV0FBVyxFQUFFLG1DQUFtQztJQUNoREMsT0FBTyxFQUFFO0VBQ1gsQ0FBQyxFQUNEO0lBQ0VGLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQztJQUNaQyxXQUFXLEVBQUUsNENBQTRDO0lBQ3pEQyxPQUFPLEVBQUU7RUFDWCxDQUFDO0FBRUwsQ0FBQyxDQUNGO0FBRWMsU0FBU0MscUJBQXFCQSxDQUFDO0VBQUVDLE1BQU07RUFBRUM7QUFBb0MsQ0FBQyxFQUFFO0VBQzdGLElBQUksQ0FBQ0QsTUFBTSxFQUFFLE9BQU8sSUFBSTtFQUV4QixNQUFNRSxjQUFjLEdBQUlOLElBQWMsSUFBSztJQUN6QyxvQkFDRU4sc0RBQUE7TUFBS2EsS0FBSyxFQUFFO1FBQUVDLE9BQU8sRUFBRSxNQUFNO1FBQUVDLEdBQUcsRUFBRSxLQUFLO1FBQUVDLFVBQVUsRUFBRTtNQUFTLENBQUU7TUFBQUMsUUFBQSxFQUMvRFgsSUFBSSxDQUFDWSxHQUFHLENBQUMsQ0FBQ0MsR0FBRyxFQUFFQyxLQUFLLGtCQUNuQmxCLHVEQUFBLENBQUNKLHVEQUFjO1FBQUFtQixRQUFBLGdCQUNiakIsc0RBQUE7VUFBS2EsS0FBSyxFQUFFO1lBQ1ZTLE9BQU8sRUFBRSxTQUFTO1lBQ2xCQyxVQUFVLEVBQUUscUJBQXFCO1lBQ2pDQyxNQUFNLEVBQUUsK0JBQStCO1lBQ3ZDQyxZQUFZLEVBQUUsS0FBSztZQUNuQkMsUUFBUSxFQUFFLHFCQUFxQjtZQUMvQkMsVUFBVSxFQUFFLFdBQVc7WUFDdkJDLFFBQVEsRUFBRSxNQUFNO1lBQ2hCQyxTQUFTLEVBQUU7VUFDYixDQUFFO1VBQUFaLFFBQUEsRUFDQ0U7UUFBRyxDQUNELENBQUMsRUFDTEMsS0FBSyxHQUFHZCxJQUFJLENBQUN3QixNQUFNLEdBQUcsQ0FBQyxpQkFDdEI5QixzREFBQTtVQUFNYSxLQUFLLEVBQUU7WUFBRWEsUUFBUSxFQUFFLHFCQUFxQjtZQUFFSyxNQUFNLEVBQUU7VUFBUSxDQUFFO1VBQUFkLFFBQUEsRUFBQztRQUFDLENBQU0sQ0FDM0U7TUFBQSxHQWZrQkUsR0FnQkwsQ0FDakI7SUFBQyxDQUNDLENBQUM7RUFFVixDQUFDO0VBRUQsb0JBQ0VuQixzREFBQTtJQUFLYSxLQUFLLEVBQUU7TUFDVm1CLFFBQVEsRUFBRSxPQUFPO01BQ2pCQyxHQUFHLEVBQUUsQ0FBQztNQUNOQyxJQUFJLEVBQUUsQ0FBQztNQUNQQyxLQUFLLEVBQUUsQ0FBQztNQUNSQyxNQUFNLEVBQUUsQ0FBQztNQUNUYixVQUFVLEVBQUUsb0JBQW9CO01BQ2hDVCxPQUFPLEVBQUUsTUFBTTtNQUNmRSxVQUFVLEVBQUUsUUFBUTtNQUNwQnFCLGNBQWMsRUFBRSxRQUFRO01BQ3hCQyxNQUFNLEVBQUUsSUFBSTtNQUNaaEIsT0FBTyxFQUFFO0lBQ1gsQ0FBRTtJQUFBTCxRQUFBLGVBQ0FmLHVEQUFBO01BQUtxQyxTQUFTLEVBQUMsTUFBTTtNQUFDMUIsS0FBSyxFQUFFO1FBQzNCZSxRQUFRLEVBQUUsT0FBTztRQUNqQlksUUFBUSxFQUFFLE1BQU07UUFDaEJDLFNBQVMsRUFBRSxNQUFNO1FBQ2pCQyxRQUFRLEVBQUUsUUFBUTtRQUNsQjVCLE9BQU8sRUFBRSxNQUFNO1FBQ2Y2QixhQUFhLEVBQUU7TUFDakIsQ0FBRTtNQUFBMUIsUUFBQSxnQkFDQWYsdURBQUE7UUFBS3FDLFNBQVMsRUFBQyxhQUFhO1FBQUF0QixRQUFBLGdCQUMxQmpCLHNEQUFBO1VBQUl1QyxTQUFTLEVBQUMsWUFBWTtVQUFBdEIsUUFBQSxFQUFDO1FBQXFCLENBQUksQ0FBQyxlQUNyRGpCLHNEQUFBO1VBQUd1QyxTQUFTLEVBQUMsZUFBZTtVQUFBdEIsUUFBQSxFQUFDO1FBQXdDLENBQUcsQ0FBQztNQUFBLENBQ3RFLENBQUMsZUFFTmYsdURBQUE7UUFBS3FDLFNBQVMsRUFBQyxXQUFXO1FBQUMxQixLQUFLLEVBQUU7VUFBRStCLElBQUksRUFBRSxDQUFDO1VBQUVGLFFBQVEsRUFBRTtRQUFPLENBQUU7UUFBQXpCLFFBQUEsZ0JBQzlEakIsc0RBQUE7VUFBS2EsS0FBSyxFQUFFO1lBQUVDLE9BQU8sRUFBRSxNQUFNO1lBQUU2QixhQUFhLEVBQUUsUUFBUTtZQUFFNUIsR0FBRyxFQUFFO1VBQWtCLENBQUU7VUFBQUUsUUFBQSxFQUM5RWQsaUJBQWlCLENBQUNlLEdBQUcsQ0FBRTJCLE9BQU8saUJBQzdCM0MsdURBQUE7WUFBQWUsUUFBQSxnQkFDRWpCLHNEQUFBO2NBQUlhLEtBQUssRUFBRTtnQkFDVGlDLFlBQVksRUFBRSxpQkFBaUI7Z0JBQy9CQyxLQUFLLEVBQUUsc0JBQXNCO2dCQUM3QkMsWUFBWSxFQUFFLCtCQUErQjtnQkFDN0NDLGFBQWEsRUFBRTtjQUNqQixDQUFFO2NBQUFoQyxRQUFBLEVBQ0M0QixPQUFPLENBQUN6QztZQUFLLENBQ1osQ0FBQyxlQUNMSixzREFBQTtjQUFLYSxLQUFLLEVBQUU7Z0JBQUVDLE9BQU8sRUFBRSxNQUFNO2dCQUFFNkIsYUFBYSxFQUFFLFFBQVE7Z0JBQUU1QixHQUFHLEVBQUU7Y0FBa0IsQ0FBRTtjQUFBRSxRQUFBLEVBQzlFNEIsT0FBTyxDQUFDeEMsU0FBUyxDQUFDYSxHQUFHLENBQUMsQ0FBQ2dDLFFBQVEsRUFBRTlCLEtBQUssa0JBQ3JDbEIsdURBQUE7Z0JBRUVXLEtBQUssRUFBRTtrQkFDTEMsT0FBTyxFQUFFLE1BQU07a0JBQ2Z1QixjQUFjLEVBQUUsZUFBZTtrQkFDL0JyQixVQUFVLEVBQUUsUUFBUTtrQkFDcEJNLE9BQU8sRUFBRSxpQkFBaUI7a0JBQzFCQyxVQUFVLEVBQUUscUJBQXFCO2tCQUNqQ0UsWUFBWSxFQUFFLGtCQUFrQjtrQkFDaENWLEdBQUcsRUFBRTtnQkFDUCxDQUFFO2dCQUFBRSxRQUFBLGdCQUVGZix1REFBQTtrQkFBS1csS0FBSyxFQUFFO29CQUFFK0IsSUFBSSxFQUFFO2tCQUFFLENBQUU7a0JBQUEzQixRQUFBLGdCQUN0QmpCLHNEQUFBO29CQUFLYSxLQUFLLEVBQUU7c0JBQUVzQyxVQUFVLEVBQUUsS0FBSztzQkFBRUwsWUFBWSxFQUFFO29CQUFNLENBQUU7b0JBQUE3QixRQUFBLEVBQ3BEaUMsUUFBUSxDQUFDM0M7a0JBQVcsQ0FDbEIsQ0FBQyxFQUNMMkMsUUFBUSxDQUFDMUMsT0FBTyxpQkFDZk4sdURBQUE7b0JBQUtXLEtBQUssRUFBRTtzQkFDVmEsUUFBUSxFQUFFLHFCQUFxQjtzQkFDL0JxQixLQUFLLEVBQUU7b0JBQ1QsQ0FBRTtvQkFBQTlCLFFBQUEsR0FBQyxXQUNRLEVBQUNpQyxRQUFRLENBQUMxQyxPQUFPO2tCQUFBLENBQ3ZCLENBQ047Z0JBQUEsQ0FDRSxDQUFDLEVBQ0xJLGNBQWMsQ0FBQ3NDLFFBQVEsQ0FBQzVDLElBQUksQ0FBQztjQUFBLEdBeEJ6QmMsS0F5QkYsQ0FDTjtZQUFDLENBQ0MsQ0FBQztVQUFBLEdBdkNFeUIsT0FBTyxDQUFDekMsS0F3Q2IsQ0FDTjtRQUFDLENBQ0MsQ0FBQyxlQUdORix1REFBQTtVQUFLVyxLQUFLLEVBQUU7WUFDVnVDLFNBQVMsRUFBRSxpQkFBaUI7WUFDNUI5QixPQUFPLEVBQUUsaUJBQWlCO1lBQzFCQyxVQUFVLEVBQUUscUJBQXFCO1lBQ2pDRSxZQUFZLEVBQUUsa0JBQWtCO1lBQ2hDRCxNQUFNLEVBQUU7VUFDVixDQUFFO1VBQUFQLFFBQUEsZ0JBQ0FqQixzREFBQTtZQUFJYSxLQUFLLEVBQUU7Y0FBRWlDLFlBQVksRUFBRSxpQkFBaUI7Y0FBRUMsS0FBSyxFQUFFO1lBQXVCLENBQUU7WUFBQTlCLFFBQUEsRUFBQztVQUUvRSxDQUFJLENBQUMsZUFDTGYsdURBQUE7WUFBSVcsS0FBSyxFQUFFO2NBQ1RrQixNQUFNLEVBQUUsQ0FBQztjQUNUc0IsV0FBVyxFQUFFLE1BQU07Y0FDbkIzQixRQUFRLEVBQUUscUJBQXFCO2NBQy9CcUIsS0FBSyxFQUFFO1lBQ1QsQ0FBRTtZQUFBOUIsUUFBQSxnQkFDQWpCLHNEQUFBO2NBQUFpQixRQUFBLEVBQUk7WUFBc0QsQ0FBSSxDQUFDLGVBQy9EakIsc0RBQUE7Y0FBQWlCLFFBQUEsRUFBSTtZQUFnRCxDQUFJLENBQUMsZUFDekRqQixzREFBQTtjQUFBaUIsUUFBQSxFQUFJO1lBQWtELENBQUksQ0FBQyxlQUMzRGpCLHNEQUFBO2NBQUFpQixRQUFBLEVBQUk7WUFBK0MsQ0FBSSxDQUFDLGVBQ3hEakIsc0RBQUE7Y0FBQWlCLFFBQUEsRUFBSTtZQUEyRCxDQUFJLENBQUMsZUFDcEVqQixzREFBQTtjQUFBaUIsUUFBQSxFQUFJO1lBQWdELENBQUksQ0FBQztVQUFBLENBQ3ZELENBQUM7UUFBQSxDQUNGLENBQUMsZUFHTmYsdURBQUE7VUFBS1csS0FBSyxFQUFFO1lBQ1Z1QyxTQUFTLEVBQUUsaUJBQWlCO1lBQzVCOUIsT0FBTyxFQUFFLGlCQUFpQjtZQUMxQkMsVUFBVSxFQUFFLCtFQUErRTtZQUMzRkUsWUFBWSxFQUFFLGtCQUFrQjtZQUNoQ3NCLEtBQUssRUFBRTtVQUNULENBQUU7VUFBQTlCLFFBQUEsZ0JBQ0FqQixzREFBQTtZQUFJYSxLQUFLLEVBQUU7Y0FBRWlDLFlBQVksRUFBRSxpQkFBaUI7Y0FBRUMsS0FBSyxFQUFFO1lBQVEsQ0FBRTtZQUFBOUIsUUFBQSxFQUFDO1VBRWhFLENBQUksQ0FBQyxlQUNMZix1REFBQTtZQUFJVyxLQUFLLEVBQUU7Y0FDVGtCLE1BQU0sRUFBRSxDQUFDO2NBQ1RzQixXQUFXLEVBQUUsTUFBTTtjQUNuQjNCLFFBQVEsRUFBRSxxQkFBcUI7Y0FDL0JxQixLQUFLLEVBQUU7WUFDVCxDQUFFO1lBQUE5QixRQUFBLGdCQUNBZix1REFBQTtjQUFBZSxRQUFBLEdBQUksTUFBSSxlQUFBakIsc0RBQUE7Z0JBQUFpQixRQUFBLEVBQVE7Y0FBYSxDQUFRLENBQUMsMERBQXNEO1lBQUEsQ0FBSSxDQUFDLGVBQ2pHakIsc0RBQUE7Y0FBQWlCLFFBQUEsRUFBSTtZQUFxRSxDQUFJLENBQUMsZUFDOUVmLHVEQUFBO2NBQUFlLFFBQUEsR0FBSSxRQUFNLGVBQUFqQixzREFBQTtnQkFBQWlCLFFBQUEsRUFBUTtjQUFDLENBQVEsQ0FBQyxpREFBNkM7WUFBQSxDQUFJLENBQUMsZUFDOUVqQixzREFBQTtjQUFBaUIsUUFBQSxFQUFJO1lBQTZFLENBQUksQ0FBQyxlQUN0RmpCLHNEQUFBO2NBQUFpQixRQUFBLEVBQUk7WUFBb0QsQ0FBSSxDQUFDO1VBQUEsQ0FDM0QsQ0FBQztRQUFBLENBQ0YsQ0FBQztNQUFBLENBQ0gsQ0FBQyxlQUVOakIsc0RBQUE7UUFBS3VDLFNBQVMsRUFBQyxhQUFhO1FBQUF0QixRQUFBLGVBQzFCZix1REFBQTtVQUFLVyxLQUFLLEVBQUU7WUFBRUMsT0FBTyxFQUFFLE1BQU07WUFBRXVCLGNBQWMsRUFBRSxlQUFlO1lBQUVyQixVQUFVLEVBQUU7VUFBUyxDQUFFO1VBQUFDLFFBQUEsZ0JBQ3JGZix1REFBQTtZQUFLVyxLQUFLLEVBQUU7Y0FBRWEsUUFBUSxFQUFFLHFCQUFxQjtjQUFFcUIsS0FBSyxFQUFFO1lBQXdCLENBQUU7WUFBQTlCLFFBQUEsR0FBQyxRQUN6RSxlQUFBakIsc0RBQUE7Y0FBS2EsS0FBSyxFQUFFO2dCQUNoQlMsT0FBTyxFQUFFLFNBQVM7Z0JBQ2xCQyxVQUFVLEVBQUUscUJBQXFCO2dCQUNqQ0MsTUFBTSxFQUFFLCtCQUErQjtnQkFDdkNDLFlBQVksRUFBRSxLQUFLO2dCQUNuQkMsUUFBUSxFQUFFO2NBQ1osQ0FBRTtjQUFBVCxRQUFBLEVBQUM7WUFBTSxDQUFLLENBQUMsOEJBQ2pCO1VBQUEsQ0FBSyxDQUFDLGVBQ05qQixzREFBQTtZQUFRc0QsT0FBTyxFQUFFM0MsT0FBUTtZQUFDNEIsU0FBUyxFQUFDLGlCQUFpQjtZQUFBdEIsUUFBQSxFQUFDO1VBRXRELENBQVEsQ0FBQztRQUFBLENBQ047TUFBQyxDQUNILENBQUM7SUFBQSxDQUNIO0VBQUMsQ0FDSCxDQUFDO0FBRVYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8uL3NyYy9jb21wb25lbnRzL0tleWJvYXJkU2hvcnRjdXRzSGVscC50c3g/ZDA3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgS2V5Ym9hcmRTaG9ydGN1dHNIZWxwUHJvcHMge1xuICBpc09wZW46IGJvb2xlYW47XG4gIG9uQ2xvc2U6ICgpID0+IHZvaWQ7XG59XG5cbmludGVyZmFjZSBTaG9ydGN1dFNlY3Rpb24ge1xuICB0aXRsZTogc3RyaW5nO1xuICBzaG9ydGN1dHM6IEFycmF5PHtcbiAgICBrZXlzOiBzdHJpbmdbXTtcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgIGNvbnRleHQ/OiBzdHJpbmc7XG4gIH0+O1xufVxuXG5jb25zdCBTSE9SVENVVF9TRUNUSU9OUzogU2hvcnRjdXRTZWN0aW9uW10gPSBbXG4gIHtcbiAgICB0aXRsZTogJ0ZpbGUgT3BlcmF0aW9ucycsXG4gICAgc2hvcnRjdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGtleXM6IFsnQ3RybCcsICdPJ10sXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnT3BlbiBmaWxlIHBpY2tlciB0byB1cGxvYWQgZmlsZXMnLFxuICAgICAgICBjb250ZXh0OiAnR2xvYmFsJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAga2V5czogWydFc2NhcGUnXSxcbiAgICAgICAgZGVzY3JpcHRpb246ICdDbG9zZSBhbnkgb3BlbiBtb2RhbCBvciBkaWFsb2cnLFxuICAgICAgICBjb250ZXh0OiAnR2xvYmFsJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIHRpdGxlOiAnRWRpdGluZyAmIFVuZG8vUmVkbycsXG4gICAgc2hvcnRjdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGtleXM6IFsnQ3RybCcsICdaJ10sXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnVW5kbyBsYXN0IGFjdGlvbicsXG4gICAgICAgIGNvbnRleHQ6ICdXaGVuIGZpbGVzIGFyZSBsb2FkZWQnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBrZXlzOiBbJ0N0cmwnLCAnWSddLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ1JlZG8gbGFzdCB1bmRvbmUgYWN0aW9uJyxcbiAgICAgICAgY29udGV4dDogJ1doZW4gZmlsZXMgYXJlIGxvYWRlZCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGtleXM6IFsnQ3RybCcsICdTaGlmdCcsICdaJ10sXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnUmVkbyBsYXN0IHVuZG9uZSBhY3Rpb24gKGFsdGVybmF0aXZlKScsXG4gICAgICAgIGNvbnRleHQ6ICdXaGVuIGZpbGVzIGFyZSBsb2FkZWQnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgdGl0bGU6ICdOYXZpZ2F0aW9uJyxcbiAgICBzaG9ydGN1dHM6IFtcbiAgICAgIHtcbiAgICAgICAga2V5czogWydUYWInXSxcbiAgICAgICAgZGVzY3JpcHRpb246ICdOYXZpZ2F0ZSB0byBuZXh0IGludGVyYWN0aXZlIGVsZW1lbnQnLFxuICAgICAgICBjb250ZXh0OiAnR2xvYmFsJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAga2V5czogWydTaGlmdCcsICdUYWInXSxcbiAgICAgICAgZGVzY3JpcHRpb246ICdOYXZpZ2F0ZSB0byBwcmV2aW91cyBpbnRlcmFjdGl2ZSBlbGVtZW50JyxcbiAgICAgICAgY29udGV4dDogJ0dsb2JhbCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGtleXM6IFsnU3BhY2UnXSxcbiAgICAgICAgZGVzY3JpcHRpb246ICdUb2dnbGUgY2hlY2tib3hlcyBhbmQgYWN0aXZhdGUgYnV0dG9ucycsXG4gICAgICAgIGNvbnRleHQ6ICdXaGVuIGZvY3VzZWQnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBrZXlzOiBbJ0VudGVyJ10sXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnQWN0aXZhdGUgYnV0dG9ucyBhbmQgc3VibWl0IGZvcm1zJyxcbiAgICAgICAgY29udGV4dDogJ1doZW4gZm9jdXNlZCdcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogJ0hlbHAgJiBJbmZvcm1hdGlvbicsXG4gICAgc2hvcnRjdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGtleXM6IFsnPyddLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ1Nob3cgdGhpcyBrZXlib2FyZCBzaG9ydGN1dHMgaGVscCcsXG4gICAgICAgIGNvbnRleHQ6ICdHbG9iYWwnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBrZXlzOiBbJ0YxJ10sXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnU2hvdyBrZXlib2FyZCBzaG9ydGN1dHMgaGVscCAoYWx0ZXJuYXRpdmUpJyxcbiAgICAgICAgY29udGV4dDogJ0dsb2JhbCdcbiAgICAgIH1cbiAgICBdXG4gIH1cbl07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEtleWJvYXJkU2hvcnRjdXRzSGVscCh7IGlzT3Blbiwgb25DbG9zZSB9OiBLZXlib2FyZFNob3J0Y3V0c0hlbHBQcm9wcykge1xuICBpZiAoIWlzT3BlbikgcmV0dXJuIG51bGw7XG5cbiAgY29uc3QgcmVuZGVyS2V5Q29tYm8gPSAoa2V5czogc3RyaW5nW10pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGdhcDogJzJweCcsIGFsaWduSXRlbXM6ICdjZW50ZXInIH19PlxuICAgICAgICB7a2V5cy5tYXAoKGtleSwgaW5kZXgpID0+IChcbiAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQga2V5PXtrZXl9PlxuICAgICAgICAgICAgPGtiZCBzdHlsZT17e1xuICAgICAgICAgICAgICBwYWRkaW5nOiAnMnB4IDZweCcsXG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICd2YXIoLS1iZy1zZWNvbmRhcnkpJyxcbiAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHZhcigtLWJvcmRlci1saWdodCknLFxuICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICczcHgnLFxuICAgICAgICAgICAgICBmb250U2l6ZTogJ3ZhcigtLWZvbnQtc2l6ZS14cyknLFxuICAgICAgICAgICAgICBmb250RmFtaWx5OiAnbW9ub3NwYWNlJyxcbiAgICAgICAgICAgICAgbWluV2lkdGg6ICcyMHB4JyxcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJ1xuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgIHtrZXl9XG4gICAgICAgICAgICA8L2tiZD5cbiAgICAgICAgICAgIHtpbmRleCA8IGtleXMubGVuZ3RoIC0gMSAmJiAoXG4gICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGZvbnRTaXplOiAndmFyKC0tZm9udC1zaXplLXhzKScsIG1hcmdpbjogJzAgMnB4JyB9fT4rPC9zcGFuPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgIHRvcDogMCxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICByaWdodDogMCxcbiAgICAgIGJvdHRvbTogMCxcbiAgICAgIGJhY2tncm91bmQ6ICdyZ2JhKDAsIDAsIDAsIDAuNSknLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICB6SW5kZXg6IDEwMDAsXG4gICAgICBwYWRkaW5nOiAndmFyKC0tc3BhY2UtbWQpJ1xuICAgIH19PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkXCIgc3R5bGU9e3tcbiAgICAgICAgbWluV2lkdGg6ICc2MDBweCcsXG4gICAgICAgIG1heFdpZHRoOiAnOTB2dycsXG4gICAgICAgIG1heEhlaWdodDogJzkwdmgnLFxuICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbidcbiAgICAgIH19PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+XG4gICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImNhcmQtdGl0bGVcIj7ijKjvuI8gS2V5Ym9hcmQgU2hvcnRjdXRzPC9oMz5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJjYXJkLXN1YnRpdGxlXCI+UG93ZXIgdXNlciBzaG9ydGN1dHMgZm9yIGZhc3RlciB3b3JrZmxvdzwvcD5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWJvZHlcIiBzdHlsZT17eyBmbGV4OiAxLCBvdmVyZmxvdzogJ2F1dG8nIH19PlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJywgZ2FwOiAndmFyKC0tc3BhY2UteGwpJyB9fT5cbiAgICAgICAgICAgIHtTSE9SVENVVF9TRUNUSU9OUy5tYXAoKHNlY3Rpb24pID0+IChcbiAgICAgICAgICAgICAgPGRpdiBrZXk9e3NlY3Rpb24udGl0bGV9PlxuICAgICAgICAgICAgICAgIDxoNCBzdHlsZT17eyBcbiAgICAgICAgICAgICAgICAgIG1hcmdpbkJvdHRvbTogJ3ZhcigtLXNwYWNlLW1kKScsIFxuICAgICAgICAgICAgICAgICAgY29sb3I6ICd2YXIoLS1jb2xvci1wcmltYXJ5KScsXG4gICAgICAgICAgICAgICAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgdmFyKC0tYm9yZGVyLWxpZ2h0KScsXG4gICAgICAgICAgICAgICAgICBwYWRkaW5nQm90dG9tOiAndmFyKC0tc3BhY2UteHMpJ1xuICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAge3NlY3Rpb24udGl0bGV9XG4gICAgICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsIGdhcDogJ3ZhcigtLXNwYWNlLXNtKScgfX0+XG4gICAgICAgICAgICAgICAgICB7c2VjdGlvbi5zaG9ydGN1dHMubWFwKChzaG9ydGN1dCwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICd2YXIoLS1zcGFjZS1zbSknLFxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJ3ZhcigtLWJnLXNlY29uZGFyeSknLFxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAndmFyKC0tcmFkaXVzLXNtKScsXG4gICAgICAgICAgICAgICAgICAgICAgICBnYXA6ICd2YXIoLS1zcGFjZS1tZCknXG4gICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZmxleDogMSB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFdlaWdodDogJzYwMCcsIG1hcmdpbkJvdHRvbTogJzJweCcgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtzaG9ydGN1dC5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAge3Nob3J0Y3V0LmNvbnRleHQgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAndmFyKC0tZm9udC1zaXplLXhzKScsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAndmFyKC0tdGV4dC1zZWNvbmRhcnkpJyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udGV4dDoge3Nob3J0Y3V0LmNvbnRleHR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICB7cmVuZGVyS2V5Q29tYm8oc2hvcnRjdXQua2V5cyl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICB7LyogQWNjZXNzaWJpbGl0eSBGZWF0dXJlcyAqL31cbiAgICAgICAgICA8ZGl2IHN0eWxlPXt7IFxuICAgICAgICAgICAgbWFyZ2luVG9wOiAndmFyKC0tc3BhY2UteGwpJywgXG4gICAgICAgICAgICBwYWRkaW5nOiAndmFyKC0tc3BhY2UtbWQpJywgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAndmFyKC0tYmctc2Vjb25kYXJ5KScsIFxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAndmFyKC0tcmFkaXVzLW1kKScsXG4gICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgdmFyKC0tYm9yZGVyLWxpZ2h0KSdcbiAgICAgICAgICB9fT5cbiAgICAgICAgICAgIDxoNCBzdHlsZT17eyBtYXJnaW5Cb3R0b206ICd2YXIoLS1zcGFjZS1zbSknLCBjb2xvcjogJ3ZhcigtLWNvbG9yLXByaW1hcnkpJyB9fT5cbiAgICAgICAgICAgICAg8J+MkCBBY2Nlc3NpYmlsaXR5IEZlYXR1cmVzXG4gICAgICAgICAgICA8L2g0PlxuICAgICAgICAgICAgPHVsIHN0eWxlPXt7IFxuICAgICAgICAgICAgICBtYXJnaW46IDAsIFxuICAgICAgICAgICAgICBwYWRkaW5nTGVmdDogJzIwcHgnLFxuICAgICAgICAgICAgICBmb250U2l6ZTogJ3ZhcigtLWZvbnQtc2l6ZS1zbSknLFxuICAgICAgICAgICAgICBjb2xvcjogJ3ZhcigtLXRleHQtc2Vjb25kYXJ5KSdcbiAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICA8bGk+RnVsbCBrZXlib2FyZCBuYXZpZ2F0aW9uIHN1cHBvcnQgLSB1c2UgVGFiIHRvIG5hdmlnYXRlPC9saT5cbiAgICAgICAgICAgICAgPGxpPlNjcmVlbiByZWFkZXIgY29tcGF0aWJsZSB3aXRoIHByb3BlciBBUklBIGxhYmVsczwvbGk+XG4gICAgICAgICAgICAgIDxsaT5IaWdoIGNvbnRyYXN0IG1vZGUgYXZhaWxhYmxlIGluIHN5c3RlbSBwcmVmZXJlbmNlczwvbGk+XG4gICAgICAgICAgICAgIDxsaT5Gb2N1cyBpbmRpY2F0b3JzIGNsZWFybHkgc2hvdyBjdXJyZW50IHNlbGVjdGlvbjwvbGk+XG4gICAgICAgICAgICAgIDxsaT5Ta2lwIG5hdmlnYXRpb24gbGlua3MgYXZhaWxhYmxlIChwcmVzcyBUYWIgd2hlbiBwYWdlIGxvYWRzKTwvbGk+XG4gICAgICAgICAgICAgIDxsaT5BbGwgaW50ZXJhY3RpdmUgZWxlbWVudHMgYXJlIGtleWJvYXJkIGFjY2Vzc2libGU8L2xpPlxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIHsvKiBUaXBzICovfVxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgXG4gICAgICAgICAgICBtYXJnaW5Ub3A6ICd2YXIoLS1zcGFjZS1sZyknLCBcbiAgICAgICAgICAgIHBhZGRpbmc6ICd2YXIoLS1zcGFjZS1tZCknLCBcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICdsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCB2YXIoLS1jb2xvci1wcmltYXJ5KSAwJSwgdmFyKC0tY29sb3Itc2Vjb25kYXJ5KSAxMDAlKScsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICd2YXIoLS1yYWRpdXMtbWQpJyxcbiAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnXG4gICAgICAgICAgfX0+XG4gICAgICAgICAgICA8aDQgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAndmFyKC0tc3BhY2Utc20pJywgY29sb3I6ICd3aGl0ZScgfX0+XG4gICAgICAgICAgICAgIPCfkqEgUHJvIFRpcHNcbiAgICAgICAgICAgIDwvaDQ+XG4gICAgICAgICAgICA8dWwgc3R5bGU9e3sgXG4gICAgICAgICAgICAgIG1hcmdpbjogMCwgXG4gICAgICAgICAgICAgIHBhZGRpbmdMZWZ0OiAnMjBweCcsXG4gICAgICAgICAgICAgIGZvbnRTaXplOiAndmFyKC0tZm9udC1zaXplLXNtKScsXG4gICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnXG4gICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgPGxpPlVzZSA8c3Ryb25nPkN0cmwrWi9DdHJsK1k8L3N0cm9uZz4gdG8gcXVpY2tseSBleHBlcmltZW50IHdpdGggZGlmZmVyZW50IHJlZGFjdGlvbiBzdHlsZXM8L2xpPlxuICAgICAgICAgICAgICA8bGk+VGhlIGZsb2F0aW5nIHVuZG8vcmVkbyBjb250cm9scyBhcHBlYXIgd2hlbiB5b3UncmUgd29ya2luZyB3aXRoIGZpbGVzPC9saT5cbiAgICAgICAgICAgICAgPGxpPlByZXNzIDxzdHJvbmc+Pzwvc3Ryb25nPiBhbnl0aW1lIHRvIHF1aWNrbHkgcmVmZXJlbmNlIHRoZXNlIHNob3J0Y3V0czwvbGk+XG4gICAgICAgICAgICAgIDxsaT5BbGwgc2hvcnRjdXRzIHdvcmsgZXZlbiB3aGVuIG5vdCBmb2N1c2VkIG9uIGJ1dHRvbnMgLSBwZXJmZWN0IGZvciBwb3dlciB1c2VyczwvbGk+XG4gICAgICAgICAgICAgIDxsaT5Zb3VyIGFjdGlvbiBoaXN0b3J5IHBlcnNpc3RzIGFjcm9zcyBicm93c2VyIHNlc3Npb25zPC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1mb290ZXJcIj5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJywgYWxpZ25JdGVtczogJ2NlbnRlcicgfX0+XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGZvbnRTaXplOiAndmFyKC0tZm9udC1zaXplLXNtKScsIGNvbG9yOiAndmFyKC0tdGV4dC1zZWNvbmRhcnkpJyB9fT5cbiAgICAgICAgICAgICAgUHJlc3MgPGtiZCBzdHlsZT17e1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6ICcycHggNHB4JyxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAndmFyKC0tYmctc2Vjb25kYXJ5KScsXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHZhcigtLWJvcmRlci1saWdodCknLFxuICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzJweCcsXG4gICAgICAgICAgICAgICAgZm9udFNpemU6ICd2YXIoLS1mb250LXNpemUteHMpJ1xuICAgICAgICAgICAgICB9fT5Fc2NhcGU8L2tiZD4gb3IgY2xpY2sgQ2xvc2UgdG8gZGlzbWlzc1xuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e29uQ2xvc2V9IGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiPlxuICAgICAgICAgICAgICBDbG9zZVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59Il0sIm5hbWVzIjpbIlJlYWN0IiwianN4IiwiX2pzeCIsImpzeHMiLCJfanN4cyIsIlNIT1JUQ1VUX1NFQ1RJT05TIiwidGl0bGUiLCJzaG9ydGN1dHMiLCJrZXlzIiwiZGVzY3JpcHRpb24iLCJjb250ZXh0IiwiS2V5Ym9hcmRTaG9ydGN1dHNIZWxwIiwiaXNPcGVuIiwib25DbG9zZSIsInJlbmRlcktleUNvbWJvIiwic3R5bGUiLCJkaXNwbGF5IiwiZ2FwIiwiYWxpZ25JdGVtcyIsImNoaWxkcmVuIiwibWFwIiwia2V5IiwiaW5kZXgiLCJGcmFnbWVudCIsInBhZGRpbmciLCJiYWNrZ3JvdW5kIiwiYm9yZGVyIiwiYm9yZGVyUmFkaXVzIiwiZm9udFNpemUiLCJmb250RmFtaWx5IiwibWluV2lkdGgiLCJ0ZXh0QWxpZ24iLCJsZW5ndGgiLCJtYXJnaW4iLCJwb3NpdGlvbiIsInRvcCIsImxlZnQiLCJyaWdodCIsImJvdHRvbSIsImp1c3RpZnlDb250ZW50IiwiekluZGV4IiwiY2xhc3NOYW1lIiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJvdmVyZmxvdyIsImZsZXhEaXJlY3Rpb24iLCJmbGV4Iiwic2VjdGlvbiIsIm1hcmdpbkJvdHRvbSIsImNvbG9yIiwiYm9yZGVyQm90dG9tIiwicGFkZGluZ0JvdHRvbSIsInNob3J0Y3V0IiwiZm9udFdlaWdodCIsIm1hcmdpblRvcCIsInBhZGRpbmdMZWZ0Iiwib25DbGljayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/KeyboardShortcutsHelp.tsx\n");

/***/ }),

/***/ "./src/components/PresetManager.tsx":
/*!******************************************!*\
  !*** ./src/components/PresetManager.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PresetManager)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__]);\n_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst DETECTION_KINDS = ['FACE', 'EMAIL', 'PHONE', 'PAN', 'IBAN', 'SSN', 'PASSPORT', 'JWT', 'API_KEY', 'BARCODE', 'NAME', 'ADDRESS', 'OTHER'];\nconst REDACTION_STYLES = ['BOX', 'BLUR', 'PIXELATE', 'LABEL', 'MASK_LAST4', 'PATTERN', 'GRADIENT', 'SOLID_COLOR', 'VECTOR_OVERLAY', 'REMOVE_METADATA'];\nconst DOMAINS = ['Healthcare', 'Finance', 'Legal', 'Government', 'Education', 'Technology', 'General'];\nfunction PresetManager({\n  isOpen,\n  onClose,\n  currentPresetId,\n  onPresetSelect\n}) {\n  const [presets, setPresets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [selectedTab, setSelectedTab] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('browse');\n  const [editingPreset, setEditingPreset] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [filterDomain, setFilterDomain] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [importText, setImportText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [importResults, setImportResults] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [exportResult, setExportResult] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n\n  // Load presets when modal opens\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isOpen) {\n      setPresets((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.listPresets)());\n    }\n  }, [isOpen]);\n  const refreshPresets = () => {\n    setPresets((0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.listPresets)());\n  };\n  const filteredPresets = presets.filter(preset => {\n    const matchesDomain = !filterDomain || preset.domain === filterDomain;\n    const matchesSearch = !searchQuery || preset.name.toLowerCase().includes(searchQuery.toLowerCase()) || preset.description && preset.description.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesDomain && matchesSearch;\n  });\n  const handleCreateNew = () => {\n    const newPreset = {\n      id: '',\n      name: 'New Preset',\n      description: '',\n      domain: 'General',\n      enabledKinds: ['EMAIL', 'PHONE'],\n      styleMap: {},\n      customRegex: [],\n      customPatterns: [],\n      defaultRedactionConfig: {\n        color: '#000000',\n        opacity: 0.9\n      },\n      confidenceThreshold: 0.6\n    };\n    setEditingPreset(newPreset);\n    setSelectedTab('edit');\n  };\n  const handleEdit = preset => {\n    setEditingPreset({\n      ...preset\n    });\n    setSelectedTab('edit');\n  };\n  const handleDuplicate = preset => {\n    const duplicated = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.duplicatePreset)(preset.id);\n    if (duplicated) {\n      refreshPresets();\n      setEditingPreset(duplicated);\n      setSelectedTab('edit');\n    }\n  };\n  const handleDelete = presetId => {\n    if (window.confirm('Are you sure you want to delete this preset?')) {\n      const deleted = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.deletePreset)(presetId);\n      if (deleted) {\n        refreshPresets();\n        // Switch to default preset if current was deleted\n        if (presetId === currentPresetId) {\n          onPresetSelect('all');\n        }\n      } else {\n        alert('Cannot delete built-in presets');\n      }\n    }\n  };\n  const handleSavePreset = () => {\n    if (!editingPreset) return;\n    try {\n      (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.savePreset)(editingPreset);\n      refreshPresets();\n      setEditingPreset(null);\n      setSelectedTab('browse');\n    } catch (error) {\n      alert(`Failed to save preset: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n  const handleImport = () => {\n    if (!importText.trim()) return;\n    try {\n      // Try single preset first\n      let results = [(0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.importPreset)(importText)];\n\n      // If that fails, try multiple presets\n      if (!results[0].success) {\n        results = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.importMultiplePresets)(importText);\n      }\n      setImportResults(results);\n      if (results.some(r => r.success)) {\n        refreshPresets();\n      }\n    } catch (error) {\n      setImportResults([{\n        success: false,\n        errors: [`Import failed: ${error instanceof Error ? error.message : 'Unknown error'}`],\n        warnings: []\n      }]);\n    }\n  };\n  const handleExportPreset = presetId => {\n    const exported = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.exportPreset)(presetId, {\n      format: 'json',\n      includeMetadata: false\n    });\n    if (exported) {\n      setExportResult(exported);\n      setSelectedTab('export');\n    }\n  };\n  const handleExportAll = () => {\n    const exported = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_2__.exportAllUserPresets)({\n      format: 'json',\n      includeMetadata: false\n    });\n    setExportResult(exported);\n    setSelectedTab('export');\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(exportResult);\n    alert('Copied to clipboard!');\n  };\n  const downloadAsFile = () => {\n    const blob = new Blob([exportResult], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'cleanshare-presets.json';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n      padding: 'var(--space-md)'\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      className: \"card\",\n      style: {\n        minWidth: '800px',\n        maxWidth: '95vw',\n        maxHeight: '90vh',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h3\", {\n          className: \"card-title\",\n          children: \"Preset Manager\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n          className: \"card-subtitle\",\n          children: \"Create, edit, and manage detection presets\"\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        style: {\n          borderBottom: '1px solid var(--border-light)',\n          display: 'flex',\n          gap: '1px',\n          background: 'var(--bg-secondary)'\n        },\n        children: ['browse', 'edit', 'import', 'export'].map(tab => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"button\", {\n          onClick: () => setSelectedTab(tab),\n          style: {\n            padding: 'var(--space-sm) var(--space-md)',\n            border: 'none',\n            background: selectedTab === tab ? 'var(--bg-primary)' : 'transparent',\n            color: selectedTab === tab ? 'var(--text-primary)' : 'var(--text-secondary)',\n            borderBottom: selectedTab === tab ? '2px solid var(--color-primary)' : '2px solid transparent',\n            cursor: 'pointer',\n            fontWeight: selectedTab === tab ? '600' : '400',\n            textTransform: 'capitalize'\n          },\n          children: [tab, \" \", tab === 'edit' && editingPreset && '✏️']\n        }, tab))\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card-body\",\n        style: {\n          flex: 1,\n          overflow: 'auto'\n        },\n        children: [selectedTab === 'browse' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 'var(--space-md)',\n              marginBottom: 'var(--space-lg)',\n              flexWrap: 'wrap',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"text\",\n              placeholder: \"Search presets...\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              className: \"form-input\",\n              style: {\n                flex: 1,\n                minWidth: '200px'\n              }\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"select\", {\n              value: filterDomain,\n              onChange: e => setFilterDomain(e.target.value),\n              className: \"form-select\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n                value: \"\",\n                children: \"All Domains\"\n              }), DOMAINS.map(domain => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n                value: domain,\n                children: domain\n              }, domain))]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n              onClick: handleCreateNew,\n              className: \"btn btn-primary\",\n              children: \"\\u2795 Create New\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-md)'\n            },\n            children: filteredPresets.map(preset => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              style: {\n                padding: 'var(--space-md)',\n                border: `2px solid ${preset.id === currentPresetId ? 'var(--color-primary)' : 'var(--border-light)'}`,\n                borderRadius: 'var(--radius-md)',\n                background: preset.id === currentPresetId ? 'var(--bg-secondary)' : 'var(--bg-primary)'\n              },\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'flex-start'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  style: {\n                    flex: 1\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 'var(--space-sm)',\n                      marginBottom: 'var(--space-xs)'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n                      style: {\n                        margin: 0,\n                        fontSize: 'var(--font-size-lg)'\n                      },\n                      children: preset.name\n                    }), preset.domain && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: 'var(--color-primary)',\n                        color: 'white',\n                        borderRadius: '3px',\n                        fontSize: 'var(--font-size-xs)'\n                      },\n                      children: preset.domain\n                    }), !preset.isUserCreated && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                      style: {\n                        padding: '2px 6px',\n                        background: 'var(--color-secondary)',\n                        color: 'white',\n                        borderRadius: '3px',\n                        fontSize: 'var(--font-size-xs)'\n                      },\n                      children: \"Built-in\"\n                    })]\n                  }), preset.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n                    style: {\n                      margin: '0 0 var(--space-sm) 0',\n                      color: 'var(--text-secondary)',\n                      fontSize: 'var(--font-size-sm)'\n                    },\n                    children: preset.description\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                    style: {\n                      fontSize: 'var(--font-size-xs)',\n                      color: 'var(--text-secondary)'\n                    },\n                    children: [preset.enabledKinds.length, \" detectors \\u2022 Confidence: \", Math.round((preset.confidenceThreshold || 0.6) * 100), \"%\", preset.customPatterns && preset.customPatterns.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                      children: [\" \\u2022 \", preset.customPatterns.length, \" custom patterns\"]\n                    })]\n                  })]\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                  style: {\n                    display: 'flex',\n                    gap: 'var(--space-xs)',\n                    flexShrink: 0\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                    onClick: () => onPresetSelect(preset.id),\n                    className: `btn btn-sm ${preset.id === currentPresetId ? 'btn-secondary' : 'btn-primary'}`,\n                    children: preset.id === currentPresetId ? '✓ Active' : 'Use'\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                    onClick: () => handleEdit(preset),\n                    className: \"btn btn-outline btn-sm\",\n                    children: \"Edit\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                    onClick: () => handleDuplicate(preset),\n                    className: \"btn btn-outline btn-sm\",\n                    children: \"Copy\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                    onClick: () => handleExportPreset(preset.id),\n                    className: \"btn btn-outline btn-sm\",\n                    children: \"Export\"\n                  }), preset.isUserCreated && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                    onClick: () => handleDelete(preset.id),\n                    className: \"btn btn-outline btn-sm\",\n                    style: {\n                      color: 'var(--color-error)'\n                    },\n                    children: \"Delete\"\n                  })]\n                })]\n              })\n            }, preset.id))\n          }), filteredPresets.length === 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            style: {\n              textAlign: 'center',\n              padding: 'var(--space-xl)',\n              color: 'var(--text-secondary)'\n            },\n            children: \"No presets match your search criteria\"\n          })]\n        }), selectedTab === 'edit' && editingPreset && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(EditPresetForm, {\n          preset: editingPreset,\n          onChange: setEditingPreset,\n          onSave: handleSavePreset,\n          onCancel: () => {\n            setEditingPreset(null);\n            setSelectedTab('browse');\n          }\n        }), selectedTab === 'import' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n            style: {\n              marginBottom: 'var(--space-md)'\n            },\n            children: \"Import Presets\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              marginBottom: 'var(--space-md)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: 'var(--space-xs)',\n                fontWeight: '600'\n              },\n              children: \"JSON Data\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"textarea\", {\n              value: importText,\n              onChange: e => setImportText(e.target.value),\n              placeholder: \"Paste preset JSON data here...\",\n              style: {\n                width: '100%',\n                height: '200px',\n                padding: 'var(--space-sm)',\n                border: '1px solid var(--border-light)',\n                borderRadius: 'var(--radius-sm)',\n                fontFamily: 'monospace',\n                fontSize: 'var(--font-size-sm)'\n              }\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 'var(--space-sm)',\n              marginBottom: 'var(--space-lg)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n              onClick: handleImport,\n              className: \"btn btn-primary\",\n              children: \"Import Presets\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n              onClick: () => setImportText(''),\n              className: \"btn btn-outline\",\n              children: \"Clear\"\n            })]\n          }), importResults.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h5\", {\n              style: {\n                marginBottom: 'var(--space-sm)'\n              },\n              children: \"Import Results\"\n            }), importResults.map((result, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              style: {\n                padding: 'var(--space-sm)',\n                border: `1px solid ${result.success ? 'var(--color-success)' : 'var(--color-error)'}`,\n                borderRadius: 'var(--radius-sm)',\n                background: result.success ? 'var(--bg-success)' : 'var(--bg-error)',\n                marginBottom: 'var(--space-sm)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                style: {\n                  fontWeight: '600'\n                },\n                children: [result.success ? '✅ Success' : '❌ Failed', result.preset && `: ${result.preset.name}`]\n              }), result.errors.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"ul\", {\n                style: {\n                  margin: 'var(--space-xs) 0 0 0',\n                  paddingLeft: '20px'\n                },\n                children: result.errors.map((error, i) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n                  style: {\n                    color: 'var(--color-error)'\n                  },\n                  children: error\n                }, i))\n              }), result.warnings.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"ul\", {\n                style: {\n                  margin: 'var(--space-xs) 0 0 0',\n                  paddingLeft: '20px'\n                },\n                children: result.warnings.map((warning, i) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n                  style: {\n                    color: 'var(--color-warning)'\n                  },\n                  children: warning\n                }, i))\n              })]\n            }, index))]\n          })]\n        }), selectedTab === 'export' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n            style: {\n              marginBottom: 'var(--space-md)'\n            },\n            children: \"Export Presets\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 'var(--space-sm)',\n              marginBottom: 'var(--space-lg)'\n            },\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n              onClick: handleExportAll,\n              className: \"btn btn-primary\",\n              children: \"Export All User Presets\"\n            })\n          }), exportResult && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 'var(--space-sm)',\n                marginBottom: 'var(--space-sm)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                onClick: copyToClipboard,\n                className: \"btn btn-secondary\",\n                children: \"\\uD83D\\uDCCB Copy to Clipboard\"\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n                onClick: downloadAsFile,\n                className: \"btn btn-secondary\",\n                children: \"\\uD83D\\uDCBE Download File\"\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"textarea\", {\n              readOnly: true,\n              value: exportResult,\n              style: {\n                width: '100%',\n                height: '300px',\n                padding: 'var(--space-sm)',\n                border: '1px solid var(--border-light)',\n                borderRadius: 'var(--radius-sm)',\n                fontFamily: 'monospace',\n                fontSize: 'var(--font-size-sm)',\n                background: 'var(--bg-secondary)'\n              }\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            style: {\n              fontSize: 'var(--font-size-sm)',\n              color: 'var(--text-secondary)'\n            },\n            children: [presets.filter(p => p.isUserCreated).length, \" user presets \\u2022 \", presets.filter(p => !p.isUserCreated).length, \" built-in\"]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n            onClick: onClose,\n            className: \"btn btn-ghost\",\n            children: \"Close\"\n          })]\n        })\n      })]\n    })\n  });\n}\n\n// Edit Preset Form Component\nfunction EditPresetForm({\n  preset,\n  onChange,\n  onSave,\n  onCancel\n}) {\n  const [activeSection, setActiveSection] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('basic');\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: 'var(--space-lg)'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n        children: preset.id ? 'Edit Preset' : 'Create New Preset'\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 'var(--space-sm)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n          onClick: onSave,\n          className: \"btn btn-primary\",\n          children: \"\\uD83D\\uDCBE Save Preset\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n          onClick: onCancel,\n          className: \"btn btn-outline\",\n          children: \"Cancel\"\n        })]\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 'var(--space-xs)',\n        marginBottom: 'var(--space-lg)',\n        flexWrap: 'wrap'\n      },\n      children: ['basic', 'detectors', 'styles', 'patterns', 'advanced'].map(section => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n        onClick: () => setActiveSection(section),\n        className: `btn btn-sm ${activeSection === section ? 'btn-primary' : 'btn-outline'}`,\n        children: section.charAt(0).toUpperCase() + section.slice(1)\n      }, section))\n    }), activeSection === 'basic' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 'var(--space-md)'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: 'var(--space-xs)',\n            fontWeight: '600'\n          },\n          children: \"Name *\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n          type: \"text\",\n          value: preset.name,\n          onChange: e => onChange({\n            ...preset,\n            name: e.target.value\n          }),\n          className: \"form-input\",\n          placeholder: \"Enter preset name\"\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: 'var(--space-xs)',\n            fontWeight: '600'\n          },\n          children: \"Description\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"textarea\", {\n          value: preset.description || '',\n          onChange: e => onChange({\n            ...preset,\n            description: e.target.value\n          }),\n          className: \"form-input\",\n          placeholder: \"Describe what this preset is for\",\n          rows: 3\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: 'var(--space-xs)',\n            fontWeight: '600'\n          },\n          children: \"Domain\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"select\", {\n          value: preset.domain || 'General',\n          onChange: e => onChange({\n            ...preset,\n            domain: e.target.value\n          }),\n          className: \"form-select\",\n          children: DOMAINS.map(domain => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n            value: domain,\n            children: domain\n          }, domain))\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: 'var(--space-xs)',\n            fontWeight: '600'\n          },\n          children: [\"Confidence Threshold: \", Math.round((preset.confidenceThreshold || 0.6) * 100), \"%\"]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.05\",\n          value: preset.confidenceThreshold || 0.6,\n          onChange: e => onChange({\n            ...preset,\n            confidenceThreshold: parseFloat(e.target.value)\n          }),\n          style: {\n            width: '100%'\n          }\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n          style: {\n            fontSize: 'var(--font-size-xs)',\n            color: 'var(--text-secondary)'\n          },\n          children: \"Only show detections above this confidence level\"\n        })]\n      })]\n    }), activeSection === 'detectors' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h5\", {\n        style: {\n          marginBottom: 'var(--space-md)'\n        },\n        children: \"Enabled Detection Types\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n          gap: 'var(--space-sm)'\n        },\n        children: DETECTION_KINDS.map(kind => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 'var(--space-xs)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n            type: \"checkbox\",\n            checked: preset.enabledKinds.includes(kind),\n            onChange: e => {\n              const updated = e.target.checked ? [...preset.enabledKinds, kind] : preset.enabledKinds.filter(k => k !== kind);\n              onChange({\n                ...preset,\n                enabledKinds: updated\n              });\n            }\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n            style: {\n              fontSize: 'var(--font-size-sm)'\n            },\n            children: kind\n          })]\n        }, kind))\n      })]\n    }), activeSection === 'styles' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h5\", {\n        style: {\n          marginBottom: 'var(--space-md)'\n        },\n        children: \"Default Redaction Styles\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 'var(--space-md)'\n        },\n        children: preset.enabledKinds.map(kind => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 'var(--space-md)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"span\", {\n            style: {\n              minWidth: '120px',\n              fontWeight: '600'\n            },\n            children: [kind, \":\"]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"select\", {\n            value: preset.styleMap?.[kind] || 'BOX',\n            onChange: e => onChange({\n              ...preset,\n              styleMap: {\n                ...preset.styleMap,\n                [kind]: e.target.value\n              }\n            }),\n            className: \"form-select\",\n            style: {\n              minWidth: '150px'\n            },\n            children: REDACTION_STYLES.map(style => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n              value: style,\n              children: style\n            }, style))\n          })]\n        }, kind))\n      })]\n    }), activeSection === 'patterns' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h5\", {\n        style: {\n          marginBottom: 'var(--space-md)'\n        },\n        children: \"Custom Detection Patterns\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        style: {\n          marginBottom: 'var(--space-md)'\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n          onClick: () => {\n            const newPattern = {\n              id: `pattern_${Date.now()}`,\n              name: 'New Pattern',\n              pattern: '',\n              kind: 'OTHER',\n              confidence: 0.8,\n              description: '',\n              caseSensitive: false\n            };\n            onChange({\n              ...preset,\n              customPatterns: [...(preset.customPatterns || []), newPattern]\n            });\n          },\n          className: \"btn btn-primary btn-sm\",\n          children: \"\\u2795 Add Pattern\"\n        })\n      }), (preset.customPatterns || []).map((pattern, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        style: {\n          padding: 'var(--space-md)',\n          border: '1px solid var(--border-light)',\n          borderRadius: 'var(--radius-md)',\n          marginBottom: 'var(--space-md)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 'var(--space-sm)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"h6\", {\n            style: {\n              margin: 0\n            },\n            children: [\"Pattern \", index + 1]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n            onClick: () => {\n              const updated = preset.customPatterns?.filter((_, i) => i !== index) || [];\n              onChange({\n                ...preset,\n                customPatterns: updated\n              });\n            },\n            className: \"btn btn-outline btn-sm\",\n            style: {\n              color: 'var(--color-error)'\n            },\n            children: \"Remove\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gap: 'var(--space-md)',\n            marginBottom: 'var(--space-sm)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n              children: \"Name\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"text\",\n              value: pattern.name,\n              onChange: e => {\n                const updated = [...(preset.customPatterns || [])];\n                updated[index] = {\n                  ...pattern,\n                  name: e.target.value\n                };\n                onChange({\n                  ...preset,\n                  customPatterns: updated\n                });\n              },\n              className: \"form-input\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n              children: \"Kind\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"select\", {\n              value: pattern.kind,\n              onChange: e => {\n                const updated = [...(preset.customPatterns || [])];\n                updated[index] = {\n                  ...pattern,\n                  kind: e.target.value\n                };\n                onChange({\n                  ...preset,\n                  customPatterns: updated\n                });\n              },\n              className: \"form-select\",\n              children: DETECTION_KINDS.map(kind => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", {\n                value: kind,\n                children: kind\n              }, kind))\n            })]\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            marginBottom: 'var(--space-sm)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n            children: \"Regular Expression Pattern\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n            type: \"text\",\n            value: pattern.pattern,\n            onChange: e => {\n              const updated = [...(preset.customPatterns || [])];\n              updated[index] = {\n                ...pattern,\n                pattern: e.target.value\n              };\n              onChange({\n                ...preset,\n                customPatterns: updated\n              });\n            },\n            className: \"form-input\",\n            placeholder: \"e.g., \\\\\\\\b\\\\\\\\d{3}-\\\\\\\\d{2}-\\\\\\\\d{4}\\\\\\\\b\",\n            style: {\n              fontFamily: 'monospace'\n            }\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: '1fr auto auto',\n            gap: 'var(--space-md)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n              children: \"Description\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"text\",\n              value: pattern.description,\n              onChange: e => {\n                const updated = [...(preset.customPatterns || [])];\n                updated[index] = {\n                  ...pattern,\n                  description: e.target.value\n                };\n                onChange({\n                  ...preset,\n                  customPatterns: updated\n                });\n              },\n              className: \"form-input\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n              children: \"Confidence\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.1\",\n              value: pattern.confidence,\n              onChange: e => {\n                const updated = [...(preset.customPatterns || [])];\n                updated[index] = {\n                  ...pattern,\n                  confidence: parseFloat(e.target.value)\n                };\n                onChange({\n                  ...preset,\n                  customPatterns: updated\n                });\n              },\n              className: \"form-input\",\n              style: {\n                width: '80px'\n              }\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n              children: \"Case Sensitive\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"checkbox\",\n              checked: pattern.caseSensitive || false,\n              onChange: e => {\n                const updated = [...(preset.customPatterns || [])];\n                updated[index] = {\n                  ...pattern,\n                  caseSensitive: e.target.checked\n                };\n                onChange({\n                  ...preset,\n                  customPatterns: updated\n                });\n              },\n              style: {\n                marginTop: 'var(--space-sm)'\n              }\n            })]\n          })]\n        })]\n      }, pattern.id))]\n    }), activeSection === 'advanced' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 'var(--space-md)'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h5\", {\n          children: \"Default Redaction Configuration\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gap: 'var(--space-md)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n              children: \"Color\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"color\",\n              value: preset.defaultRedactionConfig?.color || '#000000',\n              onChange: e => onChange({\n                ...preset,\n                defaultRedactionConfig: {\n                  ...preset.defaultRedactionConfig,\n                  color: e.target.value\n                }\n              }),\n              className: \"form-input\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"label\", {\n              children: [\"Opacity: \", Math.round((preset.defaultRedactionConfig?.opacity || 0.9) * 100), \"%\"]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.1\",\n              value: preset.defaultRedactionConfig?.opacity || 0.9,\n              onChange: e => onChange({\n                ...preset,\n                defaultRedactionConfig: {\n                  ...preset.defaultRedactionConfig,\n                  opacity: parseFloat(e.target.value)\n                }\n              })\n            })]\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            marginTop: 'var(--space-md)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", {\n            children: \"Default Label Text\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"input\", {\n            type: \"text\",\n            value: preset.defaultRedactionConfig?.labelText || '',\n            onChange: e => onChange({\n              ...preset,\n              defaultRedactionConfig: {\n                ...preset.defaultRedactionConfig,\n                labelText: e.target.value\n              }\n            }),\n            className: \"form-input\",\n            placeholder: \"[REDACTED]\"\n          })]\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h5\", {\n          children: \"Legacy Custom Regex (Deprecated)\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n          style: {\n            fontSize: 'var(--font-size-sm)',\n            color: 'var(--text-secondary)',\n            marginBottom: 'var(--space-sm)'\n          },\n          children: \"Use Custom Patterns instead for better control\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"textarea\", {\n          value: preset.customRegex?.join('\\n') || '',\n          onChange: e => onChange({\n            ...preset,\n            customRegex: e.target.value.split('\\n').filter(line => line.trim())\n          }),\n          className: \"form-input\",\n          rows: 4,\n          placeholder: \"One regex pattern per line\",\n          style: {\n            fontFamily: 'monospace'\n          }\n        })]\n      })]\n    })]\n  });\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/PresetManager.tsx\n");

/***/ }),

/***/ "./src/components/UndoRedoManager.tsx":
/*!********************************************!*\
  !*** ./src/components/UndoRedoManager.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UndoRedoControls: () => (/* binding */ UndoRedoControls),\n/* harmony export */   \"default\": () => (/* binding */ UndoRedoManager)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction UndoRedoManager({\n  isOpen,\n  onClose,\n  onUndo,\n  onRedo,\n  canUndo,\n  canRedo,\n  historyPreview,\n  onJumpTo\n}) {\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString();\n  };\n  const getActionIcon = type => {\n    switch (type) {\n      case 'toggle-detection':\n        return '☑️';\n      case 'change-redaction-style':\n        return '🎨';\n      case 'change-label-text':\n        return '📝';\n      case 'bulk-toggle':\n        return '📋';\n      default:\n        return '⚙️';\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n      padding: 'var(--space-md)'\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n      className: \"card\",\n      style: {\n        minWidth: '500px',\n        maxWidth: '90vw',\n        maxHeight: '70vh',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h3\", {\n          className: \"card-title\",\n          children: \"Action History\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n          className: \"card-subtitle\",\n          children: \"Undo or redo your recent changes\"\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n        className: \"card-body\",\n        style: {\n          flex: 1,\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 'var(--space-md)',\n            marginBottom: 'var(--space-lg)',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n            onClick: onUndo,\n            disabled: !canUndo,\n            className: \"btn btn-primary\",\n            style: {\n              opacity: canUndo ? 1 : 0.5\n            },\n            children: \"\\u21B6 Undo\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n            onClick: onRedo,\n            disabled: !canRedo,\n            className: \"btn btn-primary\",\n            style: {\n              opacity: canRedo ? 1 : 0.5\n            },\n            children: \"\\u21B7 Redo\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            style: {\n              fontSize: 'var(--font-size-sm)',\n              color: 'var(--text-secondary)',\n              marginLeft: 'auto'\n            },\n            children: \"Keyboard: Ctrl+Z / Ctrl+Y\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"h4\", {\n            style: {\n              marginBottom: 'var(--space-md)'\n            },\n            children: \"Recent Actions\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-xs)'\n            },\n            children: historyPreview.length > 0 ? historyPreview.map(item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n              onClick: () => onJumpTo(item.index),\n              style: {\n                padding: 'var(--space-sm)',\n                border: `1px solid ${item.isCurrent ? 'var(--color-primary)' : 'var(--border-light)'}`,\n                borderRadius: 'var(--radius-sm)',\n                background: item.isCurrent ? 'var(--bg-secondary)' : 'var(--bg-primary)',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: 'var(--space-sm)',\n                transition: 'all var(--transition-fast)',\n                opacity: item.canRevert ? 1 : 0.6\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                style: {\n                  fontSize: 'var(--font-size-lg)'\n                },\n                children: getActionIcon(item.type)\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n                style: {\n                  flex: 1\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                  style: {\n                    fontWeight: item.isCurrent ? '600' : '400',\n                    fontSize: 'var(--font-size-sm)'\n                  },\n                  children: item.description\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n                  style: {\n                    fontSize: 'var(--font-size-xs)',\n                    color: 'var(--text-secondary)'\n                  },\n                  children: formatTime(item.timestamp)\n                })]\n              }), item.isCurrent && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n                style: {\n                  padding: '2px 6px',\n                  background: 'var(--color-primary)',\n                  color: 'white',\n                  borderRadius: '3px',\n                  fontSize: 'var(--font-size-xs)'\n                },\n                children: \"Current\"\n              })]\n            }, item.index)) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n              style: {\n                textAlign: 'center',\n                color: 'var(--text-secondary)',\n                padding: 'var(--space-xl)'\n              },\n              children: \"No actions to undo yet. Start making changes to see history here.\"\n            })\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n          style: {\n            marginTop: 'var(--space-lg)',\n            padding: 'var(--space-md)',\n            background: 'var(--bg-secondary)',\n            borderRadius: 'var(--radius-md)',\n            fontSize: 'var(--font-size-sm)',\n            color: 'var(--text-secondary)'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n            children: \"Tips:\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n            style: {\n              marginTop: 'var(--space-xs)',\n              paddingLeft: '20px'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Use Ctrl+Z to undo the last action\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Use Ctrl+Y to redo an undone action\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Click on any action in the timeline to jump to that point\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n              children: \"Actions are automatically saved and persist across page refreshes\"\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n          onClick: onClose,\n          className: \"btn btn-ghost\",\n          children: \"Close\"\n        })\n      })]\n    })\n  });\n}\n\n// Floating Undo/Redo Controls Component\nfunction UndoRedoControls({\n  onUndo,\n  onRedo,\n  canUndo,\n  canRedo,\n  onOpenHistory\n}) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '20px',\n      right: '20px',\n      display: 'flex',\n      gap: 'var(--space-xs)',\n      background: 'var(--bg-primary)',\n      border: '1px solid var(--border-light)',\n      borderRadius: 'var(--radius-lg)',\n      padding: 'var(--space-xs)',\n      boxShadow: 'var(--shadow-lg)',\n      zIndex: 100\n    },\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n      onClick: onUndo,\n      disabled: !canUndo,\n      className: \"btn btn-outline btn-sm\",\n      style: {\n        opacity: canUndo ? 1 : 0.5\n      },\n      title: \"Undo (Ctrl+Z)\",\n      children: \"\\u21B6\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n      onClick: onRedo,\n      disabled: !canRedo,\n      className: \"btn btn-outline btn-sm\",\n      style: {\n        opacity: canRedo ? 1 : 0.5\n      },\n      title: \"Redo (Ctrl+Y)\",\n      children: \"\\u21B7\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n      style: {\n        width: '1px',\n        background: 'var(--border-light)',\n        margin: '2px 0'\n      }\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"button\", {\n      onClick: onOpenHistory,\n      className: \"btn btn-outline btn-sm\",\n      title: \"View Action History\",\n      children: \"\\uD83D\\uDCCB\"\n    })]\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/UndoRedoManager.tsx\n");

/***/ }),

/***/ "./src/hooks/useUndoRedo.ts":
/*!**********************************!*\
  !*** ./src/hooks/useUndoRedo.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useUndoRedo: () => (/* binding */ useUndoRedo)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useUndoRedo(initialState, options = {}) {\n  const {\n    maxHistorySize = 50,\n    debounceMs = 300\n  } = options;\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    current: initialState,\n    history: [],\n    currentIndex: -1,\n    canUndo: false,\n    canRedo: false\n  });\n  const debounceTimer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const pendingAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const updateState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((newCurrent, newHistory, newIndex) => {\n    setState({\n      current: newCurrent,\n      history: newHistory,\n      currentIndex: newIndex,\n      canUndo: newIndex >= 0,\n      canRedo: newIndex < newHistory.length - 1\n    });\n  }, []);\n  const executeAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(action => {\n    const newCurrent = action.redo();\n    const newHistory = [...state.history.slice(0, state.currentIndex + 1), action];\n\n    // Limit history size\n    if (newHistory.length > maxHistorySize) {\n      newHistory.shift();\n    }\n    const newIndex = newHistory.length - 1;\n    updateState(newCurrent, newHistory, newIndex);\n    return newCurrent;\n  }, [state.history, state.currentIndex, maxHistorySize, updateState]);\n  const executeWithDebounce = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(action => {\n    if (debounceTimer.current) {\n      clearTimeout(debounceTimer.current);\n    }\n    pendingAction.current = action;\n    debounceTimer.current = setTimeout(() => {\n      if (pendingAction.current) {\n        executeAction(pendingAction.current);\n        pendingAction.current = null;\n      }\n    }, debounceMs);\n\n    // Execute immediately but store for potential debouncing\n    return action.redo();\n  }, [debounceMs, executeAction]);\n  const execute = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((type, description, undoFn, redoFn, options = {}) => {\n    const action = {\n      type,\n      description,\n      timestamp: Date.now(),\n      undo: undoFn,\n      redo: redoFn\n    };\n    if (options.debounce && !options.immediate) {\n      return executeWithDebounce(action);\n    } else {\n      return executeAction(action);\n    }\n  }, [executeAction, executeWithDebounce]);\n  const undo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (state.canUndo && state.currentIndex >= 0) {\n      const action = state.history[state.currentIndex];\n      const newCurrent = action.undo();\n      const newIndex = state.currentIndex - 1;\n\n      // Update the current state without adding to history\n      setState(prev => ({\n        ...prev,\n        current: newCurrent,\n        currentIndex: newIndex,\n        canUndo: newIndex >= 0,\n        canRedo: true\n      }));\n      return newCurrent;\n    }\n    return state.current;\n  }, [state]);\n  const redo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (state.canRedo && state.currentIndex < state.history.length - 1) {\n      const nextIndex = state.currentIndex + 1;\n      const action = state.history[nextIndex];\n      const newCurrent = action.redo();\n\n      // Update the current state without adding to history\n      setState(prev => ({\n        ...prev,\n        current: newCurrent,\n        currentIndex: nextIndex,\n        canUndo: true,\n        canRedo: nextIndex < prev.history.length - 1\n      }));\n      return newCurrent;\n    }\n    return state.current;\n  }, [state]);\n  const clearHistory = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    updateState(state.current, [], -1);\n  }, [state.current, updateState]);\n  const getHistoryPreview = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((maxItems = 10) => {\n    const items = [];\n    const start = Math.max(0, state.currentIndex - maxItems + 1);\n    for (let i = start; i <= Math.min(state.currentIndex + maxItems, state.history.length - 1); i++) {\n      const action = state.history[i];\n      if (action) {\n        items.push({\n          index: i,\n          type: action.type,\n          description: action.description,\n          timestamp: action.timestamp,\n          isCurrent: i === state.currentIndex,\n          canRevert: i <= state.currentIndex\n        });\n      }\n    }\n    return items;\n  }, [state.history, state.currentIndex]);\n  const jumpToIndex = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(targetIndex => {\n    if (targetIndex < -1 || targetIndex >= state.history.length) return state.current;\n    let newCurrent = state.current;\n    if (targetIndex > state.currentIndex) {\n      // Redo to target\n      for (let i = state.currentIndex + 1; i <= targetIndex; i++) {\n        newCurrent = state.history[i].redo();\n      }\n    } else if (targetIndex < state.currentIndex) {\n      // Undo to target\n      for (let i = state.currentIndex; i > targetIndex; i--) {\n        newCurrent = state.history[i].undo();\n      }\n    }\n    setState(prev => ({\n      ...prev,\n      current: newCurrent,\n      currentIndex: targetIndex,\n      canUndo: targetIndex >= 0,\n      canRedo: targetIndex < prev.history.length - 1\n    }));\n    return newCurrent;\n  }, [state]);\n  return {\n    // Current state\n    current: state.current,\n    // Actions\n    execute,\n    undo,\n    redo,\n    clearHistory,\n    jumpToIndex,\n    // State queries\n    canUndo: state.canUndo,\n    canRedo: state.canRedo,\n    // History inspection\n    history: state.history,\n    currentIndex: state.currentIndex,\n    getHistoryPreview\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useUndoRedo.ts\n");

/***/ }),

/***/ "../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages/module.compiled */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n/* harmony import */ var _pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/index.tsx */ \"./pages/index.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__]);\n_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"default\"));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getStaticProps\");\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getStaticPaths\");\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"getServerSideProps\");\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"config\");\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"reportWebVitals\");\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticProps\");\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticPaths\");\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getStaticParams\");\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerProps\");\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__, \"unstable_getServerSideProps\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/index\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    components: {\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default())\n    },\n    userland: _pages_index_tsx__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMS4wX0BiYWJlbCtjb3JlQDcuMjguM19yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMF9fcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVMmcGFnZT0lMkYmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmluZGV4LnRzeCZhYnNvbHV0ZUFwcFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCZhYnNvbHV0ZURvY3VtZW50UGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfZG9jdW1lbnQmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ2hDO0FBQ0w7QUFDMUQ7QUFDb0Q7QUFDVjtBQUMxQztBQUM4QztBQUM5QztBQUNBLGlFQUFlLHdFQUFLLENBQUMsNkNBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sdUJBQXVCLHdFQUFLLENBQUMsNkNBQVE7QUFDckMsdUJBQXVCLHdFQUFLLENBQUMsNkNBQVE7QUFDckMsMkJBQTJCLHdFQUFLLENBQUMsNkNBQVE7QUFDekMsZUFBZSx3RUFBSyxDQUFDLDZDQUFRO0FBQzdCLHdCQUF3Qix3RUFBSyxDQUFDLDZDQUFRO0FBQzdDO0FBQ08sZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsaUNBQWlDLHdFQUFLLENBQUMsNkNBQVE7QUFDL0MsZ0NBQWdDLHdFQUFLLENBQUMsNkNBQVE7QUFDOUMsb0NBQW9DLHdFQUFLLENBQUMsNkNBQVE7QUFDekQ7QUFDTyx3QkFBd0IseUdBQWdCO0FBQy9DO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsV0FBVztBQUNYLGdCQUFnQjtBQUNoQixLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQsaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8/NGQxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc1JvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIGFwcCBhbmQgZG9jdW1lbnQgbW9kdWxlcy5cbmltcG9ydCBEb2N1bWVudCBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19kb2N1bWVudFwiO1xuaW1wb3J0IEFwcCBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2luZGV4LnRzeFwiO1xuLy8gUmUtZXhwb3J0IHRoZSBjb21wb25lbnQgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBtZXRob2RzLlxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U3RhdGljUHJvcHNcIik7XG5leHBvcnQgY29uc3QgZ2V0U3RhdGljUGF0aHMgPSBob2lzdCh1c2VybGFuZCwgXCJnZXRTdGF0aWNQYXRoc1wiKTtcbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgXCJnZXRTZXJ2ZXJTaWRlUHJvcHNcIik7XG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuZXhwb3J0IGNvbnN0IHJlcG9ydFdlYlZpdGFscyA9IGhvaXN0KHVzZXJsYW5kLCBcInJlcG9ydFdlYlZpdGFsc1wiKTtcbi8vIFJlLWV4cG9ydCBsZWdhY3kgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1Byb3BzXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U3RhdGljUGF0aHNcIik7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U3RhdGljUGFyYW1zID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U3RhdGljUGFyYW1zXCIpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U2VydmVyUHJvcHNcIik7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVMsXG4gICAgICAgIHBhZ2U6IFwiL2luZGV4XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgY29tcG9uZW50czoge1xuICAgICAgICBBcHAsXG4gICAgICAgIERvY3VtZW50XG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "../core-detect/dist/detectors/index.js":
/*!**********************************************!*\
  !*** ../core-detect/dist/detectors/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateConfidence: () => (/* binding */ calculateConfidence),\n/* harmony export */   detectCustomPatterns: () => (/* binding */ detectCustomPatterns),\n/* harmony export */   detectToken: () => (/* binding */ detectToken),\n/* harmony export */   detectTokenWithCustomPatterns: () => (/* binding */ detectTokenWithCustomPatterns),\n/* harmony export */   isAWSKey: () => (/* binding */ isAWSKey),\n/* harmony export */   isAddressComponent: () => (/* binding */ isAddressComponent),\n/* harmony export */   isJWT: () => (/* binding */ isJWT),\n/* harmony export */   isLuhnValid: () => (/* binding */ isLuhnValid),\n/* harmony export */   isValidIBAN: () => (/* binding */ isValidIBAN),\n/* harmony export */   isValidSSN: () => (/* binding */ isValidSSN),\n/* harmony export */   isValidUSPassport: () => (/* binding */ isValidUSPassport)\n/* harmony export */ });\n/**\n * Determine whether a string of digits represents a valid PAN according\n * to the Luhn checksum algorithm.  Only digits are considered; all\n * non‑numeric characters should be stripped before calling this function.\n */\nfunction isLuhnValid(value) {\n    let sum = 0;\n    let shouldDouble = false;\n    for (let i = value.length - 1; i >= 0; i--) {\n        const c = value.charCodeAt(i) - 48;\n        if (c < 0 || c > 9) {\n            return false;\n        }\n        let digit = c;\n        if (shouldDouble) {\n            digit *= 2;\n            if (digit > 9)\n                digit -= 9;\n        }\n        sum += digit;\n        shouldDouble = !shouldDouble;\n    }\n    return sum % 10 === 0;\n}\n/**\n * Validate an International Bank Account Number (IBAN) using the MOD 97\n * algorithm defined in ISO 13616.  Letters are mapped A=10, B=11, …\n * The function returns true when the IBAN appears structurally valid.  It\n * does not verify that the account exists.\n */\nfunction isValidIBAN(iban) {\n    const cleaned = iban.replace(/\\s+/g, '').toUpperCase();\n    // Basic length check: IBANs are between 15 and 34 characters long\n    if (cleaned.length < 15 || cleaned.length > 34)\n        return false;\n    // Move the four initial characters to the end of the string\n    const rearranged = cleaned.slice(4) + cleaned.slice(0, 4);\n    // Replace letters with numbers: A=10, B=11, …\n    let numeric = '';\n    for (const ch of rearranged) {\n        const code = ch.charCodeAt(0);\n        if (code >= 48 && code <= 57) {\n            numeric += ch;\n        }\n        else if (code >= 65 && code <= 90) {\n            numeric += (code - 55).toString();\n        }\n        else {\n            return false;\n        }\n    }\n    // Compute the remainder using mod 97\n    let remainder = 0;\n    for (let i = 0; i < numeric.length; i++) {\n        remainder = (remainder * 10 + Number(numeric[i])) % 97;\n    }\n    return remainder === 1;\n}\n/**\n * Validate a US Social Security Number (SSN).  Performs basic\n * structural checks: XXX-XX-XXXX where the area number is not 000,\n * 666, or between 900–999; the group number is not 00; and the serial\n * number is not 0000.\n */\nfunction isValidSSN(value) {\n    const ssnRegex = /^(\\d{3})-(\\d{2})-(\\d{4})$/;\n    const match = ssnRegex.exec(value);\n    if (!match)\n        return false;\n    const area = parseInt(match[1], 10);\n    const group = parseInt(match[2], 10);\n    const serial = parseInt(match[3], 10);\n    if (area === 0 || group === 0 || serial === 0)\n        return false;\n    if (area === 666 || area >= 900)\n        return false;\n    return true;\n}\n/**\n * Validate US passport number format. US passports are typically 9 digits\n * or 1 letter followed by 8 digits (newer format).\n */\nfunction isValidUSPassport(value) {\n    const cleaned = value.replace(/\\s+/g, '');\n    // Format 1: 9 digits (older format)\n    if (/^\\d{9}$/.test(cleaned))\n        return true;\n    // Format 2: 1 letter + 8 digits (newer format) \n    if (/^[A-Z]\\d{8}$/.test(cleaned))\n        return true;\n    return false;\n}\n/**\n * Enhanced address detection with common address components\n */\nfunction isAddressComponent(value) {\n    const token = value.trim();\n    // Street suffixes (high confidence)\n    const streetSuffixes = /^(Street|St\\.?|Avenue|Ave\\.?|Road|Rd\\.?|Lane|Ln\\.?|Boulevard|Blvd\\.?|Drive|Dr\\.?|Circle|Cir\\.?|Court|Ct\\.?|Place|Pl\\.?|Way|Parkway|Pkwy\\.?)$/i;\n    if (streetSuffixes.test(token)) {\n        return { isAddress: true, confidence: 0.95, reason: 'Street type indicator' };\n    }\n    // Directional indicators (medium confidence)\n    const directions = /^(North|N\\.?|South|S\\.?|East|E\\.?|West|W\\.?|Northeast|NE\\.?|Northwest|NW\\.?|Southeast|SE\\.?|Southwest|SW\\.?)$/i;\n    if (directions.test(token)) {\n        return { isAddress: true, confidence: 0.7, reason: 'Directional indicator' };\n    }\n    // Address with numbers (medium confidence)\n    if (/\\d/.test(token) && token.length >= 3) {\n        // House numbers, apartment numbers, ZIP codes\n        if (/^\\d{1,5}[A-Z]?$/.test(token) || /^\\d{5}(-\\d{4})?$/.test(token)) {\n            return { isAddress: true, confidence: 0.8, reason: 'House number or ZIP code pattern' };\n        }\n        if (/^#?\\d+[A-Z]?$/.test(token) || /^(Apt|Suite|Unit|Ste|#)\\s*\\d+[A-Z]?$/i.test(token)) {\n            return { isAddress: true, confidence: 0.85, reason: 'Apartment/suite number' };\n        }\n        // Generic number in address context\n        return { isAddress: true, confidence: 0.6, reason: 'Contains digits and could be part of address' };\n    }\n    // State abbreviations (high confidence)\n    const stateAbbrev = /^(AL|AK|AZ|AR|CA|CO|CT|DE|FL|GA|HI|ID|IL|IN|IA|KS|KY|LA|ME|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|OH|OK|OR|PA|RI|SC|SD|TN|TX|UT|VT|VA|WA|WV|WI|WY|DC)$/;\n    if (stateAbbrev.test(token.toUpperCase())) {\n        return { isAddress: true, confidence: 0.9, reason: 'US state abbreviation' };\n    }\n    return { isAddress: false, confidence: 0, reason: '' };\n}\n/**\n * Calculate confidence score for detection based on pattern strength and context\n */\nfunction calculateConfidence(kind, token, ocrConfidence = 0.9) {\n    const base = Math.min(ocrConfidence, 0.95); // Cap OCR confidence\n    switch (kind) {\n        case 'EMAIL':\n            // Higher confidence for well-formed emails\n            return token.includes('@') && token.includes('.') ? Math.min(base + 0.05, 1.0) : base * 0.8;\n        case 'PHONE':\n            const digits = token.replace(/\\D/g, '');\n            // Higher confidence for standard formats\n            if (digits.length === 10 || digits.length === 11)\n                return Math.min(base + 0.1, 1.0);\n            if (digits.length >= 7 && digits.length <= 15)\n                return base * 0.9;\n            return base * 0.7;\n        case 'PAN':\n            // Credit cards with Luhn validation get high confidence\n            return Math.min(base + 0.1, 1.0);\n        case 'SSN':\n            // SSN with proper validation gets high confidence\n            return Math.min(base + 0.15, 1.0);\n        case 'PASSPORT':\n            // Passport numbers get medium-high confidence\n            return Math.min(base + 0.05, 1.0);\n        case 'IBAN':\n            // IBAN with MOD 97 validation gets high confidence\n            return Math.min(base + 0.1, 1.0);\n        case 'ADDRESS':\n            // Address confidence varies by component type - handled in isAddressComponent\n            return base;\n        case 'NAME':\n            // Names are tricky - lower confidence to reduce false positives\n            return base * 0.7;\n        case 'BARCODE':\n            // QR codes/barcodes are typically very reliable\n            return 1.0;\n        case 'JWT':\n            // JWT format is distinctive\n            return Math.min(base + 0.05, 1.0);\n        case 'API_KEY':\n            // API keys have distinctive patterns\n            return Math.min(base + 0.1, 1.0);\n        default:\n            return base;\n    }\n}\n/** Detect whether a token is formatted like a JSON Web Token (JWT). */\nfunction isJWT(value) {\n    return /^[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]+$/.test(value.trim());\n}\n/** Detect whether a token looks like an AWS access key ID.  AWS keys\n * typically start with AKIA or ASIA followed by 16 uppercase letters or\n * digits. */\nfunction isAWSKey(value) {\n    return /^(A(KIA|SIA)[A-Z0-9]{16})$/.test(value.trim());\n}\n/**\n * Perform high‑level detection for a single token.  If the token matches\n * a sensitive pattern, this function returns an object describing the\n * detection; otherwise it returns null.  Note that this function does\n * not compute bounding boxes – it only classifies the token.  Bounding\n * boxes are provided by the OCR engine.\n */\nfunction detectToken(token) {\n    const raw = token.trim();\n    if (!raw)\n        return null;\n    // PAN (credit card number) – 13–19 digits with Luhn valid (check first to avoid phone conflicts)\n    const digitsOnly = raw.replace(/\\D/g, '');\n    if (digitsOnly.length >= 13 && digitsOnly.length <= 19 && isLuhnValid(digitsOnly)) {\n        return { kind: 'PAN', reason: 'Luhn valid primary account number', confidence: 0.95 };\n    }\n    // IBAN (starts with two letters followed by digits and letters)\n    const ibanPattern = /^[A-Z]{2}[0-9A-Z]{13,32}$/i;\n    if (ibanPattern.test(raw) && isValidIBAN(raw)) {\n        return { kind: 'IBAN', reason: 'Valid IBAN checksum', confidence: 0.95 };\n    }\n    // SSN (US format) - check before general phone patterns, including invalid ones\n    const ssnPattern = /^\\d{3}-\\d{2}-\\d{4}$/;\n    if (ssnPattern.test(raw)) {\n        if (isValidSSN(raw)) {\n            return { kind: 'SSN', reason: 'Valid US SSN format', confidence: 0.95 };\n        }\n        // Don't detect invalid SSNs as other types\n        return null;\n    }\n    // Passport number (US format)\n    const passportPattern = /^[A-Z]?\\d{8,9}$/i;\n    if (passportPattern.test(raw) && isValidUSPassport(raw.toUpperCase())) {\n        return { kind: 'PASSPORT', reason: 'Valid US passport number format', confidence: 0.9 };\n    }\n    // JWT - check early to prevent JWT being detected as address (contains many digits)\n    if (isJWT(raw) && raw.length > 50) {\n        return { kind: 'JWT', reason: 'Looks like a JWT token', confidence: 0.9 };\n    }\n    // Email - more strict pattern to reduce false positives\n    const emailPattern = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    if (emailPattern.test(raw) && raw.includes('@') && raw.includes('.')) {\n        return { kind: 'EMAIL', reason: 'Matches email pattern', confidence: 0.9 };\n    }\n    // Phone number - enhanced detection with format validation\n    if (digitsOnly.length >= 7 && /\\d{3,}/.test(digitsOnly)) {\n        // North American format (10-11 digits)\n        if (digitsOnly.length === 10 || (digitsOnly.length === 11 && digitsOnly[0] === '1')) {\n            return { kind: 'PHONE', reason: 'North American phone format', confidence: 0.85 };\n        }\n        // International format (7-15 digits)\n        if (digitsOnly.length >= 7 && digitsOnly.length <= 15) {\n            return { kind: 'PHONE', reason: 'International phone format', confidence: 0.75 };\n        }\n    }\n    // Enhanced address detection\n    const addressResult = isAddressComponent(raw);\n    if (addressResult.isAddress) {\n        return { kind: 'ADDRESS', reason: addressResult.reason, confidence: addressResult.confidence };\n    }\n    // AWS access key id\n    if (isAWSKey(raw)) {\n        return { kind: 'API_KEY', reason: 'Looks like an AWS access key', confidence: 0.95 };\n    }\n    // Names (proper nouns) - enhanced with false positive reduction\n    const namePattern = /^[A-Z][a-z]{2,}$/;\n    if (namePattern.test(raw) && !/\\d/.test(raw) && raw.toUpperCase() !== raw) {\n        // Exclude common words that aren't names\n        const commonWords = /^(The|And|But|For|Are|This|That|With|Have|Will|From|They|Know|Want|Been|Good|Much|Some|Time|Very|When|Come|Here|Just|Like|Long|Make|Many|Over|Such|Take|Than|Them|Well|Were|What|Your|After|Before|Could|First|Found|Great|Other|Right|Should|These|Where|Which|While|Would|Years|Young|About|Again|Place|State|Still|Think|Three|Through|Under|Water|Write)$/i;\n        if (!commonWords.test(raw)) {\n            return { kind: 'NAME', reason: 'Likely proper name', confidence: 0.6 };\n        }\n    }\n    return null;\n}\n/**\n * Apply custom detection patterns to a token\n */\nfunction detectCustomPatterns(token, customPatterns) {\n    if (!customPatterns || customPatterns.length === 0)\n        return null;\n    for (const pattern of customPatterns) {\n        try {\n            const flags = pattern.caseSensitive === false ? 'i' : '';\n            const regex = new RegExp(pattern.pattern, flags);\n            if (regex.test(token)) {\n                return {\n                    kind: pattern.kind,\n                    reason: `Custom pattern: ${pattern.name}`,\n                    confidence: pattern.confidence\n                };\n            }\n        }\n        catch (error) {\n            // Skip invalid regex patterns\n            console.warn(`Invalid custom pattern ${pattern.id}: ${error}`);\n            continue;\n        }\n    }\n    return null;\n}\n/**\n * Enhanced detectToken that includes custom pattern support\n */\nfunction detectTokenWithCustomPatterns(token, customPatterns) {\n    // First check custom patterns (they take precedence)\n    if (customPatterns && customPatterns.length > 0) {\n        const customResult = detectCustomPatterns(token, customPatterns);\n        if (customResult)\n            return customResult;\n    }\n    // Fall back to standard detection\n    return detectToken(token);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/detectors/index.js\n");

/***/ }),

/***/ "../core-detect/dist/formats.js":
/*!**************************************!*\
  !*** ../core-detect/dist/formats.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SUPPORTED_FILE_TYPES: () => (/* binding */ SUPPORTED_FILE_TYPES),\n/* harmony export */   convertDocumentToPdf: () => (/* binding */ convertDocumentToPdf),\n/* harmony export */   convertHeicToJpeg: () => (/* binding */ convertHeicToJpeg),\n/* harmony export */   convertTiffToPng: () => (/* binding */ convertTiffToPng),\n/* harmony export */   convertWebPToStandard: () => (/* binding */ convertWebPToStandard),\n/* harmony export */   getFileType: () => (/* binding */ getFileType),\n/* harmony export */   getSupportedExtensions: () => (/* binding */ getSupportedExtensions),\n/* harmony export */   isSupportedFile: () => (/* binding */ isSupportedFile),\n/* harmony export */   processBulkFiles: () => (/* binding */ processBulkFiles)\n/* harmony export */ });\n/**\n * Supported file types and their extensions\n */\nconst SUPPORTED_FILE_TYPES = {\n    images: {\n        'image/jpeg': ['.jpg', '.jpeg'],\n        'image/png': ['.png'],\n        'image/webp': ['.webp'],\n        'image/tiff': ['.tiff', '.tif'],\n        'image/heic': ['.heic'],\n        'image/heif': ['.heif'],\n    },\n    pdf: {\n        'application/pdf': ['.pdf'],\n    },\n    documents: {\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n        'application/vnd.ms-excel': ['.xls'],\n        'text/csv': ['.csv'],\n    },\n};\n/**\n * Get file type from MIME type or filename\n */\nfunction getFileType(file) {\n    const mimeType = typeof file === 'string' ? getMimeTypeFromFilename(file) : file.type;\n    const filename = typeof file === 'string' ? file : file.name;\n    // Check image formats\n    for (const [mime, extensions] of Object.entries(SUPPORTED_FILE_TYPES.images)) {\n        if (mimeType === mime || extensions.some(ext => filename.toLowerCase().endsWith(ext))) {\n            if (mime === 'image/heic' || mime === 'image/heif')\n                return 'heic';\n            if (mime === 'image/webp')\n                return 'webp';\n            if (mime === 'image/tiff')\n                return 'tiff';\n            return 'image';\n        }\n    }\n    // Check PDF\n    if (mimeType === 'application/pdf' || filename.toLowerCase().endsWith('.pdf')) {\n        return 'pdf';\n    }\n    // Check documents\n    for (const [mime, extensions] of Object.entries(SUPPORTED_FILE_TYPES.documents)) {\n        if (mimeType === mime || extensions.some(ext => filename.toLowerCase().endsWith(ext))) {\n            return 'document';\n        }\n    }\n    // Default to image for unknown types\n    return 'image';\n}\n/**\n * Get MIME type from filename extension\n */\nfunction getMimeTypeFromFilename(filename) {\n    const ext = filename.toLowerCase().split('.').pop();\n    const mimeMap = {\n        jpg: 'image/jpeg',\n        jpeg: 'image/jpeg',\n        png: 'image/png',\n        webp: 'image/webp',\n        tiff: 'image/tiff',\n        tif: 'image/tiff',\n        heic: 'image/heic',\n        heif: 'image/heif',\n        pdf: 'application/pdf',\n        docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        xls: 'application/vnd.ms-excel',\n        csv: 'text/csv',\n    };\n    return mimeMap[ext || ''] || 'application/octet-stream';\n}\n/**\n * Check if a file type is supported\n */\nfunction isSupportedFile(file) {\n    const type = getFileType(file);\n    return ['image', 'pdf', 'heic', 'webp', 'tiff', 'document'].includes(type);\n}\n/**\n * Get supported file extensions as a string for file input accept attribute\n */\nfunction getSupportedExtensions() {\n    const allExtensions = [];\n    // Add image extensions\n    Object.values(SUPPORTED_FILE_TYPES.images).forEach(extensions => {\n        allExtensions.push(...extensions);\n    });\n    // Add PDF extensions\n    Object.values(SUPPORTED_FILE_TYPES.pdf).forEach(extensions => {\n        allExtensions.push(...extensions);\n    });\n    // Add document extensions\n    Object.values(SUPPORTED_FILE_TYPES.documents).forEach(extensions => {\n        allExtensions.push(...extensions);\n    });\n    return allExtensions.join(',');\n}\n/**\n * Convert HEIC/HEIF to JPEG for processing\n */\nasync function convertHeicToJpeg(file) {\n    // Note: This would require a HEIC decoder library like libheif-js or heic2any\n    // For now, return a placeholder implementation\n    console.warn('HEIC conversion not yet implemented - requires libheif-js or similar');\n    // Placeholder: return original file (will likely fail processing)\n    return new File([file], file.name.replace(/\\.(heic|heif)$/i, '.jpg'), {\n        type: 'image/jpeg'\n    });\n}\n/**\n * Convert WebP to PNG/JPEG for better compatibility\n */\nasync function convertWebPToStandard(file, targetFormat = 'png') {\n    return new Promise((resolve, reject) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const img = new Image();\n        img.onload = () => {\n            canvas.width = img.width;\n            canvas.height = img.height;\n            if (!ctx) {\n                reject(new Error('Canvas context not available'));\n                return;\n            }\n            ctx.drawImage(img, 0, 0);\n            canvas.toBlob((blob) => {\n                if (!blob) {\n                    reject(new Error('Failed to convert WebP'));\n                    return;\n                }\n                const convertedFile = new File([blob], file.name.replace(/\\.webp$/i, `.${targetFormat}`), {\n                    type: `image/${targetFormat}`\n                });\n                resolve(convertedFile);\n            }, `image/${targetFormat}`, 0.9);\n        };\n        img.onerror = () => reject(new Error('Failed to load WebP image'));\n        img.src = URL.createObjectURL(file);\n    });\n}\n/**\n * Convert TIFF to PNG for processing\n */\nasync function convertTiffToPng(file) {\n    // Note: This would require a TIFF decoder library like tiff.js\n    console.warn('TIFF conversion not yet implemented - requires tiff.js or similar');\n    // Placeholder: return as PNG type but original data (will likely fail)\n    return new File([file], file.name.replace(/\\.tiff?$/i, '.png'), {\n        type: 'image/png'\n    });\n}\n/**\n * Process bulk files with progress tracking\n */\nasync function processBulkFiles(files, analyzeFn, applyFn, options = {}) {\n    const { maxConcurrency = 3, onProgress, onFileComplete, stopOnError = false } = options;\n    const startTime = Date.now();\n    const results = [];\n    const errors = [];\n    let successful = 0;\n    let failed = 0;\n    // Process files in batches to control concurrency\n    for (let i = 0; i < files.length; i += maxConcurrency) {\n        const batch = files.slice(i, i + maxConcurrency);\n        const batchPromises = batch.map(async (file, batchIndex) => {\n            const fileIndex = i + batchIndex;\n            try {\n                onProgress === null || onProgress === void 0 ? void 0 : onProgress(fileIndex, files.length, file.name || `file-${fileIndex}`);\n                // Analyze file\n                const analyzeResult = await analyzeFn(file);\n                // Apply redactions\n                const applyResult = await applyFn(file, analyzeResult);\n                results[fileIndex] = applyResult;\n                errors[fileIndex] = null;\n                successful++;\n                onFileComplete === null || onFileComplete === void 0 ? void 0 : onFileComplete(file, applyResult);\n                return applyResult;\n            }\n            catch (error) {\n                const err = error instanceof Error ? error : new Error(String(error));\n                results[fileIndex] = null;\n                errors[fileIndex] = err;\n                failed++;\n                onFileComplete === null || onFileComplete === void 0 ? void 0 : onFileComplete(file, null, err);\n                if (stopOnError) {\n                    throw err;\n                }\n                return null;\n            }\n        });\n        try {\n            await Promise.all(batchPromises);\n        }\n        catch (error) {\n            if (stopOnError) {\n                break;\n            }\n        }\n    }\n    const duration = Date.now() - startTime;\n    return {\n        successful,\n        failed,\n        total: files.length,\n        results,\n        errors,\n        duration\n    };\n}\n/**\n * Convert document to PDF for processing\n */\nasync function convertDocumentToPdf(file, options = { targetFormat: 'pdf' }) {\n    // Note: This would require document conversion libraries\n    // For DOCX: mammoth.js + html-to-pdf\n    // For XLSX: xlsx + html-to-pdf\n    console.warn(`Document conversion not yet implemented for ${file.type}`);\n    console.log('Would convert:', file.name, 'with options:', options);\n    // Placeholder: return original file\n    return file;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/formats.js\n");

/***/ }),

/***/ "../core-detect/dist/history.js":
/*!**************************************!*\
  !*** ../core-detect/dist/history.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearHistory: () => (/* binding */ clearHistory),\n/* harmony export */   endSession: () => (/* binding */ endSession),\n/* harmony export */   exportHistory: () => (/* binding */ exportHistory),\n/* harmony export */   getAllRecords: () => (/* binding */ getAllRecords),\n/* harmony export */   getCurrentSession: () => (/* binding */ getCurrentSession),\n/* harmony export */   getProcessingStats: () => (/* binding */ getProcessingStats),\n/* harmony export */   getSession: () => (/* binding */ getSession),\n/* harmony export */   getSessionRecords: () => (/* binding */ getSessionRecords),\n/* harmony export */   getSessions: () => (/* binding */ getSessions),\n/* harmony export */   recordAnalysisResults: () => (/* binding */ recordAnalysisResults),\n/* harmony export */   recordRedactionResults: () => (/* binding */ recordRedactionResults),\n/* harmony export */   startFileProcessing: () => (/* binding */ startFileProcessing),\n/* harmony export */   startSession: () => (/* binding */ startSession)\n/* harmony export */ });\n// Local storage keys\nconst SESSIONS_KEY = 'cleanshare_processing_sessions';\nconst RECORDS_KEY = 'cleanshare_file_records';\n// In-memory storage for current session\nlet sessions = [];\nlet records = [];\nlet currentSession = null;\n// Load data from localStorage on startup\ntry {\n    if (typeof localStorage !== 'undefined') {\n        const storedSessions = localStorage.getItem(SESSIONS_KEY);\n        const storedRecords = localStorage.getItem(RECORDS_KEY);\n        if (storedSessions) {\n            sessions = JSON.parse(storedSessions);\n        }\n        if (storedRecords) {\n            records = JSON.parse(storedRecords);\n        }\n    }\n}\ncatch (error) {\n    console.warn('Failed to load processing history from localStorage:', error);\n}\n// Save to localStorage\nfunction saveToStorage() {\n    try {\n        if (typeof localStorage !== 'undefined') {\n            localStorage.setItem(SESSIONS_KEY, JSON.stringify(sessions));\n            localStorage.setItem(RECORDS_KEY, JSON.stringify(records));\n        }\n    }\n    catch (error) {\n        console.warn('Failed to save processing history to localStorage:', error);\n    }\n}\n// Generate unique ID\nfunction generateId() {\n    return `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n// Calculate statistics from detections\nfunction calculateDetectionStats(detections) {\n    const counts = {};\n    let totalConfidence = 0;\n    const confidenceDistribution = { low: 0, medium: 0, high: 0 };\n    detections.forEach(detection => {\n        counts[detection.kind] = (counts[detection.kind] || 0) + 1;\n        totalConfidence += detection.confidence;\n        if (detection.confidence < 0.5) {\n            confidenceDistribution.low++;\n        }\n        else if (detection.confidence < 0.8) {\n            confidenceDistribution.medium++;\n        }\n        else {\n            confidenceDistribution.high++;\n        }\n    });\n    return {\n        counts,\n        total: detections.length,\n        averageConfidence: detections.length > 0 ? totalConfidence / detections.length : 0,\n        confidenceDistribution\n    };\n}\n// Calculate redaction statistics\nfunction calculateRedactionStats(actions) {\n    const byType = {};\n    const byStyle = {};\n    actions.forEach(action => {\n        byStyle[action.style] = (byStyle[action.style] || 0) + 1;\n    });\n    return {\n        total: actions.length,\n        byType, // Will be populated when we have detection kind mapping\n        byStyle\n    };\n}\n/** Start a new processing session */\nfunction startSession(options) {\n    const sessionId = generateId();\n    currentSession = {\n        id: sessionId,\n        startTime: new Date().toISOString(),\n        status: 'running',\n        totalFiles: options.totalFiles,\n        processedFiles: 0,\n        failedFiles: 0,\n        presetId: options.presetId,\n        presetName: options.presetName,\n        options: {\n            analyze: options.analyzeOptions,\n            apply: options.applyOptions\n        }\n    };\n    sessions.push(currentSession);\n    saveToStorage();\n    return sessionId;\n}\n/** End the current processing session */\nfunction endSession(sessionId, status = 'completed') {\n    const session = sessions.find(s => s.id === sessionId);\n    if (session) {\n        session.endTime = new Date().toISOString();\n        session.status = status;\n        if ((currentSession === null || currentSession === void 0 ? void 0 : currentSession.id) === sessionId) {\n            currentSession = null;\n        }\n        saveToStorage();\n    }\n}\n/** Record the start of file processing */\nfunction startFileProcessing(options) {\n    const recordId = generateId();\n    const record = {\n        id: recordId,\n        sessionId: options.sessionId,\n        fileName: options.fileName,\n        fileSize: options.fileSize,\n        fileType: options.fileType,\n        timestamp: new Date().toISOString(),\n        processingTime: 0,\n        status: 'analyzing',\n        detectionCounts: {},\n        totalDetections: 0,\n        averageConfidence: 0,\n        redactionStats: {\n            total: 0,\n            byType: {},\n            byStyle: {}\n        },\n        confidenceDistribution: { low: 0, medium: 0, high: 0 }\n    };\n    records.push(record);\n    saveToStorage();\n    return recordId;\n}\n/** Update file processing record with analysis results */\nfunction recordAnalysisResults(recordId, options) {\n    const record = records.find(r => r.id === recordId);\n    if (!record)\n        return;\n    if (options.error) {\n        record.status = 'failed';\n        record.error = options.error;\n        // Update session failed count\n        const session = sessions.find(s => s.id === record.sessionId);\n        if (session) {\n            session.failedFiles++;\n        }\n    }\n    else {\n        record.status = 'applying';\n        record.detections = options.detections;\n        const stats = calculateDetectionStats(options.detections);\n        record.detectionCounts = stats.counts;\n        record.totalDetections = stats.total;\n        record.averageConfidence = stats.averageConfidence;\n        record.confidenceDistribution = stats.confidenceDistribution;\n        record.ocrTime = options.ocrTime;\n        record.detectionTime = options.detectionTime;\n    }\n    saveToStorage();\n}\n/** Update file processing record with redaction results */\nfunction recordRedactionResults(recordId, options) {\n    const record = records.find(r => r.id === recordId);\n    if (!record)\n        return;\n    const startTime = new Date(record.timestamp).getTime();\n    record.processingTime = Date.now() - startTime;\n    if (options.error) {\n        record.status = 'failed';\n        record.error = options.error;\n        // Update session failed count\n        const session = sessions.find(s => s.id === record.sessionId);\n        if (session) {\n            session.failedFiles++;\n        }\n    }\n    else {\n        record.status = 'completed';\n        record.appliedRedactions = options.appliedRedactions;\n        record.redactionStats = calculateRedactionStats(options.appliedRedactions);\n        record.redactionTime = options.redactionTime;\n        record.outputSize = options.outputSize;\n        // Update session processed count\n        const session = sessions.find(s => s.id === record.sessionId);\n        if (session) {\n            session.processedFiles++;\n        }\n    }\n    saveToStorage();\n}\n/** Get all processing sessions */\nfunction getSessions() {\n    return sessions.slice().reverse(); // Most recent first\n}\n/** Get session by ID */\nfunction getSession(sessionId) {\n    return sessions.find(s => s.id === sessionId);\n}\n/** Get file records for a session */\nfunction getSessionRecords(sessionId) {\n    return records.filter(r => r.sessionId === sessionId);\n}\n/** Get all file records */\nfunction getAllRecords() {\n    return records.slice().reverse(); // Most recent first\n}\n/** Get processing statistics */\nfunction getProcessingStats(dateRange) {\n    let filteredRecords = records;\n    if (dateRange) {\n        filteredRecords = records.filter(r => {\n            const timestamp = new Date(r.timestamp);\n            return timestamp >= new Date(dateRange.start) && timestamp <= new Date(dateRange.end);\n        });\n    }\n    const completedRecords = filteredRecords.filter(r => r.status === 'completed');\n    const totalDetections = completedRecords.reduce((sum, r) => sum + r.totalDetections, 0);\n    const totalProcessingTime = completedRecords.reduce((sum, r) => sum + r.processingTime, 0);\n    // Calculate detection statistics\n    const detectionsByType = {};\n    const detectionsByConfidence = { low: 0, medium: 0, high: 0 };\n    const redactionsByStyle = {};\n    const presetUsage = {};\n    completedRecords.forEach(record => {\n        // Detection counts by type\n        Object.entries(record.detectionCounts).forEach(([type, count]) => {\n            detectionsByType[type] = (detectionsByType[type] || 0) + count;\n        });\n        // Confidence distribution\n        detectionsByConfidence.low += record.confidenceDistribution.low;\n        detectionsByConfidence.medium += record.confidenceDistribution.medium;\n        detectionsByConfidence.high += record.confidenceDistribution.high;\n        // Redaction styles\n        Object.entries(record.redactionStats.byStyle).forEach(([style, count]) => {\n            redactionsByStyle[style] = (redactionsByStyle[style] || 0) + count;\n        });\n        // Preset usage\n        const session = sessions.find(s => s.id === record.sessionId);\n        if (session === null || session === void 0 ? void 0 : session.presetName) {\n            presetUsage[session.presetName] = (presetUsage[session.presetName] || 0) + 1;\n        }\n    });\n    // Processing times by date\n    const timesByDate = new Map();\n    completedRecords.forEach(record => {\n        const date = new Date(record.timestamp).toISOString().split('T')[0];\n        const existing = timesByDate.get(date) || { total: 0, count: 0 };\n        timesByDate.set(date, {\n            total: existing.total + record.processingTime,\n            count: existing.count + 1\n        });\n    });\n    const processingTimesByDate = Array.from(timesByDate.entries()).map(([date, { total, count }]) => ({\n        date,\n        averageTime: total / count,\n        fileCount: count\n    })).sort((a, b) => a.date.localeCompare(b.date));\n    return {\n        totalSessions: sessions.length,\n        totalFiles: filteredRecords.length,\n        totalDetections,\n        averageProcessingTime: completedRecords.length > 0 ? totalProcessingTime / completedRecords.length : 0,\n        successRate: filteredRecords.length > 0 ? completedRecords.length / filteredRecords.length : 0,\n        detectionsByType,\n        detectionsByConfidence,\n        redactionsByStyle,\n        processingTimesByDate,\n        presetUsage\n    };\n}\n/** Clear processing history */\nfunction clearHistory() {\n    sessions = [];\n    records = [];\n    currentSession = null;\n    saveToStorage();\n}\n/** Export processing history */\nfunction exportHistory(options = { format: 'json' }) {\n    var _a;\n    let data;\n    if (options.format === 'json') {\n        data = {\n            sessions: getSessions(),\n            records: getAllRecords(),\n            stats: getProcessingStats(options.dateRange),\n            exportedAt: new Date().toISOString()\n        };\n        if (!options.includeFileDetails) {\n            delete data.records;\n        }\n        if (!options.includeDetectionDetails) {\n            (_a = data.records) === null || _a === void 0 ? void 0 : _a.forEach((record) => {\n                delete record.detections;\n                delete record.appliedRedactions;\n            });\n        }\n        return JSON.stringify(data, null, 2);\n    }\n    else {\n        // CSV format - flatten records for easy analysis\n        const headers = [\n            'Session ID',\n            'File Name',\n            'File Size',\n            'File Type',\n            'Timestamp',\n            'Processing Time (ms)',\n            'Status',\n            'Total Detections',\n            'Average Confidence',\n            'High Confidence Count',\n            'Medium Confidence Count',\n            'Low Confidence Count',\n            'Total Redactions',\n            'Preset Name',\n            'Error'\n        ];\n        const rows = getAllRecords().map(record => {\n            const session = sessions.find(s => s.id === record.sessionId);\n            return [\n                record.sessionId,\n                record.fileName,\n                record.fileSize,\n                record.fileType,\n                record.timestamp,\n                record.processingTime,\n                record.status,\n                record.totalDetections,\n                record.averageConfidence.toFixed(3),\n                record.confidenceDistribution.high,\n                record.confidenceDistribution.medium,\n                record.confidenceDistribution.low,\n                record.redactionStats.total,\n                (session === null || session === void 0 ? void 0 : session.presetName) || '',\n                record.error || ''\n            ];\n        });\n        return [headers, ...rows].map(row => row.map(cell => `\"${String(cell).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n');\n    }\n}\n/** Get current active session */\nfunction getCurrentSession() {\n    return currentSession;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/history.js\n");

/***/ }),

/***/ "../core-detect/dist/index.js":
/*!************************************!*\
  !*** ../core-detect/dist/index.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* reexport safe */ _pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__.analyzeDocument),\n/* harmony export */   applyRedactions: () => (/* reexport safe */ _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__.applyRedactions)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"../core-detect/dist/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"analyzeDocument\",\"applyRedactions\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline/analyze */ \"../core-detect/dist/pipeline/analyze.js\");\n/* harmony import */ var _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pipeline/apply */ \"../core-detect/dist/pipeline/apply.js\");\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./presets */ \"../core-detect/dist/presets.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _presets__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"analyzeDocument\",\"applyRedactions\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _presets__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _formats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formats */ \"../core-detect/dist/formats.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _formats__WEBPACK_IMPORTED_MODULE_4__) if([\"default\",\"analyzeDocument\",\"applyRedactions\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _formats__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _history__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./history */ \"../core-detect/dist/history.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _history__WEBPACK_IMPORTED_MODULE_5__) if([\"default\",\"analyzeDocument\",\"applyRedactions\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _history__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__, _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__]);\n([_pipeline_analyze__WEBPACK_IMPORTED_MODULE_1__, _pipeline_apply__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS1kZXRlY3QvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QjtBQUM2QjtBQUNGO0FBQ3pCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BjbGVhbnNoYXJlL3VpLy4uL2NvcmUtZGV0ZWN0L2Rpc3QvaW5kZXguanM/NWVjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL3R5cGVzJztcbmV4cG9ydCB7IGFuYWx5emVEb2N1bWVudCB9IGZyb20gJy4vcGlwZWxpbmUvYW5hbHl6ZSc7XG5leHBvcnQgeyBhcHBseVJlZGFjdGlvbnMgfSBmcm9tICcuL3BpcGVsaW5lL2FwcGx5JztcbmV4cG9ydCAqIGZyb20gJy4vcHJlc2V0cyc7XG5leHBvcnQgKiBmcm9tICcuL2Zvcm1hdHMnO1xuZXhwb3J0ICogZnJvbSAnLi9oaXN0b3J5JztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../core-detect/dist/index.js\n");

/***/ }),

/***/ "../core-detect/dist/pipeline/analyze.js":
/*!***********************************************!*\
  !*** ../core-detect/dist/pipeline/analyze.js ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* binding */ analyzeDocument)\n/* harmony export */ });\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../detectors */ \"../core-detect/dist/detectors/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tesseract.js */ \"../../node_modules/.pnpm/tesseract.js@4.1.4/node_modules/tesseract.js/src/index.js\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tesseract_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdfjs-dist */ \"pdfjs-dist\");\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var jsqr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jsqr */ \"jsqr\");\n/* harmony import */ var jsqr__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jsqr__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../presets */ \"../core-detect/dist/presets.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([uuid__WEBPACK_IMPORTED_MODULE_0__]);\nuuid__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Barcode detection library.  jsQR is a small library that can scan QR codes\n// and linear barcodes from image pixel data.  It returns the location of the\n// detected code if one is found.  See https://github.com/cozmo/jsQR for details.\n\n// Import preset utilities to allow filtering detections based on enabled kinds\n\n/*\n * The analyse pipeline orchestrates OCR and token detection for both images\n * and PDFs.  It uses native OCR when available (via Capacitor plugins) and\n * falls back to Tesseract.js running in the browser or a web worker.  PDF\n * pages are rendered to canvases via pdfjs-dist, then treated like images.\n */\n/** Convert a File/Blob to a Data URI. */\nasync function fileToDataURL(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(file);\n    });\n}\n/** Perform OCR on a data URL and return detections. */\nasync function analyzeImageDataURL(dataURL, pageIndex = 0, opts = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    // Optionally perform a simple document auto‑crop before running OCR.  Many\n    // scanned documents contain large white margins.  Cropping to the\n    // bounding rectangle of non‑white pixels improves OCR accuracy and\n    // reduces processing time.  We detect the smallest rectangle that\n    // contains all pixels whose brightness is below a threshold.  If the\n    // resulting crop covers almost the entire image (>95%), we skip the\n    // crop to avoid losing content.  This heuristic is cheap to compute\n    // and does not require external dependencies.  See docs/ROADMAP.md.\n    async function autoCrop(dataUrl) {\n        return new Promise(resolve => {\n            const img = new Image();\n            img.onload = () => {\n                const canvas = document.createElement('canvas');\n                canvas.width = img.width;\n                canvas.height = img.height;\n                const ctx = canvas.getContext('2d');\n                if (!ctx) {\n                    resolve(dataUrl);\n                    return;\n                }\n                ctx.drawImage(img, 0, 0);\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                const data = imageData.data;\n                let minX = canvas.width;\n                let maxX = 0;\n                let minY = canvas.height;\n                let maxY = 0;\n                // Threshold to consider a pixel as background (very light)\n                const isBg = (r, g, b) => r > 230 && g > 230 && b > 230;\n                for (let y = 0; y < canvas.height; y++) {\n                    for (let x = 0; x < canvas.width; x++) {\n                        const idx = (y * canvas.width + x) * 4;\n                        const r = data[idx];\n                        const g = data[idx + 1];\n                        const b = data[idx + 2];\n                        if (!isBg(r, g, b)) {\n                            if (x < minX)\n                                minX = x;\n                            if (x > maxX)\n                                maxX = x;\n                            if (y < minY)\n                                minY = y;\n                            if (y > maxY)\n                                maxY = y;\n                        }\n                    }\n                }\n                // If no foreground found, return original\n                if (minX > maxX || minY > maxY) {\n                    resolve(dataUrl);\n                    return;\n                }\n                // Compute bounds width/height\n                const bw = maxX - minX;\n                const bh = maxY - minY;\n                // If crop covers almost entire image, skip cropping\n                if (bw / canvas.width > 0.95 && bh / canvas.height > 0.95) {\n                    resolve(dataUrl);\n                    return;\n                }\n                // Expand crop by 5% margins to avoid cutting content\n                const marginX = Math.floor(bw * 0.05);\n                const marginY = Math.floor(bh * 0.05);\n                const cropX = Math.max(0, minX - marginX);\n                const cropY = Math.max(0, minY - marginY);\n                const cropW = Math.min(canvas.width - cropX, bw + marginX * 2);\n                const cropH = Math.min(canvas.height - cropY, bh + marginY * 2);\n                const croppedCanvas = document.createElement('canvas');\n                croppedCanvas.width = cropW;\n                croppedCanvas.height = cropH;\n                const cctx = croppedCanvas.getContext('2d');\n                if (!cctx) {\n                    resolve(dataUrl);\n                    return;\n                }\n                cctx.drawImage(canvas, cropX, cropY, cropW, cropH, 0, 0, cropW, cropH);\n                resolve(croppedCanvas.toDataURL());\n            };\n            img.onerror = () => resolve(dataUrl);\n            img.src = dataUrl;\n        });\n    }\n    // Run Tesseract on the original Data URL.  Cropping is disabled by\n    // default because adjusting bounding boxes back to the original\n    // coordinates is non‑trivial.  To experiment with auto‑crop, call\n    // autoCrop() on dataURL and adjust bounding boxes accordingly.\n    const result = await tesseract_js__WEBPACK_IMPORTED_MODULE_1___default().recognize(dataURL, 'eng', { logger: () => { } });\n    const { words } = result.data;\n    const detections = [];\n    // Determine image dimensions\n    const img = new Image();\n    await new Promise(resolve => {\n        img.onload = resolve;\n        img.src = dataURL;\n    });\n    const width = img.width;\n    const height = img.height;\n    for (const word of words) {\n        const text = (word.text || '').trim();\n        if (!text)\n            continue;\n        const match = (0,_detectors__WEBPACK_IMPORTED_MODULE_4__.detectTokenWithCustomPatterns)(text, opts.customPatterns);\n        if (match) {\n            const { kind, reason, confidence: detectionConfidence } = match;\n            const bbox = word.bbox;\n            const x0 = (_b = (_a = bbox.x0) !== null && _a !== void 0 ? _a : bbox.left) !== null && _b !== void 0 ? _b : 0;\n            const y0 = (_d = (_c = bbox.y0) !== null && _c !== void 0 ? _c : bbox.top) !== null && _d !== void 0 ? _d : 0;\n            const x1 = (_f = (_e = bbox.x1) !== null && _e !== void 0 ? _e : bbox.right) !== null && _f !== void 0 ? _f : 0;\n            const y1 = (_h = (_g = bbox.y1) !== null && _g !== void 0 ? _g : bbox.bottom) !== null && _h !== void 0 ? _h : 0;\n            const box = {\n                x: x0 / width,\n                y: y0 / height,\n                w: (x1 - x0) / width,\n                h: (y1 - y0) / height,\n                page: pageIndex\n            };\n            // Use enhanced confidence scoring - prefer detection confidence if provided\n            const ocrConfidence = (_j = word.confidence) !== null && _j !== void 0 ? _j : 0.9;\n            const finalConfidence = detectionConfidence !== null && detectionConfidence !== void 0 ? detectionConfidence : (0,_detectors__WEBPACK_IMPORTED_MODULE_4__.calculateConfidence)(kind, text, ocrConfidence);\n            // Apply confidence threshold filter\n            if (opts.confidenceThreshold && finalConfidence < opts.confidenceThreshold) {\n                continue;\n            }\n            detections.push({\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)(),\n                kind: kind,\n                box,\n                confidence: finalConfidence,\n                reason,\n                preview: text\n            });\n        }\n    }\n    // Barcode detection using jsQR.  Draw the image onto a temporary canvas\n    // and scan its pixels.  jsQR returns null if no code is found.\n    try {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.drawImage(img, 0, 0, width, height);\n            const imageData = ctx.getImageData(0, 0, width, height);\n            const code = jsqr__WEBPACK_IMPORTED_MODULE_3___default()(imageData.data, imageData.width, imageData.height);\n            if (code && code.location) {\n                // Compute bounding box from corner points\n                const { topLeftCorner, topRightCorner, bottomRightCorner, bottomLeftCorner } = code.location;\n                const xs = [topLeftCorner.x, topRightCorner.x, bottomRightCorner.x, bottomLeftCorner.x];\n                const ys = [topLeftCorner.y, topRightCorner.y, bottomRightCorner.y, bottomLeftCorner.y];\n                const minX = Math.min(...xs);\n                const maxX = Math.max(...xs);\n                const minY = Math.min(...ys);\n                const maxY = Math.max(...ys);\n                const bbox = {\n                    x: minX / width,\n                    y: minY / height,\n                    w: (maxX - minX) / width,\n                    h: (maxY - minY) / height,\n                    page: pageIndex\n                };\n                detections.push({\n                    id: (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)(),\n                    kind: 'BARCODE',\n                    box: bbox,\n                    confidence: 1,\n                    reason: 'Detected barcode/QR code',\n                    preview: (_k = code.data) === null || _k === void 0 ? void 0 : _k.slice(0, 64) // show truncated payload\n                });\n            }\n        }\n    }\n    catch (err) {\n        // eslint-disable-next-line no-console\n        console.warn('Barcode detection failed:', err);\n    }\n    return detections;\n}\n/** Analyse a single file (image or PDF) and return detections across all pages. */\n// Import preset utilities at the top level\nasync function analyzeDocument(file, opts = {}) {\n    // Determine the MIME type from the file object if possible\n    const type = file.type || '';\n    const detections = [];\n    let pages = 1;\n    if (type === 'application/pdf') {\n        // Read the PDF into an ArrayBuffer\n        const buffer = await file.arrayBuffer();\n        // Configure worker for pdfjs if running in a browser\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.GlobalWorkerOptions && pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.workerSrc === undefined) {\n            // Provide a default worker if none was set.  This requires that\n            // `pdfjs-dist/build/pdf.worker.js` is available in the bundle.\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const workerSrc = __webpack_require__(/*! pdfjs-dist/build/pdf.worker.js */ \"pdfjs-dist/build/pdf.worker.js\");\n                pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.GlobalWorkerOptions.workerSrc = workerSrc;\n            }\n            catch (e) {\n                // ignore if require fails – pdfjs will attempt to fallback\n            }\n        }\n        const loadingTask = pdfjs_dist__WEBPACK_IMPORTED_MODULE_2__.getDocument({ data: buffer });\n        const pdf = await loadingTask.promise;\n        pages = pdf.numPages;\n        for (let i = 1; i <= pages; i++) {\n            const page = await pdf.getPage(i);\n            const viewport = page.getViewport({ scale: 1.0 });\n            const canvas = document.createElement('canvas');\n            canvas.width = viewport.width;\n            canvas.height = viewport.height;\n            const context = canvas.getContext('2d');\n            if (!context)\n                continue;\n            const renderContext = { canvasContext: context, viewport };\n            await page.render(renderContext).promise;\n            const dataURL = canvas.toDataURL();\n            const pageDetections = await analyzeImageDataURL(dataURL, i - 1, opts);\n            detections.push(...pageDetections);\n        }\n    }\n    else {\n        // Assume image\n        const dataURL = await fileToDataURL(file);\n        const imgDetections = await analyzeImageDataURL(dataURL, 0, opts);\n        detections.push(...imgDetections);\n    }\n    // Filter detections by preset if provided\n    if (opts.presetId) {\n        const preset = (0,_presets__WEBPACK_IMPORTED_MODULE_5__.getPreset)(opts.presetId);\n        if (preset && preset.enabledKinds && preset.enabledKinds.length > 0) {\n            // Remove detections whose kind is not enabled\n            for (let i = detections.length - 1; i >= 0; i--) {\n                if (!preset.enabledKinds.includes(detections[i].kind)) {\n                    detections.splice(i, 1);\n                }\n            }\n        }\n    }\n    return { detections, pages };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/pipeline/analyze.js\n");

/***/ }),

/***/ "../core-detect/dist/pipeline/apply.js":
/*!*********************************************!*\
  !*** ../core-detect/dist/pipeline/apply.js ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDocument: () => (/* binding */ analyzeDocument),\n/* harmony export */   applyRedactions: () => (/* binding */ applyRedactions)\n/* harmony export */ });\n/* harmony import */ var _analyze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analyze */ \"../core-detect/dist/pipeline/analyze.js\");\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdf-lib */ \"../../node_modules/.pnpm/pdf-lib@1.17.1/node_modules/pdf-lib/cjs/index.js\");\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pdf_lib__WEBPACK_IMPORTED_MODULE_0__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_analyze__WEBPACK_IMPORTED_MODULE_1__]);\n_analyze__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// A module‑scoped variable to store the last analysis result.  applyRedactions()\n// uses this map to resolve detection IDs to bounding boxes.  In a real\n// application you should pass the detections directly to avoid shared\n// mutable state.  This simplified implementation is sufficient for the\n// demonstration.\nlet lastResult = null;\n/** Override the exported analyse function to capture the last result. */\nasync function analyzeDocument(file, opts = {}) {\n    const result = await (0,_analyze__WEBPACK_IMPORTED_MODULE_1__.analyzeDocument)(file, opts);\n    lastResult = result;\n    return result;\n}\n/** Internal helper: convert a canvas to a data URI. */\nfunction canvasToDataURL(canvas, mimeType = 'image/png', quality = 0.92) {\n    return canvas.toDataURL(mimeType, quality);\n}\n/** Internal helper: convert a File/Blob into a HTMLImageElement. */\nasync function fileToImage(file) {\n    const dataURL = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(file);\n    });\n    const img = new Image();\n    await new Promise(resolve => {\n        img.onload = () => resolve();\n        img.src = dataURL;\n    });\n    return img;\n}\n/** Apply redactions to an image.  Returns a Data URI. */\nasync function applyRedactionsToImage(file, actions, quality = 0.92, detectionResult) {\n    const img = await fileToImage(file);\n    const canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        throw new Error('Cannot obtain 2D context');\n    // Draw original image\n    ctx.drawImage(img, 0, 0);\n    // Build detection map\n    const map = new Map();\n    const detectionsToUse = detectionResult || lastResult;\n    if (detectionsToUse) {\n        for (const det of detectionsToUse.detections) {\n            map.set(det.id, det);\n        }\n    }\n    // Utility helpers for drawing various redaction styles on images\n    function drawBox(x, y, w, h, config = {}) {\n        var _a;\n        const color = config.color || 'black';\n        const opacity = (_a = config.opacity) !== null && _a !== void 0 ? _a : 1.0;\n        const cornerRadius = config.cornerRadius || 0;\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        ctx.fillStyle = color;\n        if (cornerRadius > 0) {\n            // Draw rounded rectangle\n            ctx.beginPath();\n            ctx.roundRect(x, y, w, h, cornerRadius);\n            ctx.fill();\n        }\n        else {\n            ctx.fillRect(x, y, w, h);\n        }\n        // Add border if specified\n        if (config.borderWidth && config.borderColor) {\n            ctx.lineWidth = config.borderWidth;\n            ctx.strokeStyle = config.borderColor;\n            if (cornerRadius > 0) {\n                ctx.beginPath();\n                ctx.roundRect(x, y, w, h, cornerRadius);\n                ctx.stroke();\n            }\n            else {\n                ctx.strokeRect(x, y, w, h);\n            }\n        }\n        ctx.restore();\n    }\n    // Enhanced solid color redaction with configuration support\n    function drawSolidColor(x, y, w, h, config = {}) {\n        drawBox(x, y, w, h, config);\n    }\n    // Gradient redaction\n    function drawGradient(x, y, w, h, config = {}) {\n        var _a;\n        const color1 = config.color || 'black';\n        const color2 = config.secondaryColor || 'gray';\n        const opacity = (_a = config.opacity) !== null && _a !== void 0 ? _a : 1.0;\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        const gradient = ctx.createLinearGradient(x, y, x + w, y + h);\n        gradient.addColorStop(0, color1);\n        gradient.addColorStop(1, color2);\n        ctx.fillStyle = gradient;\n        if (config.cornerRadius && config.cornerRadius > 0) {\n            ctx.beginPath();\n            ctx.roundRect(x, y, w, h, config.cornerRadius);\n            ctx.fill();\n        }\n        else {\n            ctx.fillRect(x, y, w, h);\n        }\n        ctx.restore();\n    }\n    // Pattern redaction\n    function drawPattern(x, y, w, h, config = {}) {\n        var _a;\n        const color = config.color || 'black';\n        const opacity = (_a = config.opacity) !== null && _a !== void 0 ? _a : 1.0;\n        const patternType = config.patternType || 'diagonal';\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        // Fill background first\n        ctx.fillStyle = config.secondaryColor || '#f0f0f0';\n        ctx.fillRect(x, y, w, h);\n        // Draw pattern\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 2;\n        switch (patternType) {\n            case 'diagonal':\n                for (let i = -h; i < w + h; i += 8) {\n                    ctx.beginPath();\n                    ctx.moveTo(x + i, y);\n                    ctx.lineTo(x + i + h, y + h);\n                    ctx.stroke();\n                }\n                break;\n            case 'dots':\n                const dotSize = 3;\n                const spacing = 8;\n                ctx.fillStyle = color;\n                for (let dx = 0; dx < w; dx += spacing) {\n                    for (let dy = 0; dy < h; dy += spacing) {\n                        ctx.beginPath();\n                        ctx.arc(x + dx + spacing / 2, y + dy + spacing / 2, dotSize / 2, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                }\n                break;\n            case 'cross-hatch':\n                // Diagonal lines one way\n                for (let i = -h; i < w + h; i += 6) {\n                    ctx.beginPath();\n                    ctx.moveTo(x + i, y);\n                    ctx.lineTo(x + i + h, y + h);\n                    ctx.stroke();\n                }\n                // Diagonal lines the other way\n                for (let i = 0; i < w + h; i += 6) {\n                    ctx.beginPath();\n                    ctx.moveTo(x + i, y + h);\n                    ctx.lineTo(x + i - h, y);\n                    ctx.stroke();\n                }\n                break;\n            case 'waves':\n                ctx.beginPath();\n                for (let i = 0; i < w; i += 2) {\n                    const wave = Math.sin((i / w) * Math.PI * 4) * (h * 0.2);\n                    if (i === 0) {\n                        ctx.moveTo(x + i, y + h / 2 + wave);\n                    }\n                    else {\n                        ctx.lineTo(x + i, y + h / 2 + wave);\n                    }\n                }\n                ctx.stroke();\n                break;\n            case 'noise':\n                ctx.fillStyle = color;\n                for (let i = 0; i < w * h / 20; i++) {\n                    const nx = x + Math.random() * w;\n                    const ny = y + Math.random() * h;\n                    ctx.beginPath();\n                    ctx.arc(nx, ny, 1, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n                break;\n        }\n        ctx.restore();\n    }\n    // Apply a CSS blur filter to a region by drawing the original image with\n    // the filter enabled only for that region.  Canvas 2D `filter` is\n    // supported in modern browsers.  We temporarily clip the context to\n    // restrict the blur effect to the redaction box.\n    function drawBlur(x, y, w, h) {\n        ctx.save();\n        ctx.filter = 'blur(8px)';\n        ctx.beginPath();\n        ctx.rect(x, y, w, h);\n        ctx.clip();\n        ctx.drawImage(img, 0, 0);\n        ctx.restore();\n    }\n    // Pixelate by drawing the region scaled down and back up.  Choose a\n    // pixel size relative to region size to maintain some obfuscation but\n    // not degrade performance too much.\n    function drawPixelate(x, y, w, h) {\n        const pixelSize = Math.max(4, Math.floor(Math.min(w, h) / 10));\n        // Create a temporary canvas to hold the region scaled down\n        const tempCanvas = document.createElement('canvas');\n        tempCanvas.width = Math.max(1, Math.floor(w / pixelSize));\n        tempCanvas.height = Math.max(1, Math.floor(h / pixelSize));\n        const tctx = tempCanvas.getContext('2d');\n        if (!tctx) {\n            drawBox(x, y, w, h);\n            return;\n        }\n        // Draw the region scaled down onto the temp canvas\n        tctx.drawImage(img, x, y, w, h, 0, 0, tempCanvas.width, tempCanvas.height);\n        // Now draw the scaled up version onto the main canvas to pixelate\n        ctx.imageSmoothingEnabled = false;\n        ctx.drawImage(tempCanvas, 0, 0, tempCanvas.width, tempCanvas.height, x, y, w, h);\n        ctx.imageSmoothingEnabled = true;\n    }\n    // Enhanced label drawing with configuration support\n    function drawLabel(x, y, w, h, text, config = {}) {\n        var _a;\n        ctx.save();\n        const bgColor = config.color || 'black';\n        const textColor = config.secondaryColor || 'white';\n        const opacity = (_a = config.opacity) !== null && _a !== void 0 ? _a : 1.0;\n        const fontSize = config.fontSize || Math.max(10, Math.floor(h * 0.6));\n        const fontFamily = config.fontFamily || 'sans-serif';\n        const cornerRadius = config.cornerRadius || 0;\n        ctx.globalAlpha = opacity;\n        // Draw background with optional rounded corners\n        ctx.fillStyle = bgColor;\n        if (cornerRadius > 0) {\n            ctx.beginPath();\n            ctx.roundRect(x, y, w, h, cornerRadius);\n            ctx.fill();\n        }\n        else {\n            ctx.fillRect(x, y, w, h);\n        }\n        // Add shadow if specified\n        if (config.shadow) {\n            ctx.shadowOffsetX = config.shadow.offsetX;\n            ctx.shadowOffsetY = config.shadow.offsetY;\n            ctx.shadowBlur = config.shadow.blur;\n            ctx.shadowColor = config.shadow.color;\n        }\n        // Draw text\n        ctx.fillStyle = textColor;\n        ctx.font = `${fontSize}px ${fontFamily}`;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        // Truncate text if it won't fit\n        let label = text;\n        const maxWidth = w - 8; // More padding for better appearance\n        while (ctx.measureText(label).width > maxWidth && label.length > 1) {\n            label = label.slice(0, -1);\n        }\n        if (label !== text && label.length > 0) {\n            label = label.slice(0, -1) + '…';\n        }\n        ctx.fillText(label, x + w / 2, y + h / 2);\n        ctx.restore();\n    }\n    // Draw a mask that obscures all but the last four characters of the\n    // provided preview text.  The mask uses asterisks for the hidden\n    // portion.  Non‑digit characters are preserved in their positions.\n    function drawMaskLast4(x, y, w, h, preview) {\n        const text = preview || '';\n        // Keep only last 4 alphanumeric characters; replace preceding\n        // characters (letters or digits) with asterisks but preserve spaces and other symbols.\n        let masked = '';\n        let remaining = 4;\n        for (let i = text.length - 1; i >= 0; i--) {\n            const ch = text[i];\n            if (/\\w/.test(ch) && remaining > 0) {\n                masked = ch + masked;\n                remaining--;\n            }\n            else if (/\\w/.test(ch)) {\n                masked = '*' + masked;\n            }\n            else {\n                masked = ch + masked;\n            }\n        }\n        drawLabel(x, y, w, h, masked);\n    }\n    // Draw redactions using the selected style for each action.  If the\n    // style is not recognised, fallback to a solid box.\n    actions.forEach(action => {\n        const det = map.get(action.detectionId);\n        if (!det)\n            return;\n        const { box } = det;\n        const x = box.x * canvas.width;\n        const y = box.y * canvas.height;\n        const w = box.w * canvas.width;\n        const h = box.h * canvas.height;\n        const config = action.config || {};\n        switch (action.style) {\n            case 'BLUR':\n                drawBlur(x, y, w, h);\n                break;\n            case 'PIXELATE':\n                drawPixelate(x, y, w, h);\n                break;\n            case 'LABEL':\n                const labelText = config.labelText || action.labelText || det.kind;\n                drawLabel(x, y, w, h, labelText, config);\n                break;\n            case 'MASK_LAST4':\n                drawMaskLast4(x, y, w, h, det.preview);\n                break;\n            case 'PATTERN':\n                drawPattern(x, y, w, h, config);\n                break;\n            case 'GRADIENT':\n                drawGradient(x, y, w, h, config);\n                break;\n            case 'SOLID_COLOR':\n                drawSolidColor(x, y, w, h, config);\n                break;\n            case 'VECTOR_OVERLAY':\n                // Vector overlay for images - for now, fall back to enhanced box\n                drawBox(x, y, w, h, config);\n                break;\n            case 'REMOVE_METADATA':\n                // Metadata removal is handled by re‑encoding the image; no\n                // drawing needed for this redaction.\n                break;\n            case 'BOX':\n            default:\n                drawBox(x, y, w, h, config);\n        }\n    });\n    // Apply image sanitization options\n    let outputFormat = 'image/jpeg';\n    let outputQuality = quality;\n    // Always re-encode to strip EXIF/metadata by default\n    // The canvas.toDataURL() method automatically strips metadata\n    return canvas.toDataURL(outputFormat, outputQuality);\n}\n/** Enhanced vector-based PDF redaction with advanced styling support */\nasync function applyRedactionsToPdf(file, actions, detectionResult, options = {}) {\n    var _a, _b;\n    const origBytes = await file.arrayBuffer();\n    const origPdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(origBytes);\n    const newPdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.create();\n    const detectionMap = new Map();\n    const detectionsToUse = detectionResult || lastResult;\n    if (detectionsToUse) {\n        for (const det of detectionsToUse.detections) {\n            detectionMap.set(det.id, det);\n        }\n    }\n    // Helper function to parse hex color to RGB values for pdf-lib\n    function parseColorToRGB(hexColor) {\n        const hex = hexColor.replace('#', '');\n        const r = parseInt(hex.substring(0, 2), 16) / 255;\n        const g = parseInt(hex.substring(2, 4), 16) / 255;\n        const b = parseInt(hex.substring(4, 6), 16) / 255;\n        return [r, g, b];\n    }\n    // Apply document sanitization if requested\n    if (options.sanitization) {\n        if (options.sanitization.removeMetadata) {\n            // Remove PDF metadata\n            newPdf.setTitle('');\n            newPdf.setAuthor('');\n            newPdf.setSubject('');\n            newPdf.setKeywords([]);\n            newPdf.setProducer('');\n            newPdf.setCreator('');\n            try {\n                newPdf.setCreationDate(new Date(0));\n                newPdf.setModificationDate(new Date(0));\n            }\n            catch (e) {\n                // Some PDF operations might fail, continue with redaction\n                console.warn('Could not set PDF dates:', e);\n            }\n        }\n    }\n    const total = origPdf.getPageCount();\n    for (let i = 0; i < total; i++) {\n        const [copiedPage] = await newPdf.copyPages(origPdf, [i]);\n        const page = newPdf.addPage(copiedPage);\n        const { width, height } = page.getSize();\n        // Remove annotations if requested\n        if ((_a = options.sanitization) === null || _a === void 0 ? void 0 : _a.removeAnnotations) {\n            // Note: pdf-lib doesn't have direct annotation removal API\n            // This would need custom implementation or different library\n        }\n        // Filter actions for this page\n        const pageActions = actions.filter(act => {\n            var _a;\n            const det = detectionMap.get(act.detectionId);\n            return det && ((_a = det.box.page) !== null && _a !== void 0 ? _a : 0) === i;\n        });\n        // Apply vector-based redactions\n        for (const action of pageActions) {\n            const det = detectionMap.get(action.detectionId);\n            if (!det)\n                continue;\n            const { box } = det;\n            const config = action.config || {};\n            const x = box.x * width;\n            // Convert from top-left origin to PDF bottom-left origin\n            const y = (1 - box.y - box.h) * height;\n            const w = box.w * width;\n            const h = box.h * height;\n            // Parse colors\n            const primaryRGB = config.color ? parseColorToRGB(config.color) : [0, 0, 0];\n            const secondaryRGB = config.secondaryColor ? parseColorToRGB(config.secondaryColor) : [1, 1, 1];\n            const opacity = (_b = config.opacity) !== null && _b !== void 0 ? _b : 1.0;\n            switch (action.style) {\n                case 'BOX':\n                case 'SOLID_COLOR':\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity,\n                        borderColor: config.borderColor ? (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(...parseColorToRGB(config.borderColor)) : undefined,\n                        borderWidth: config.borderWidth || 0\n                    });\n                    break;\n                case 'GRADIENT':\n                    // PDF gradients are complex - use solid color for now\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity\n                    });\n                    break;\n                case 'PATTERN':\n                    // Draw background\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(secondaryRGB[0], secondaryRGB[1], secondaryRGB[2]),\n                        opacity\n                    });\n                    // Add pattern overlay\n                    const patternType = config.patternType || 'diagonal';\n                    const lineColor = (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]);\n                    if (patternType === 'diagonal') {\n                        for (let offset = -h; offset < w + h; offset += 8) {\n                            page.drawLine({\n                                start: { x: x + offset, y: y },\n                                end: { x: x + offset + h, y: y + h },\n                                color: lineColor,\n                                thickness: 2,\n                                opacity\n                            });\n                        }\n                    }\n                    break;\n                case 'VECTOR_OVERLAY':\n                    // Enhanced vector redaction with proper PDF vector operations\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity,\n                        borderColor: config.borderColor ? (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(...parseColorToRGB(config.borderColor)) : undefined,\n                        borderWidth: config.borderWidth || 0\n                    });\n                    break;\n                case 'LABEL':\n                    // Draw background\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity\n                    });\n                    // Draw text\n                    const labelText = config.labelText || action.labelText || det.kind;\n                    const fontSize = config.fontSize || Math.max(8, h * 0.6);\n                    const maxChars = Math.floor((w - 8) / (fontSize * 0.6));\n                    let label = labelText;\n                    if (label.length > maxChars) {\n                        label = label.slice(0, maxChars > 3 ? maxChars - 1 : 0) + '…';\n                    }\n                    const estTextWidth = label.length * fontSize * 0.6;\n                    const xOffset = (w - estTextWidth) / 2;\n                    page.drawText(label, {\n                        x: x + Math.max(0, xOffset),\n                        y: y + h / 2 - fontSize / 2,\n                        size: fontSize,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(secondaryRGB[0], secondaryRGB[1], secondaryRGB[2]),\n                        opacity\n                    });\n                    break;\n                case 'MASK_LAST4':\n                    // Draw background\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity\n                    });\n                    // Create masked text\n                    const preview = det.preview || '';\n                    let masked = '';\n                    let remaining = 4;\n                    for (let i = preview.length - 1; i >= 0; i--) {\n                        const ch = preview[i];\n                        if (/\\w/.test(ch) && remaining > 0) {\n                            masked = ch + masked;\n                            remaining--;\n                        }\n                        else if (/\\w/.test(ch)) {\n                            masked = '*' + masked;\n                        }\n                        else {\n                            masked = ch + masked;\n                        }\n                    }\n                    const maskFontSize = Math.max(8, h * 0.6);\n                    const maskTextWidth = masked.length * maskFontSize * 0.6;\n                    const maskXOffset = (w - maskTextWidth) / 2;\n                    page.drawText(masked, {\n                        x: x + Math.max(0, maskXOffset),\n                        y: y + h / 2 - maskFontSize / 2,\n                        size: maskFontSize,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(secondaryRGB[0], secondaryRGB[1], secondaryRGB[2]),\n                        opacity\n                    });\n                    break;\n                default:\n                    // Default to solid rectangle\n                    page.drawRectangle({\n                        x, y, width: w, height: h,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(primaryRGB[0], primaryRGB[1], primaryRGB[2]),\n                        opacity: opacity\n                    });\n            }\n        }\n    }\n    const pdfBytes = await newPdf.save();\n    const base64 = typeof Buffer !== 'undefined' ? Buffer.from(pdfBytes).toString('base64') : btoa(String.fromCharCode(...new Uint8Array(pdfBytes)));\n    return `data:application/pdf;base64,${base64}`;\n}\n/**\n * Apply redactions to a file using the previously analysed detections.\n *\n * Note: This implementation relies on `lastResult` set by analyzeDocument().\n * In a real application you should pass the detections explicitly to avoid\n * hidden state.\n */\nasync function applyRedactions(file, actions, opts, detections) {\n    var _a;\n    // If detections are provided directly, create a temporary result object\n    let result = lastResult;\n    if (detections && detections.length > 0) {\n        result = {\n            detections: detections,\n            pages: Math.max(...detections.map(d => { var _a; return (_a = d.box.page) !== null && _a !== void 0 ? _a : 0; })) + 1 || 1\n        };\n    }\n    if (!result) {\n        throw new Error('No analysis result available.  Call analyzeDocument() first.');\n    }\n    const mime = file.type || '';\n    let fileUri;\n    if (mime === 'application/pdf' || opts.output === 'pdf') {\n        fileUri = await applyRedactionsToPdf(file, actions, result, opts);\n    }\n    else {\n        const quality = (_a = opts.quality) !== null && _a !== void 0 ? _a : 0.92;\n        fileUri = await applyRedactionsToImage(file, actions, quality, result);\n    }\n    // Build a simple report summarising redactions\n    const report = {};\n    if (result) {\n        report.totalDetections = result.detections.length;\n        report.redactedCount = actions.length;\n        const counts = {};\n        for (const action of actions) {\n            const det = result.detections.find(d => d.id === action.detectionId);\n            if (det) {\n                counts[det.kind] = (counts[det.kind] || 0) + 1;\n            }\n        }\n        report.byKind = counts;\n    }\n    return { fileUri, report };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/pipeline/apply.js\n");

/***/ }),

/***/ "../core-detect/dist/presets.js":
/*!**************************************!*\
  !*** ../core-detect/dist/presets.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PRESETS: () => (/* binding */ PRESETS),\n/* harmony export */   createPreset: () => (/* binding */ createPreset),\n/* harmony export */   deletePreset: () => (/* binding */ deletePreset),\n/* harmony export */   duplicatePreset: () => (/* binding */ duplicatePreset),\n/* harmony export */   exportAllUserPresets: () => (/* binding */ exportAllUserPresets),\n/* harmony export */   exportPreset: () => (/* binding */ exportPreset),\n/* harmony export */   getPreset: () => (/* binding */ getPreset),\n/* harmony export */   importMultiplePresets: () => (/* binding */ importMultiplePresets),\n/* harmony export */   importPreset: () => (/* binding */ importPreset),\n/* harmony export */   listBuiltinPresets: () => (/* binding */ listBuiltinPresets),\n/* harmony export */   listPresets: () => (/* binding */ listPresets),\n/* harmony export */   listPresetsByDomain: () => (/* binding */ listPresetsByDomain),\n/* harmony export */   listUserPresets: () => (/* binding */ listUserPresets),\n/* harmony export */   resetUserPresets: () => (/* binding */ resetUserPresets),\n/* harmony export */   savePreset: () => (/* binding */ savePreset),\n/* harmony export */   validatePreset: () => (/* binding */ validatePreset)\n/* harmony export */ });\n// Predefined presets.  These can be customised by the user at runtime via the UI.\nconst PRESETS = [\n    {\n        id: 'developer',\n        name: 'Developer Secrets',\n        description: 'Detects technical secrets like API keys, tokens, and database credentials',\n        domain: 'Technology',\n        enabledKinds: ['EMAIL', 'PHONE', 'PAN', 'JWT', 'API_KEY', 'IBAN', 'SSN', 'PASSPORT'],\n        styleMap: {\n            'JWT': 'BOX',\n            'API_KEY': 'BOX',\n            'EMAIL': 'BLUR',\n            'PHONE': 'PIXELATE'\n        },\n        defaultRedactionConfig: {\n            color: '#ff0000',\n            opacity: 0.8\n        },\n        confidenceThreshold: 0.7,\n        customRegex: [],\n        version: '1.0.0'\n    },\n    {\n        id: 'work',\n        name: 'Work Screenshot',\n        description: 'Professional document sanitization for workplace sharing',\n        domain: 'General',\n        enabledKinds: ['EMAIL', 'PHONE', 'PAN', 'JWT', 'API_KEY', 'NAME', 'ADDRESS', 'PASSPORT'],\n        styleMap: {\n            'NAME': 'LABEL',\n            'EMAIL': 'BLUR',\n            'PHONE': 'MASK_LAST4',\n            'ADDRESS': 'BOX'\n        },\n        defaultRedactionConfig: {\n            color: '#000000',\n            opacity: 1.0,\n            labelText: '[REDACTED]'\n        },\n        confidenceThreshold: 0.6,\n        customRegex: [],\n        version: '1.0.0'\n    },\n    {\n        id: 'all',\n        name: 'All Detectors',\n        description: 'Maximum security - detects all types of sensitive information',\n        domain: 'General',\n        enabledKinds: ['FACE', 'EMAIL', 'PHONE', 'PAN', 'IBAN', 'SSN', 'PASSPORT', 'JWT', 'API_KEY', 'BARCODE', 'NAME', 'ADDRESS', 'OTHER'],\n        styleMap: {},\n        defaultRedactionConfig: {\n            color: '#000000',\n            opacity: 0.9\n        },\n        confidenceThreshold: 0.5,\n        customRegex: [],\n        version: '1.0.0'\n    },\n    // Domain-specific preset templates\n    {\n        id: 'healthcare',\n        name: 'Healthcare (HIPAA)',\n        description: 'HIPAA-compliant sanitization for medical documents and communications',\n        domain: 'Healthcare',\n        enabledKinds: ['NAME', 'SSN', 'PHONE', 'EMAIL', 'ADDRESS', 'OTHER'],\n        styleMap: {\n            'SSN': 'BOX',\n            'NAME': 'LABEL',\n            'PHONE': 'MASK_LAST4',\n            'EMAIL': 'BLUR',\n            'ADDRESS': 'BOX'\n        },\n        customPatterns: [\n            {\n                id: 'mrn',\n                name: 'Medical Record Number',\n                pattern: '\\\\b(MRN|Medical Record|Patient ID)\\\\s*:?\\\\s*([A-Z0-9]{6,12})\\\\b',\n                kind: 'OTHER',\n                confidence: 0.9,\n                description: 'Medical record numbers and patient identifiers',\n                caseSensitive: false\n            },\n            {\n                id: 'dob',\n                name: 'Date of Birth',\n                pattern: '\\\\b(DOB|Date of Birth|Born)\\\\s*:?\\\\s*(\\\\d{1,2}[/-]\\\\d{1,2}[/-]\\\\d{2,4})\\\\b',\n                kind: 'OTHER',\n                confidence: 0.8,\n                description: 'Date of birth patterns',\n                caseSensitive: false\n            }\n        ],\n        defaultRedactionConfig: {\n            color: '#000000',\n            opacity: 1.0,\n            labelText: '[PHI REDACTED]'\n        },\n        confidenceThreshold: 0.8,\n        version: '1.0.0'\n    },\n    {\n        id: 'finance',\n        name: 'Financial Services',\n        description: 'Financial document sanitization including PCI DSS compliance',\n        domain: 'Finance',\n        enabledKinds: ['PAN', 'IBAN', 'SSN', 'NAME', 'PHONE', 'EMAIL', 'ADDRESS'],\n        styleMap: {\n            'PAN': 'MASK_LAST4',\n            'IBAN': 'MASK_LAST4',\n            'SSN': 'BOX',\n            'NAME': 'LABEL',\n            'PHONE': 'PIXELATE',\n            'EMAIL': 'BLUR'\n        },\n        customPatterns: [\n            {\n                id: 'account_number',\n                name: 'Account Number',\n                pattern: '\\\\b(Account|Acct)\\\\s*#?:?\\\\s*([0-9]{8,16})\\\\b',\n                kind: 'PAN',\n                confidence: 0.85,\n                description: 'Bank account numbers',\n                caseSensitive: false\n            },\n            {\n                id: 'routing_number',\n                name: 'Routing Number',\n                pattern: '\\\\b(Routing|ABA)\\\\s*#?:?\\\\s*([0-9]{9})\\\\b',\n                kind: 'OTHER',\n                confidence: 0.9,\n                description: 'Bank routing numbers',\n                caseSensitive: false\n            }\n        ],\n        defaultRedactionConfig: {\n            color: '#000000',\n            opacity: 0.95,\n            labelText: '[FINANCIAL INFO]'\n        },\n        confidenceThreshold: 0.75,\n        version: '1.0.0'\n    },\n    {\n        id: 'legal',\n        name: 'Legal Documents',\n        description: 'Attorney-client privilege and legal document sanitization',\n        domain: 'Legal',\n        enabledKinds: ['NAME', 'SSN', 'PHONE', 'EMAIL', 'ADDRESS', 'OTHER'],\n        styleMap: {\n            'NAME': 'LABEL',\n            'SSN': 'BOX',\n            'PHONE': 'BLUR',\n            'EMAIL': 'BLUR',\n            'ADDRESS': 'LABEL'\n        },\n        customPatterns: [\n            {\n                id: 'case_number',\n                name: 'Case Number',\n                pattern: '\\\\b(Case|Cause|Docket)\\\\s*(No\\\\.?|Number|#)\\\\s*:?\\\\s*([A-Z0-9-]{6,20})\\\\b',\n                kind: 'OTHER',\n                confidence: 0.9,\n                description: 'Legal case and docket numbers',\n                caseSensitive: false\n            },\n            {\n                id: 'bar_number',\n                name: 'Bar Number',\n                pattern: '\\\\b(Bar|Attorney)\\\\s*(No\\\\.?|Number|#)\\\\s*:?\\\\s*([A-Z0-9]{5,12})\\\\b',\n                kind: 'OTHER',\n                confidence: 0.85,\n                description: 'Attorney bar numbers',\n                caseSensitive: false\n            }\n        ],\n        defaultRedactionConfig: {\n            color: '#000000',\n            opacity: 1.0,\n            labelText: '[CONFIDENTIAL]'\n        },\n        confidenceThreshold: 0.7,\n        version: '1.0.0'\n    }\n];\n// Local storage key for user presets\nconst USER_PRESETS_KEY = 'cleanshare_user_presets';\n// Load user presets from localStorage on startup\nlet userPresets = [];\ntry {\n    if (typeof localStorage !== 'undefined') {\n        const stored = localStorage.getItem(USER_PRESETS_KEY);\n        if (stored) {\n            userPresets = JSON.parse(stored);\n        }\n    }\n}\ncatch (error) {\n    console.warn('Failed to load user presets from localStorage:', error);\n}\n/** Return all registered presets (built-in + user-created). */\nfunction listPresets() {\n    return [...PRESETS, ...userPresets];\n}\n/** Return only built-in presets. */\nfunction listBuiltinPresets() {\n    return PRESETS.slice();\n}\n/** Return only user-created presets. */\nfunction listUserPresets() {\n    return userPresets.slice();\n}\n/** Return presets filtered by domain. */\nfunction listPresetsByDomain(domain) {\n    return listPresets().filter(p => p.domain === domain);\n}\n/** Lookup a preset by its ID. */\nfunction getPreset(id) {\n    return listPresets().find(p => p.id === id);\n}\n/** Generate a unique preset ID */\nfunction generatePresetId() {\n    return `preset_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n/** Save user presets to localStorage */\nfunction saveUserPresetsToStorage() {\n    try {\n        if (typeof localStorage !== 'undefined') {\n            localStorage.setItem(USER_PRESETS_KEY, JSON.stringify(userPresets));\n        }\n    }\n    catch (error) {\n        console.warn('Failed to save user presets to localStorage:', error);\n    }\n}\n/** Save or update a preset.  If the ID exists, it will be replaced; otherwise it is added. */\nfunction savePreset(preset) {\n    // Ensure preset has required metadata\n    const now = new Date().toISOString();\n    const enhancedPreset = {\n        ...preset,\n        id: preset.id || generatePresetId(),\n        isUserCreated: true,\n        updatedAt: now,\n        createdAt: preset.createdAt || now,\n        version: preset.version || '1.0.0'\n    };\n    // Check if it's a built-in preset\n    const builtinIndex = PRESETS.findIndex(p => p.id === enhancedPreset.id);\n    if (builtinIndex >= 0) {\n        // Don't allow overwriting built-in presets, create a copy instead\n        enhancedPreset.id = generatePresetId();\n        enhancedPreset.name = `${enhancedPreset.name} (Custom)`;\n    }\n    // Save to user presets\n    const userIndex = userPresets.findIndex(p => p.id === enhancedPreset.id);\n    if (userIndex >= 0) {\n        userPresets[userIndex] = enhancedPreset;\n    }\n    else {\n        userPresets.push(enhancedPreset);\n    }\n    saveUserPresetsToStorage();\n}\n/** Create a new preset from scratch */\nfunction createPreset(name, options = {}) {\n    const preset = {\n        id: generatePresetId(),\n        name,\n        description: options.description || '',\n        domain: options.domain || 'General',\n        enabledKinds: options.enabledKinds || [],\n        styleMap: options.styleMap || {},\n        customRegex: options.customRegex || [],\n        customPatterns: options.customPatterns || [],\n        defaultRedactionConfig: options.defaultRedactionConfig || {\n            color: '#000000',\n            opacity: 0.9\n        },\n        confidenceThreshold: options.confidenceThreshold || 0.6,\n        isUserCreated: true,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        version: '1.0.0'\n    };\n    savePreset(preset);\n    return preset;\n}\n/** Duplicate an existing preset */\nfunction duplicatePreset(id, newName) {\n    const original = getPreset(id);\n    if (!original)\n        return undefined;\n    const preset = {\n        ...original,\n        id: generatePresetId(),\n        name: newName || `${original.name} (Copy)`,\n        isUserCreated: true,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n    savePreset(preset);\n    return preset;\n}\n/** Delete a preset by its ID.  Built-in presets cannot be deleted. */\nfunction deletePreset(id) {\n    // Don't allow deleting built-in presets\n    const isBuiltin = PRESETS.some(p => p.id === id);\n    if (isBuiltin)\n        return false;\n    const index = userPresets.findIndex(p => p.id === id);\n    if (index >= 0) {\n        userPresets.splice(index, 1);\n        saveUserPresetsToStorage();\n        return true;\n    }\n    return false;\n}\n/** Validate a preset object */\nfunction validatePreset(preset) {\n    const errors = [];\n    const warnings = [];\n    // Required fields\n    if (!preset.id || typeof preset.id !== 'string') {\n        errors.push('Preset must have a valid ID');\n    }\n    if (!preset.name || typeof preset.name !== 'string') {\n        errors.push('Preset must have a valid name');\n    }\n    if (!Array.isArray(preset.enabledKinds)) {\n        errors.push('Preset must have an enabledKinds array');\n    }\n    // Validate detection kinds\n    const validKinds = ['FACE', 'EMAIL', 'PHONE', 'PAN', 'IBAN', 'SSN', 'PASSPORT', 'JWT', 'API_KEY', 'BARCODE', 'NAME', 'ADDRESS', 'OTHER'];\n    if (preset.enabledKinds) {\n        const invalidKinds = preset.enabledKinds.filter((kind) => !validKinds.includes(kind));\n        if (invalidKinds.length > 0) {\n            warnings.push(`Unknown detection kinds: ${invalidKinds.join(', ')}`);\n        }\n    }\n    // Validate custom patterns\n    if (preset.customPatterns && Array.isArray(preset.customPatterns)) {\n        preset.customPatterns.forEach((pattern, index) => {\n            if (!pattern.id || !pattern.name || !pattern.pattern) {\n                errors.push(`Custom pattern ${index + 1} is missing required fields (id, name, pattern)`);\n            }\n            if (pattern.pattern) {\n                try {\n                    new RegExp(pattern.pattern);\n                }\n                catch (error) {\n                    errors.push(`Custom pattern ${index + 1} has invalid regex: ${pattern.pattern}`);\n                }\n            }\n        });\n    }\n    // Validate confidence threshold\n    if (preset.confidenceThreshold !== undefined) {\n        if (typeof preset.confidenceThreshold !== 'number' || preset.confidenceThreshold < 0 || preset.confidenceThreshold > 1) {\n            warnings.push('Confidence threshold should be a number between 0 and 1');\n        }\n    }\n    return {\n        success: errors.length === 0,\n        preset: errors.length === 0 ? preset : undefined,\n        errors,\n        warnings\n    };\n}\n/** Import a preset from JSON */\nfunction importPreset(json) {\n    try {\n        const data = JSON.parse(json);\n        const validation = validatePreset(data);\n        if (validation.success && validation.preset) {\n            // Check for ID conflicts and generate new ID if needed\n            const existingPreset = getPreset(validation.preset.id);\n            if (existingPreset) {\n                validation.preset.id = generatePresetId();\n                validation.preset.name = `${validation.preset.name} (Imported)`;\n                validation.warnings.push('Preset ID already exists, generated new ID');\n            }\n            // Mark as user-created and update timestamps\n            validation.preset.isUserCreated = true;\n            validation.preset.createdAt = new Date().toISOString();\n            validation.preset.updatedAt = new Date().toISOString();\n            savePreset(validation.preset);\n        }\n        return validation;\n    }\n    catch (error) {\n        return {\n            success: false,\n            errors: [`Invalid JSON: ${error instanceof Error ? error.message : 'Unknown error'}`],\n            warnings: []\n        };\n    }\n}\n/** Export a preset to JSON */\nfunction exportPreset(id, options = {}) {\n    const preset = getPreset(id);\n    if (!preset)\n        return null;\n    const exportData = { ...preset };\n    // Remove metadata if requested\n    if (!options.includeMetadata) {\n        delete exportData.createdAt;\n        delete exportData.updatedAt;\n        delete exportData.isUserCreated;\n    }\n    if (options.format === 'compact') {\n        return JSON.stringify(exportData);\n    }\n    else {\n        return JSON.stringify(exportData, null, 2);\n    }\n}\n/** Export all user presets */\nfunction exportAllUserPresets(options = {}) {\n    const presets = listUserPresets();\n    const exportData = presets.map(preset => {\n        const data = { ...preset };\n        if (!options.includeMetadata) {\n            delete data.createdAt;\n            delete data.updatedAt;\n            delete data.isUserCreated;\n        }\n        return data;\n    });\n    if (options.format === 'compact') {\n        return JSON.stringify(exportData);\n    }\n    else {\n        return JSON.stringify(exportData, null, 2);\n    }\n}\n/** Import multiple presets from JSON array */\nfunction importMultiplePresets(json) {\n    try {\n        const data = JSON.parse(json);\n        if (!Array.isArray(data)) {\n            return [{\n                    success: false,\n                    errors: ['Expected JSON array of presets'],\n                    warnings: []\n                }];\n        }\n        return data.map(presetData => importPreset(JSON.stringify(presetData)));\n    }\n    catch (error) {\n        return [{\n                success: false,\n                errors: [`Invalid JSON: ${error instanceof Error ? error.message : 'Unknown error'}`],\n                warnings: []\n            }];\n    }\n}\n/** Reset all user presets (clear localStorage) */\nfunction resetUserPresets() {\n    userPresets = [];\n    saveUserPresetsToStorage();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core-detect/dist/presets.js\n");

/***/ }),

/***/ "../core-detect/dist/types.js":
/*!************************************!*\
  !*** ../core-detect/dist/types.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS1kZXRlY3QvZGlzdC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2xlYW5zaGFyZS91aS8uLi9jb3JlLWRldGVjdC9kaXN0L3R5cGVzLmpzP2I1NjMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core-detect/dist/types.js\n");

/***/ }),

/***/ "jsqr":
/*!***********************!*\
  !*** external "jsqr" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("jsqr");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "pdfjs-dist":
/*!*****************************!*\
  !*** external "pdfjs-dist" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("pdfjs-dist");

/***/ }),

/***/ "pdfjs-dist/build/pdf.worker.js":
/*!*************************************************!*\
  !*** external "pdfjs-dist/build/pdf.worker.js" ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("pdfjs-dist/build/pdf.worker.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = import("uuid");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?60a5":
/*!**************************!*\
  !*** encoding (ignored) ***!
  \**************************/
/***/ (() => {

/* (ignored) */

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0","vendor-chunks/@swc+helpers@0.5.2","vendor-chunks/pdf-lib@1.17.1","vendor-chunks/tesseract.js@4.1.4","vendor-chunks/@pdf-lib+standard-fonts@1.0.0","vendor-chunks/pako@1.0.11","vendor-chunks/whatwg-url@5.0.0","vendor-chunks/tr46@0.0.3","vendor-chunks/webidl-conversions@3.0.1","vendor-chunks/tslib@1.14.1","vendor-chunks/regenerator-runtime@0.13.11","vendor-chunks/node-fetch@2.7.0","vendor-chunks/is-url@1.2.4","vendor-chunks/is-electron@2.2.2","vendor-chunks/@pdf-lib+upng@1.0.1"], () => (__webpack_exec__("../../node_modules/.pnpm/next@14.1.0_@babel+core@7.28.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();