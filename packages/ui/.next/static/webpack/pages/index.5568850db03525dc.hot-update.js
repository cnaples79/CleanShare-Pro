"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CleanSharePro; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\");\n/* harmony import */ var _src_components_PresetManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components/PresetManager */ \"./src/components/PresetManager.tsx\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);\nvar _s = $RefreshSig$();\n// CleanShare Pro - Modern UI Implementation\n\n\n\n\nfunction CleanSharePro() {\n  _s();\n  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [fileStates, setFileStates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [currentFileIndex, setCurrentFileIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [presets, setPresets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [presetId, setPresetId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [proUnlocked, setProUnlocked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showPresetEditor, setShowPresetEditor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showHistoryDashboard, setShowHistoryDashboard] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [currentSessionId, setCurrentSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [fileProcessingRecords, setFileProcessingRecords] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Map());\n\n  // Load presets on mount and when preset manager updates\n  const loadPresets = () => {\n    // Import listPresets dynamically to avoid SSR issues\n    Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\")).then(({\n      listPresets\n    }) => {\n      const ps = listPresets();\n      setPresets(ps);\n      if (ps.length > 0 && !presetId) {\n        setPresetId(ps[0].id);\n      }\n    });\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    loadPresets();\n  }, []);\n\n  // Process files when they change\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (files.length === 0) return;\n    async function processFiles() {\n      setLoading(true);\n      const newStates = [];\n\n      // Start processing session\n      const currentPreset = presets.find(p => p.id === presetId);\n      const sessionId = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.startSession)({\n        totalFiles: files.length,\n        presetId,\n        presetName: currentPreset?.name,\n        analyzeOptions: {\n          presetId\n        }\n      });\n      setCurrentSessionId(sessionId);\n      const processingRecords = new Map();\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const startTime = Date.now();\n\n        // Start tracking this file\n        const recordId = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.startFileProcessing)({\n          sessionId,\n          fileName: file.name,\n          fileSize: file.size,\n          fileType: file.type\n        });\n        processingRecords.set(i, recordId);\n        try {\n          const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.analyzeDocument)(file, {\n            presetId\n          });\n          const analysisTime = Date.now() - startTime;\n\n          // Record analysis results\n          (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.recordAnalysisResults)(recordId, {\n            detections: result.detections,\n            detectionTime: analysisTime\n          });\n          const selected = {};\n          const actions = {};\n          result.detections.forEach(det => {\n            selected[det.id] = true;\n            actions[det.id] = {\n              style: 'BOX'\n            };\n          });\n          newStates.push({\n            file,\n            detections: result.detections,\n            selected,\n            actions,\n            pages: result.pages || 1,\n            pageImages: [],\n            currentPage: 0,\n            processing: false\n          });\n        } catch (error) {\n          console.error('Failed to process file:', file.name, error);\n\n          // Record analysis error\n          (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.recordAnalysisResults)(recordId, {\n            detections: [],\n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n\n          // Add the file with error state\n          newStates.push({\n            file,\n            detections: [],\n            selected: {},\n            actions: {},\n            pages: 1,\n            pageImages: [],\n            currentPage: 0,\n            processing: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n        }\n      }\n      setFileStates(newStates);\n      setFileProcessingRecords(processingRecords);\n      setLoading(false);\n\n      // End the session\n      (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.endSession)(sessionId, 'completed');\n    }\n    processFiles();\n  }, [files, presetId]);\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files || []);\n    setFiles(selectedFiles);\n    setCurrentFileIndex(0);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    setFiles(droppedFiles);\n    setCurrentFileIndex(0);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleSanitize = async fileIndex => {\n    const fileState = fileStates[fileIndex];\n    if (!fileState) return;\n\n    // Update processing state\n    setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n      ...state,\n      processing: true\n    } : state));\n    const redactionStartTime = Date.now();\n    const recordId = fileProcessingRecords.get(fileIndex);\n    try {\n      // Re-analyze the file to ensure lastResult is set correctly  \n      await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.analyzeDocument)(fileState.file, {\n        presetId\n      });\n      const redactionActions = fileState.detections.filter(det => fileState.selected[det.id]).map(det => ({\n        detectionId: det.id,\n        style: fileState.actions[det.id]?.style || 'BOX',\n        labelText: fileState.actions[det.id]?.labelText\n      }));\n      const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.applyRedactions)(fileState.file, redactionActions, {\n        output: 'image'\n      }, fileState.detections);\n\n      // Convert data URI to blob for download\n      const response = await fetch(result.fileUri);\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      const redactionTime = Date.now() - redactionStartTime;\n\n      // Record redaction results\n      if (recordId) {\n        (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.recordRedactionResults)(recordId, {\n          appliedRedactions: redactionActions,\n          redactionTime,\n          outputSize: blob.size\n        });\n      }\n\n      // Update file state with result\n      setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n        ...state,\n        outputUri: url,\n        previewUri: result.fileUri,\n        processing: false\n      } : state));\n    } catch (error) {\n      console.error('Sanitization failed:', error);\n\n      // Record redaction error\n      if (recordId) {\n        (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.recordRedactionResults)(recordId, {\n          appliedRedactions: [],\n          error: error instanceof Error ? error.message : 'Unknown error'\n        });\n      }\n\n      // Show error to user\n      alert(`Sanitization failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n        ...state,\n        processing: false\n      } : state));\n    }\n  };\n  const handleDownload = fileIndex => {\n    const fileState = fileStates[fileIndex];\n    if (!fileState?.outputUri) return;\n    const link = document.createElement('a');\n    link.href = fileState.outputUri;\n    link.download = `sanitized_${fileState.file.name}`;\n    link.click();\n  };\n  const handleBulkSanitize = async () => {\n    const filesToProcess = fileStates.map((state, index) => ({\n      state,\n      index\n    })).filter(({\n      state\n    }) => !state.outputUri && !state.error);\n    if (filesToProcess.length === 0) return;\n\n    // Set all eligible files to processing state\n    setFileStates(prev => prev.map((state, index) => {\n      const shouldProcess = filesToProcess.some(({\n        index: processIndex\n      }) => processIndex === index);\n      return shouldProcess ? {\n        ...state,\n        processing: true\n      } : state;\n    }));\n    try {\n      // Process files with limited concurrency\n      const maxConcurrency = 3;\n      for (let i = 0; i < filesToProcess.length; i += maxConcurrency) {\n        const batch = filesToProcess.slice(i, i + maxConcurrency);\n        const promises = batch.map(async ({\n          state,\n          index: fileIndex\n        }) => {\n          try {\n            // Re-analyze the file to ensure lastResult is set correctly  \n            await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.analyzeDocument)(state.file, {\n              presetId\n            });\n            const redactionActions = state.detections.filter(det => state.selected[det.id]).map(det => ({\n              detectionId: det.id,\n              style: state.actions[det.id]?.style || 'BOX',\n              labelText: state.actions[det.id]?.labelText\n            }));\n            const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_3__.applyRedactions)(state.file, redactionActions, {\n              output: 'image'\n            }, state.detections);\n\n            // Convert data URI to blob for download\n            const response = await fetch(result.fileUri);\n            const blob = await response.blob();\n            const url = URL.createObjectURL(blob);\n\n            // Update file state with result\n            setFileStates(prev => prev.map((s, i) => i === fileIndex ? {\n              ...s,\n              outputUri: url,\n              previewUri: result.fileUri,\n              processing: false\n            } : s));\n          } catch (error) {\n            console.error(`Sanitization failed for ${state.file.name}:`, error);\n            setFileStates(prev => prev.map((s, i) => i === fileIndex ? {\n              ...s,\n              processing: false,\n              error: error instanceof Error ? error.message : 'Unknown error'\n            } : s));\n          }\n        });\n        await Promise.all(promises);\n      }\n    } catch (error) {\n      console.error('Bulk sanitization failed:', error);\n    }\n  };\n  const handleBulkDownload = () => {\n    const processedFiles = fileStates.filter(state => state.outputUri);\n    if (processedFiles.length === 0) return;\n\n    // Download each file individually\n    processedFiles.forEach((state, index) => {\n      if (state.outputUri) {\n        setTimeout(() => {\n          const link = document.createElement('a');\n          link.href = state.outputUri;\n          link.download = `sanitized_${state.file.name}`;\n          link.click();\n        }, index * 100); // Stagger downloads by 100ms\n      }\n    });\n  };\n\n  const currentFileState = fileStates[currentFileIndex];\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"a\", {\n          href: \"#\",\n          className: \"logo\",\n          children: \"CleanShare Pro\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 'var(--space-md)'\n          },\n          children: [presets.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-xs)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"select\", {\n              value: presetId,\n              onChange: e => setPresetId(e.target.value),\n              className: \"form-select\",\n              style: {\n                minWidth: '180px'\n              },\n              children: presets.map(p => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"option\", {\n                value: p.id,\n                children: [p.name, \" \", p.domain && p.domain !== 'General' ? `(${p.domain})` : '']\n              }, p.id))\n            }), (() => {\n              const currentPreset = presets.find(p => p.id === presetId);\n              return currentPreset?.description ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-xs)',\n                  color: 'var(--text-secondary)',\n                  maxWidth: '200px',\n                  lineHeight: '1.2'\n                },\n                children: currentPreset.description\n              }) : null;\n            })()]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", {\n            onClick: () => setProUnlocked(!proUnlocked),\n            className: `btn ${proUnlocked ? 'btn-secondary' : 'btn-outline'} btn-sm`,\n            children: proUnlocked ? '✓ Pro Unlocked' : '🔓 Unlock Pro'\n          }), proUnlocked && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", {\n              onClick: () => setShowPresetEditor(true),\n              className: \"btn btn-primary btn-sm\",\n              children: \"Manage Presets\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", {\n              onClick: () => setShowHistoryDashboard(true),\n              className: \"btn btn-secondary btn-sm\",\n              children: \"\\uD83D\\uDCCA History\"\n            })]\n          })]\n        })]\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n        className: \"card\",\n        style: {\n          marginBottom: 'var(--space-xl)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"h2\", {\n            className: \"card-title\",\n            children: \"Upload Files\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", {\n            className: \"card-subtitle\",\n            children: \"Select images or PDF documents to sanitize\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n            className: \"file-upload-zone\",\n            onDrop: handleDrop,\n            onDragOver: handleDragOver,\n            onDragLeave: handleDragLeave,\n            onClick: () => document.getElementById('file-input')?.click(),\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n              className: \"file-upload-icon\",\n              children: \"\\uD83D\\uDCC4\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n              className: \"file-upload-text\",\n              children: \"Drop files here or click to browse\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n              className: \"file-upload-subtext\",\n              children: \"Supports images (JPG, PNG, WebP, HEIC, TIFF), PDFs, and documents (DOCX, XLSX) up to 10MB each\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"input\", {\n              id: \"file-input\",\n              type: \"file\",\n              accept: \"image/*,application/pdf,.webp,.heic,.tiff,.docx,.xlsx\",\n              multiple: true,\n              onChange: handleFileChange,\n              style: {\n                display: 'none'\n              }\n            })]\n          }), loading && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n            className: \"loading-text\",\n            style: {\n              marginTop: 'var(--space-md)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n              className: \"loading-spinner\"\n            }), \"Processing files...\"]\n          })]\n        })]\n      }), fileStates.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 'var(--space-xl)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n          className: \"sidebar\",\n          style: {\n            minWidth: '250px'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"h3\", {\n            className: \"sidebar-title\",\n            children: [\"Files (\", fileStates.length, \")\"]\n          }), fileStates.length > 1 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n            style: {\n              padding: 'var(--space-md)',\n              marginBottom: 'var(--space-md)',\n              border: '2px solid var(--color-primary)',\n              borderRadius: 'var(--radius-md)',\n              background: 'var(--bg-secondary)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"h4\", {\n              style: {\n                margin: '0 0 var(--space-sm) 0',\n                fontSize: 'var(--font-size-sm)',\n                fontWeight: '600'\n              },\n              children: \"\\uD83D\\uDE80 Bulk Processing\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 'var(--space-xs)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", {\n                onClick: handleBulkSanitize,\n                className: \"btn btn-primary btn-sm\",\n                disabled: fileStates.some(s => s.processing) || fileStates.every(s => s.outputUri),\n                style: {\n                  width: '100%'\n                },\n                children: fileStates.some(s => s.processing) ? 'Processing...' : fileStates.every(s => s.outputUri) ? 'All Complete' : `Sanitize All (${fileStates.filter(s => !s.outputUri && !s.error).length})`\n              }), fileStates.some(s => s.outputUri) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"button\", {\n                onClick: handleBulkDownload,\n                className: \"btn btn-secondary btn-sm\",\n                style: {\n                  width: '100%'\n                },\n                children: [\"\\uD83D\\uDCE6 Download All (\", fileStates.filter(s => s.outputUri).length, \")\"]\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n              style: {\n                marginTop: 'var(--space-xs)',\n                fontSize: 'var(--font-size-xs)',\n                color: 'var(--text-secondary)'\n              },\n              children: \"Concurrent processing with progress tracking\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-sm)'\n            },\n            children: fileStates.map((state, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n              onClick: () => setCurrentFileIndex(index),\n              style: {\n                padding: 'var(--space-md)',\n                border: `2px solid ${index === currentFileIndex ? 'var(--color-primary)' : 'var(--border-light)'}`,\n                borderRadius: 'var(--radius-md)',\n                cursor: 'pointer',\n                background: index === currentFileIndex ? 'var(--bg-secondary)' : 'var(--bg-primary)',\n                transition: 'all var(--transition-fast)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                style: {\n                  fontWeight: '600',\n                  fontSize: 'var(--font-size-sm)',\n                  marginBottom: 'var(--space-xs)'\n                },\n                children: state.file.name\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-xs)',\n                  color: state.error ? 'var(--color-error)' : 'var(--text-secondary)'\n                },\n                children: state.error ? `Error: ${state.error}` : `${state.detections.length} detections found`\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                style: {\n                  marginTop: 'var(--space-sm)',\n                  display: 'flex',\n                  gap: 'var(--space-xs)'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleSanitize(index);\n                  },\n                  className: \"btn btn-primary btn-sm\",\n                  disabled: state.processing || !!state.error,\n                  style: {\n                    flex: 1\n                  },\n                  children: state.processing ? 'Processing...' : 'Sanitize'\n                }), state.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDownload(index);\n                  },\n                  className: \"btn btn-secondary btn-sm\",\n                  children: \"Download\"\n                })]\n              })]\n            }, index))\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: currentFileState && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"h3\", {\n                className: \"card-title\",\n                children: currentFileState.file.name\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", {\n                className: \"card-subtitle\",\n                children: currentFileState.error ? 'Processing failed' : `Found ${currentFileState.detections.length} sensitive items`\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n              className: \"card-body\",\n              children: currentFileState.error ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                className: \"alert alert-error\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"strong\", {\n                    children: \"Processing Error\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"p\", {\n                    style: {\n                      margin: '0',\n                      marginTop: 'var(--space-xs)'\n                    },\n                    children: [\"Failed to analyze this file: \", currentFileState.error]\n                  })]\n                })\n              }) : currentFileState.detections.length > 0 ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"h4\", {\n                  style: {\n                    marginBottom: 'var(--space-md)',\n                    fontSize: 'var(--font-size-lg)'\n                  },\n                  children: \"Detected Sensitive Information\"\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 'var(--space-sm)'\n                  },\n                  children: currentFileState.detections.map(detection => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                    style: {\n                      padding: 'var(--space-md)',\n                      border: '1px solid var(--border-light)',\n                      borderRadius: 'var(--radius-md)',\n                      background: 'var(--bg-secondary)',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 'var(--space-md)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"input\", {\n                        type: \"checkbox\",\n                        checked: currentFileState.selected[detection.id] || false,\n                        onChange: e => {\n                          setFileStates(prev => prev.map((state, i) => i === currentFileIndex ? {\n                            ...state,\n                            selected: {\n                              ...state.selected,\n                              [detection.id]: e.target.checked\n                            }\n                          } : state));\n                        }\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                          style: {\n                            fontWeight: '600',\n                            fontSize: 'var(--font-size-sm)'\n                          },\n                          children: [detection.kind, \": \", detection.preview || 'N/A']\n                        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                          style: {\n                            fontSize: 'var(--font-size-xs)',\n                            color: 'var(--text-secondary)'\n                          },\n                          children: [\"Confidence: \", Math.round(detection.confidence * 100), \"%\"]\n                        })]\n                      })]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"select\", {\n                      value: currentFileState.actions[detection.id]?.style || 'BOX',\n                      onChange: e => {\n                        setFileStates(prev => prev.map((state, i) => i === currentFileIndex ? {\n                          ...state,\n                          actions: {\n                            ...state.actions,\n                            [detection.id]: {\n                              ...state.actions[detection.id],\n                              style: e.target.value\n                            }\n                          }\n                        } : state));\n                      },\n                      className: \"form-select\",\n                      style: {\n                        minWidth: '120px'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"option\", {\n                        value: \"BOX\",\n                        children: \"Black Box\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"option\", {\n                        value: \"BLUR\",\n                        children: \"Blur\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"option\", {\n                        value: \"PIXELATE\",\n                        children: \"Pixelate\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"option\", {\n                        value: \"LABEL\",\n                        children: \"Label\"\n                      })]\n                    })]\n                  }, detection.id))\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                  className: \"card-footer\",\n                  style: {\n                    marginTop: 'var(--space-xl)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", {\n                    onClick: () => handleSanitize(currentFileIndex),\n                    className: \"btn btn-primary btn-lg\",\n                    disabled: currentFileState.processing,\n                    children: currentFileState.processing ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                        className: \"loading-spinner\",\n                        style: {\n                          width: '1rem',\n                          height: '1rem'\n                        }\n                      }), \"Processing...\"]\n                    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n                      children: \"\\uD83D\\uDD12 Sanitize Document\"\n                    })\n                  }), currentFileState.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", {\n                    onClick: () => handleDownload(currentFileIndex),\n                    className: \"btn btn-secondary btn-lg\",\n                    children: \"\\uD83D\\uDCE5 Download Clean File\"\n                  })]\n                }), currentFileState.previewUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                  style: {\n                    marginTop: 'var(--space-xl)',\n                    padding: 'var(--space-lg)',\n                    background: 'var(--bg-secondary)',\n                    borderRadius: 'var(--radius-md)',\n                    border: '1px solid var(--border-light)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"h4\", {\n                    style: {\n                      marginBottom: 'var(--space-md)',\n                      fontSize: 'var(--font-size-lg)',\n                      color: 'var(--color-primary)'\n                    },\n                    children: \"\\uD83D\\uDD12 Sanitized Preview\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      padding: 'var(--space-md)',\n                      background: 'var(--bg-primary)',\n                      borderRadius: 'var(--radius-md)',\n                      border: '1px solid var(--border-light)'\n                    },\n                    children: currentFileState.file.type.startsWith('image/') ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"img\", {\n                      src: currentFileState.previewUri,\n                      alt: \"Sanitized preview\",\n                      style: {\n                        maxWidth: '100%',\n                        maxHeight: '400px',\n                        borderRadius: 'var(--radius-sm)',\n                        boxShadow: 'var(--shadow-md)'\n                      }\n                    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                      style: {\n                        textAlign: 'center',\n                        padding: 'var(--space-xl)',\n                        color: 'var(--text-secondary)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                        style: {\n                          fontSize: 'var(--font-size-3xl)',\n                          marginBottom: 'var(--space-md)'\n                        },\n                        children: \"\\uD83D\\uDCC4\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", {\n                        children: \"PDF sanitized successfully\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", {\n                        style: {\n                          fontSize: 'var(--font-size-sm)'\n                        },\n                        children: \"Click download to save the clean file\"\n                      })]\n                    })\n                  })]\n                })]\n              }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                className: \"alert alert-success\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"strong\", {\n                    children: \"No sensitive information detected!\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", {\n                    style: {\n                      margin: '0',\n                      marginTop: 'var(--space-xs)'\n                    },\n                    children: \"This document appears to be clean and safe to share.\"\n                  })]\n                })\n              })\n            })]\n          })\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_components_PresetManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        isOpen: showPresetEditor && proUnlocked,\n        onClose: () => setShowPresetEditor(false),\n        currentPresetId: presetId,\n        onPresetSelect: id => {\n          setPresetId(id);\n          loadPresets(); // Refresh presets list in case new ones were created\n          setShowPresetEditor(false);\n        }\n      })]\n    })]\n  });\n}\n_s(CleanSharePro, \"064x2LbXOytylVfAtyY250VMjPM=\");\n_c = CleanSharePro;\nvar _c;\n$RefreshReg$(_c, \"CleanSharePro\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNtRDtBQVFzSDtBQUM3RztBQUFBO0FBaUI3QyxTQUFTaUIsYUFBYUEsQ0FBQSxFQUFHO0VBQUFDLEVBQUE7RUFDdEMsTUFBTSxDQUFDQyxLQUFLLEVBQUVDLFFBQVEsQ0FBQyxHQUFHbkIsK0NBQVEsQ0FBUyxFQUFFLENBQUM7RUFDOUMsTUFBTSxDQUFDb0IsVUFBVSxFQUFFQyxhQUFhLENBQUMsR0FBR3JCLCtDQUFRLENBQWMsRUFBRSxDQUFDO0VBQzdELE1BQU0sQ0FBQ3NCLGdCQUFnQixFQUFFQyxtQkFBbUIsQ0FBQyxHQUFHdkIsK0NBQVEsQ0FBQyxDQUFDLENBQUM7RUFDM0QsTUFBTSxDQUFDd0IsT0FBTyxFQUFFQyxVQUFVLENBQUMsR0FBR3pCLCtDQUFRLENBQVcsRUFBRSxDQUFDO0VBQ3BELE1BQU0sQ0FBQzBCLFFBQVEsRUFBRUMsV0FBVyxDQUFDLEdBQUczQiwrQ0FBUSxDQUFTLEVBQUUsQ0FBQztFQUNwRCxNQUFNLENBQUM0QixPQUFPLEVBQUVDLFVBQVUsQ0FBQyxHQUFHN0IsK0NBQVEsQ0FBQyxLQUFLLENBQUM7RUFDN0MsTUFBTSxDQUFDOEIsV0FBVyxFQUFFQyxjQUFjLENBQUMsR0FBRy9CLCtDQUFRLENBQUMsS0FBSyxDQUFDO0VBQ3JELE1BQU0sQ0FBQ2dDLGdCQUFnQixFQUFFQyxtQkFBbUIsQ0FBQyxHQUFHakMsK0NBQVEsQ0FBQyxLQUFLLENBQUM7RUFDL0QsTUFBTSxDQUFDa0Msb0JBQW9CLEVBQUVDLHVCQUF1QixDQUFDLEdBQUduQywrQ0FBUSxDQUFDLEtBQUssQ0FBQztFQUN2RSxNQUFNLENBQUNvQyxnQkFBZ0IsRUFBRUMsbUJBQW1CLENBQUMsR0FBR3JDLCtDQUFRLENBQWdCLElBQUksQ0FBQztFQUM3RSxNQUFNLENBQUNzQyxxQkFBcUIsRUFBRUMsd0JBQXdCLENBQUMsR0FBR3ZDLCtDQUFRLENBQXNCLElBQUl3QyxHQUFHLENBQUMsQ0FBQyxDQUFDOztFQUVsRztFQUNBLE1BQU1DLFdBQVcsR0FBR0EsQ0FBQSxLQUFNO0lBQ3hCO0lBQ0EsbUpBQWlDLENBQUNDLElBQUksQ0FBQyxDQUFDO01BQUVDO0lBQVksQ0FBQyxLQUFLO01BQzFELE1BQU1DLEVBQUUsR0FBR0QsV0FBVyxDQUFDLENBQUM7TUFDeEJsQixVQUFVLENBQUNtQixFQUFFLENBQUM7TUFDZCxJQUFJQSxFQUFFLENBQUNDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQ25CLFFBQVEsRUFBRTtRQUM5QkMsV0FBVyxDQUFDaUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDRSxFQUFFLENBQUM7TUFDdkI7SUFDRixDQUFDLENBQUM7RUFDSixDQUFDO0VBRUQ3QyxnREFBUyxDQUFDLE1BQU07SUFDZHdDLFdBQVcsQ0FBQyxDQUFDO0VBQ2YsQ0FBQyxFQUFFLEVBQUUsQ0FBQzs7RUFFTjtFQUNBeEMsZ0RBQVMsQ0FBQyxNQUFNO0lBQ2QsSUFBSWlCLEtBQUssQ0FBQzJCLE1BQU0sS0FBSyxDQUFDLEVBQUU7SUFFeEIsZUFBZUUsWUFBWUEsQ0FBQSxFQUFHO01BQzVCbEIsVUFBVSxDQUFDLElBQUksQ0FBQztNQUNoQixNQUFNbUIsU0FBc0IsR0FBRyxFQUFFOztNQUVqQztNQUNBLE1BQU1DLGFBQWEsR0FBR3pCLE9BQU8sQ0FBQzBCLElBQUksQ0FBQ0MsQ0FBQyxJQUFJQSxDQUFDLENBQUNMLEVBQUUsS0FBS3BCLFFBQVEsQ0FBQztNQUMxRCxNQUFNMEIsU0FBUyxHQUFHaEQscUVBQVksQ0FBQztRQUM3QmlELFVBQVUsRUFBRW5DLEtBQUssQ0FBQzJCLE1BQU07UUFDeEJuQixRQUFRO1FBQ1I0QixVQUFVLEVBQUVMLGFBQWEsRUFBRU0sSUFBSTtRQUMvQkMsY0FBYyxFQUFFO1VBQUU5QjtRQUFTO01BQzdCLENBQUMsQ0FBQztNQUNGVyxtQkFBbUIsQ0FBQ2UsU0FBUyxDQUFDO01BRTlCLE1BQU1LLGlCQUFpQixHQUFHLElBQUlqQixHQUFHLENBQWlCLENBQUM7TUFFbkQsS0FBSyxJQUFJa0IsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHeEMsS0FBSyxDQUFDMkIsTUFBTSxFQUFFYSxDQUFDLEVBQUUsRUFBRTtRQUNyQyxNQUFNQyxJQUFJLEdBQUd6QyxLQUFLLENBQUN3QyxDQUFDLENBQUM7UUFDckIsTUFBTUUsU0FBUyxHQUFHQyxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDOztRQUU1QjtRQUNBLE1BQU1DLFFBQVEsR0FBR3pELDRFQUFtQixDQUFDO1VBQ25DOEMsU0FBUztVQUNUWSxRQUFRLEVBQUVMLElBQUksQ0FBQ0osSUFBSTtVQUNuQlUsUUFBUSxFQUFFTixJQUFJLENBQUNPLElBQUk7VUFDbkJDLFFBQVEsRUFBRVIsSUFBSSxDQUFDUztRQUNqQixDQUFDLENBQUM7UUFDRlgsaUJBQWlCLENBQUNZLEdBQUcsQ0FBQ1gsQ0FBQyxFQUFFSyxRQUFRLENBQUM7UUFFbEMsSUFBSTtVQUNGLE1BQU1PLE1BQU0sR0FBRyxNQUFNcEUsd0VBQWUsQ0FBQ3lELElBQUksRUFBRTtZQUFFakM7VUFBUyxDQUFDLENBQUM7VUFDeEQsTUFBTTZDLFlBQVksR0FBR1YsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHRixTQUFTOztVQUUzQztVQUNBckQsOEVBQXFCLENBQUN3RCxRQUFRLEVBQUU7WUFDOUJTLFVBQVUsRUFBRUYsTUFBTSxDQUFDRSxVQUFVO1lBQzdCQyxhQUFhLEVBQUVGO1VBQ2pCLENBQUMsQ0FBQztVQUVGLE1BQU1HLFFBQWlDLEdBQUcsQ0FBQyxDQUFDO1VBQzVDLE1BQU1DLE9BQXNFLEdBQUcsQ0FBQyxDQUFDO1VBRWpGTCxNQUFNLENBQUNFLFVBQVUsQ0FBQ0ksT0FBTyxDQUFDQyxHQUFHLElBQUk7WUFDL0JILFFBQVEsQ0FBQ0csR0FBRyxDQUFDL0IsRUFBRSxDQUFDLEdBQUcsSUFBSTtZQUN2QjZCLE9BQU8sQ0FBQ0UsR0FBRyxDQUFDL0IsRUFBRSxDQUFDLEdBQUc7Y0FBRWdDLEtBQUssRUFBRTtZQUFNLENBQUM7VUFDcEMsQ0FBQyxDQUFDO1VBRUY5QixTQUFTLENBQUMrQixJQUFJLENBQUM7WUFDYnBCLElBQUk7WUFDSmEsVUFBVSxFQUFFRixNQUFNLENBQUNFLFVBQVU7WUFDN0JFLFFBQVE7WUFDUkMsT0FBTztZQUNQSyxLQUFLLEVBQUVWLE1BQU0sQ0FBQ1UsS0FBSyxJQUFJLENBQUM7WUFDeEJDLFVBQVUsRUFBRSxFQUFFO1lBQ2RDLFdBQVcsRUFBRSxDQUFDO1lBQ2RDLFVBQVUsRUFBRTtVQUNkLENBQUMsQ0FBQztRQUNKLENBQUMsQ0FBQyxPQUFPQyxLQUFLLEVBQUU7VUFDZEMsT0FBTyxDQUFDRCxLQUFLLENBQUMseUJBQXlCLEVBQUV6QixJQUFJLENBQUNKLElBQUksRUFBRTZCLEtBQUssQ0FBQzs7VUFFMUQ7VUFDQTdFLDhFQUFxQixDQUFDd0QsUUFBUSxFQUFFO1lBQzlCUyxVQUFVLEVBQUUsRUFBRTtZQUNkWSxLQUFLLEVBQUVBLEtBQUssWUFBWUUsS0FBSyxHQUFHRixLQUFLLENBQUNHLE9BQU8sR0FBRztVQUNsRCxDQUFDLENBQUM7O1VBRUY7VUFDQXZDLFNBQVMsQ0FBQytCLElBQUksQ0FBQztZQUNicEIsSUFBSTtZQUNKYSxVQUFVLEVBQUUsRUFBRTtZQUNkRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQ1pDLE9BQU8sRUFBRSxDQUFDLENBQUM7WUFDWEssS0FBSyxFQUFFLENBQUM7WUFDUkMsVUFBVSxFQUFFLEVBQUU7WUFDZEMsV0FBVyxFQUFFLENBQUM7WUFDZEMsVUFBVSxFQUFFLEtBQUs7WUFDakJDLEtBQUssRUFBRUEsS0FBSyxZQUFZRSxLQUFLLEdBQUdGLEtBQUssQ0FBQ0csT0FBTyxHQUFHO1VBQ2xELENBQUMsQ0FBQztRQUNKO01BQ0Y7TUFFQWxFLGFBQWEsQ0FBQzJCLFNBQVMsQ0FBQztNQUN4QlQsd0JBQXdCLENBQUNrQixpQkFBaUIsQ0FBQztNQUMzQzVCLFVBQVUsQ0FBQyxLQUFLLENBQUM7O01BRWpCO01BQ0F4QixtRUFBVSxDQUFDK0MsU0FBUyxFQUFFLFdBQVcsQ0FBQztJQUNwQztJQUVBTCxZQUFZLENBQUMsQ0FBQztFQUNoQixDQUFDLEVBQUUsQ0FBQzdCLEtBQUssRUFBRVEsUUFBUSxDQUFDLENBQUM7RUFFckIsTUFBTThELGdCQUFnQixHQUFJQyxDQUFzQyxJQUFLO0lBQ25FLE1BQU1DLGFBQWEsR0FBR0MsS0FBSyxDQUFDQyxJQUFJLENBQUNILENBQUMsQ0FBQ0ksTUFBTSxDQUFDM0UsS0FBSyxJQUFJLEVBQUUsQ0FBQztJQUN0REMsUUFBUSxDQUFDdUUsYUFBYSxDQUFDO0lBQ3ZCbkUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0VBQ3hCLENBQUM7RUFFRCxNQUFNdUUsVUFBVSxHQUFJTCxDQUFrQixJQUFLO0lBQ3pDQSxDQUFDLENBQUNNLGNBQWMsQ0FBQyxDQUFDO0lBQ2xCTixDQUFDLENBQUNPLGVBQWUsQ0FBQyxDQUFDO0lBQ25CLE1BQU1DLFlBQVksR0FBR04sS0FBSyxDQUFDQyxJQUFJLENBQUNILENBQUMsQ0FBQ1MsWUFBWSxDQUFDaEYsS0FBSyxDQUFDO0lBQ3JEQyxRQUFRLENBQUM4RSxZQUFZLENBQUM7SUFDdEIxRSxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7RUFDeEIsQ0FBQztFQUVELE1BQU00RSxjQUFjLEdBQUlWLENBQWtCLElBQUs7SUFDN0NBLENBQUMsQ0FBQ00sY0FBYyxDQUFDLENBQUM7SUFDbEJOLENBQUMsQ0FBQ08sZUFBZSxDQUFDLENBQUM7RUFDckIsQ0FBQztFQUVELE1BQU1JLGVBQWUsR0FBSVgsQ0FBa0IsSUFBSztJQUM5Q0EsQ0FBQyxDQUFDTSxjQUFjLENBQUMsQ0FBQztJQUNsQk4sQ0FBQyxDQUFDTyxlQUFlLENBQUMsQ0FBQztFQUNyQixDQUFDO0VBRUQsTUFBTUssY0FBYyxHQUFHLE1BQU9DLFNBQWlCLElBQUs7SUFDbEQsTUFBTUMsU0FBUyxHQUFHbkYsVUFBVSxDQUFDa0YsU0FBUyxDQUFDO0lBQ3ZDLElBQUksQ0FBQ0MsU0FBUyxFQUFFOztJQUVoQjtJQUNBbEYsYUFBYSxDQUFDbUYsSUFBSSxJQUFJQSxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxLQUFLLEVBQUVoRCxDQUFDLEtBQ3RDQSxDQUFDLEtBQUs0QyxTQUFTLEdBQUc7TUFBRSxHQUFHSSxLQUFLO01BQUV2QixVQUFVLEVBQUU7SUFBSyxDQUFDLEdBQUd1QixLQUNyRCxDQUFDLENBQUM7SUFFRixNQUFNQyxrQkFBa0IsR0FBRzlDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUM7SUFDckMsTUFBTUMsUUFBUSxHQUFHekIscUJBQXFCLENBQUNzRSxHQUFHLENBQUNOLFNBQVMsQ0FBQztJQUVyRCxJQUFJO01BQ0Y7TUFDQSxNQUFNcEcsd0VBQWUsQ0FBQ3FHLFNBQVMsQ0FBQzVDLElBQUksRUFBRTtRQUFFakM7TUFBUyxDQUFDLENBQUM7TUFFbkQsTUFBTW1GLGdCQUFtQyxHQUFHTixTQUFTLENBQUMvQixVQUFVLENBQzdEc0MsTUFBTSxDQUFDakMsR0FBRyxJQUFJMEIsU0FBUyxDQUFDN0IsUUFBUSxDQUFDRyxHQUFHLENBQUMvQixFQUFFLENBQUMsQ0FBQyxDQUN6QzJELEdBQUcsQ0FBQzVCLEdBQUcsS0FBSztRQUNYa0MsV0FBVyxFQUFFbEMsR0FBRyxDQUFDL0IsRUFBRTtRQUNuQmdDLEtBQUssRUFBRXlCLFNBQVMsQ0FBQzVCLE9BQU8sQ0FBQ0UsR0FBRyxDQUFDL0IsRUFBRSxDQUFDLEVBQUVnQyxLQUFLLElBQUksS0FBSztRQUNoRGtDLFNBQVMsRUFBRVQsU0FBUyxDQUFDNUIsT0FBTyxDQUFDRSxHQUFHLENBQUMvQixFQUFFLENBQUMsRUFBRWtFO01BQ3hDLENBQUMsQ0FBQyxDQUFDO01BRUwsTUFBTTFDLE1BQU0sR0FBRyxNQUFNbkUsd0VBQWUsQ0FBQ29HLFNBQVMsQ0FBQzVDLElBQUksRUFBRWtELGdCQUFnQixFQUFFO1FBQ3JFSSxNQUFNLEVBQUU7TUFDVixDQUFDLEVBQUVWLFNBQVMsQ0FBQy9CLFVBQVUsQ0FBQzs7TUFFeEI7TUFDQSxNQUFNMEMsUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQzdDLE1BQU0sQ0FBQzhDLE9BQU8sQ0FBQztNQUM1QyxNQUFNQyxJQUFJLEdBQUcsTUFBTUgsUUFBUSxDQUFDRyxJQUFJLENBQUMsQ0FBQztNQUNsQyxNQUFNQyxHQUFHLEdBQUdDLEdBQUcsQ0FBQ0MsZUFBZSxDQUFDSCxJQUFJLENBQUM7TUFDckMsTUFBTUksYUFBYSxHQUFHNUQsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHNkMsa0JBQWtCOztNQUVyRDtNQUNBLElBQUk1QyxRQUFRLEVBQUU7UUFDWnZELCtFQUFzQixDQUFDdUQsUUFBUSxFQUFFO1VBQy9CMkQsaUJBQWlCLEVBQUViLGdCQUFnQjtVQUNuQ1ksYUFBYTtVQUNiRSxVQUFVLEVBQUVOLElBQUksQ0FBQ25EO1FBQ25CLENBQUMsQ0FBQztNQUNKOztNQUVBO01BQ0E3QyxhQUFhLENBQUNtRixJQUFJLElBQUlBLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLEtBQUssRUFBRWhELENBQUMsS0FDdENBLENBQUMsS0FBSzRDLFNBQVMsR0FBRztRQUFFLEdBQUdJLEtBQUs7UUFBRWtCLFNBQVMsRUFBRU4sR0FBRztRQUFFTyxVQUFVLEVBQUV2RCxNQUFNLENBQUM4QyxPQUFPO1FBQUVqQyxVQUFVLEVBQUU7TUFBTSxDQUFDLEdBQUd1QixLQUNsRyxDQUFDLENBQUM7SUFFSixDQUFDLENBQUMsT0FBT3RCLEtBQUssRUFBRTtNQUNkQyxPQUFPLENBQUNELEtBQUssQ0FBQyxzQkFBc0IsRUFBRUEsS0FBSyxDQUFDOztNQUU1QztNQUNBLElBQUlyQixRQUFRLEVBQUU7UUFDWnZELCtFQUFzQixDQUFDdUQsUUFBUSxFQUFFO1VBQy9CMkQsaUJBQWlCLEVBQUUsRUFBRTtVQUNyQnRDLEtBQUssRUFBRUEsS0FBSyxZQUFZRSxLQUFLLEdBQUdGLEtBQUssQ0FBQ0csT0FBTyxHQUFHO1FBQ2xELENBQUMsQ0FBQztNQUNKOztNQUVBO01BQ0F1QyxLQUFLLENBQUUsd0JBQXVCMUMsS0FBSyxZQUFZRSxLQUFLLEdBQUdGLEtBQUssQ0FBQ0csT0FBTyxHQUFHLGVBQWdCLEVBQUMsQ0FBQztNQUN6RmxFLGFBQWEsQ0FBQ21GLElBQUksSUFBSUEsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQ0MsS0FBSyxFQUFFaEQsQ0FBQyxLQUN0Q0EsQ0FBQyxLQUFLNEMsU0FBUyxHQUFHO1FBQUUsR0FBR0ksS0FBSztRQUFFdkIsVUFBVSxFQUFFO01BQU0sQ0FBQyxHQUFHdUIsS0FDdEQsQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDO0VBRUQsTUFBTXFCLGNBQWMsR0FBSXpCLFNBQWlCLElBQUs7SUFDNUMsTUFBTUMsU0FBUyxHQUFHbkYsVUFBVSxDQUFDa0YsU0FBUyxDQUFDO0lBQ3ZDLElBQUksQ0FBQ0MsU0FBUyxFQUFFcUIsU0FBUyxFQUFFO0lBRTNCLE1BQU1JLElBQUksR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsR0FBRyxDQUFDO0lBQ3hDRixJQUFJLENBQUNHLElBQUksR0FBRzVCLFNBQVMsQ0FBQ3FCLFNBQVM7SUFDL0JJLElBQUksQ0FBQ0ksUUFBUSxHQUFJLGFBQVk3QixTQUFTLENBQUM1QyxJQUFJLENBQUNKLElBQUssRUFBQztJQUNsRHlFLElBQUksQ0FBQ0ssS0FBSyxDQUFDLENBQUM7RUFDZCxDQUFDO0VBRUQsTUFBTUMsa0JBQWtCLEdBQUcsTUFBQUEsQ0FBQSxLQUFZO0lBQ3JDLE1BQU1DLGNBQWMsR0FBR25ILFVBQVUsQ0FDOUJxRixHQUFHLENBQUMsQ0FBQ0MsS0FBSyxFQUFFOEIsS0FBSyxNQUFNO01BQUU5QixLQUFLO01BQUU4QjtJQUFNLENBQUMsQ0FBQyxDQUFDLENBQ3pDMUIsTUFBTSxDQUFDLENBQUM7TUFBRUo7SUFBTSxDQUFDLEtBQUssQ0FBQ0EsS0FBSyxDQUFDa0IsU0FBUyxJQUFJLENBQUNsQixLQUFLLENBQUN0QixLQUFLLENBQUM7SUFFMUQsSUFBSW1ELGNBQWMsQ0FBQzFGLE1BQU0sS0FBSyxDQUFDLEVBQUU7O0lBRWpDO0lBQ0F4QixhQUFhLENBQUNtRixJQUFJLElBQUlBLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLEtBQUssRUFBRThCLEtBQUssS0FBSztNQUMvQyxNQUFNQyxhQUFhLEdBQUdGLGNBQWMsQ0FBQ0csSUFBSSxDQUFDLENBQUM7UUFBRUYsS0FBSyxFQUFFRztNQUFhLENBQUMsS0FBS0EsWUFBWSxLQUFLSCxLQUFLLENBQUM7TUFDOUYsT0FBT0MsYUFBYSxHQUFHO1FBQUUsR0FBRy9CLEtBQUs7UUFBRXZCLFVBQVUsRUFBRTtNQUFLLENBQUMsR0FBR3VCLEtBQUs7SUFDL0QsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJO01BQ0Y7TUFDQSxNQUFNa0MsY0FBYyxHQUFHLENBQUM7TUFDeEIsS0FBSyxJQUFJbEYsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHNkUsY0FBYyxDQUFDMUYsTUFBTSxFQUFFYSxDQUFDLElBQUlrRixjQUFjLEVBQUU7UUFDOUQsTUFBTUMsS0FBSyxHQUFHTixjQUFjLENBQUNPLEtBQUssQ0FBQ3BGLENBQUMsRUFBRUEsQ0FBQyxHQUFHa0YsY0FBYyxDQUFDO1FBRXpELE1BQU1HLFFBQVEsR0FBR0YsS0FBSyxDQUFDcEMsR0FBRyxDQUFDLE9BQU87VUFBRUMsS0FBSztVQUFFOEIsS0FBSyxFQUFFbEM7UUFBVSxDQUFDLEtBQUs7VUFDaEUsSUFBSTtZQUNGO1lBQ0EsTUFBTXBHLHdFQUFlLENBQUN3RyxLQUFLLENBQUMvQyxJQUFJLEVBQUU7Y0FBRWpDO1lBQVMsQ0FBQyxDQUFDO1lBRS9DLE1BQU1tRixnQkFBbUMsR0FBR0gsS0FBSyxDQUFDbEMsVUFBVSxDQUN6RHNDLE1BQU0sQ0FBQ2pDLEdBQUcsSUFBSTZCLEtBQUssQ0FBQ2hDLFFBQVEsQ0FBQ0csR0FBRyxDQUFDL0IsRUFBRSxDQUFDLENBQUMsQ0FDckMyRCxHQUFHLENBQUM1QixHQUFHLEtBQUs7Y0FDWGtDLFdBQVcsRUFBRWxDLEdBQUcsQ0FBQy9CLEVBQUU7Y0FDbkJnQyxLQUFLLEVBQUU0QixLQUFLLENBQUMvQixPQUFPLENBQUNFLEdBQUcsQ0FBQy9CLEVBQUUsQ0FBQyxFQUFFZ0MsS0FBSyxJQUFJLEtBQUs7Y0FDNUNrQyxTQUFTLEVBQUVOLEtBQUssQ0FBQy9CLE9BQU8sQ0FBQ0UsR0FBRyxDQUFDL0IsRUFBRSxDQUFDLEVBQUVrRTtZQUNwQyxDQUFDLENBQUMsQ0FBQztZQUVMLE1BQU0xQyxNQUFNLEdBQUcsTUFBTW5FLHdFQUFlLENBQUN1RyxLQUFLLENBQUMvQyxJQUFJLEVBQUVrRCxnQkFBZ0IsRUFBRTtjQUNqRUksTUFBTSxFQUFFO1lBQ1YsQ0FBQyxFQUFFUCxLQUFLLENBQUNsQyxVQUFVLENBQUM7O1lBRXBCO1lBQ0EsTUFBTTBDLFFBQVEsR0FBRyxNQUFNQyxLQUFLLENBQUM3QyxNQUFNLENBQUM4QyxPQUFPLENBQUM7WUFDNUMsTUFBTUMsSUFBSSxHQUFHLE1BQU1ILFFBQVEsQ0FBQ0csSUFBSSxDQUFDLENBQUM7WUFDbEMsTUFBTUMsR0FBRyxHQUFHQyxHQUFHLENBQUNDLGVBQWUsQ0FBQ0gsSUFBSSxDQUFDOztZQUVyQztZQUNBaEcsYUFBYSxDQUFDbUYsSUFBSSxJQUFJQSxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDdUMsQ0FBQyxFQUFFdEYsQ0FBQyxLQUNsQ0EsQ0FBQyxLQUFLNEMsU0FBUyxHQUFHO2NBQUUsR0FBRzBDLENBQUM7Y0FBRXBCLFNBQVMsRUFBRU4sR0FBRztjQUFFTyxVQUFVLEVBQUV2RCxNQUFNLENBQUM4QyxPQUFPO2NBQUVqQyxVQUFVLEVBQUU7WUFBTSxDQUFDLEdBQUc2RCxDQUM5RixDQUFDLENBQUM7VUFFSixDQUFDLENBQUMsT0FBTzVELEtBQUssRUFBRTtZQUNkQyxPQUFPLENBQUNELEtBQUssQ0FBRSwyQkFBMEJzQixLQUFLLENBQUMvQyxJQUFJLENBQUNKLElBQUssR0FBRSxFQUFFNkIsS0FBSyxDQUFDO1lBQ25FL0QsYUFBYSxDQUFDbUYsSUFBSSxJQUFJQSxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDdUMsQ0FBQyxFQUFFdEYsQ0FBQyxLQUNsQ0EsQ0FBQyxLQUFLNEMsU0FBUyxHQUFHO2NBQUUsR0FBRzBDLENBQUM7Y0FBRTdELFVBQVUsRUFBRSxLQUFLO2NBQUVDLEtBQUssRUFBRUEsS0FBSyxZQUFZRSxLQUFLLEdBQUdGLEtBQUssQ0FBQ0csT0FBTyxHQUFHO1lBQWdCLENBQUMsR0FBR3lELENBQ25ILENBQUMsQ0FBQztVQUNKO1FBQ0YsQ0FBQyxDQUFDO1FBRUYsTUFBTUMsT0FBTyxDQUFDQyxHQUFHLENBQUNILFFBQVEsQ0FBQztNQUM3QjtJQUNGLENBQUMsQ0FBQyxPQUFPM0QsS0FBSyxFQUFFO01BQ2RDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDLDJCQUEyQixFQUFFQSxLQUFLLENBQUM7SUFDbkQ7RUFDRixDQUFDO0VBRUQsTUFBTStELGtCQUFrQixHQUFHQSxDQUFBLEtBQU07SUFDL0IsTUFBTUMsY0FBYyxHQUFHaEksVUFBVSxDQUFDMEYsTUFBTSxDQUFDSixLQUFLLElBQUlBLEtBQUssQ0FBQ2tCLFNBQVMsQ0FBQztJQUVsRSxJQUFJd0IsY0FBYyxDQUFDdkcsTUFBTSxLQUFLLENBQUMsRUFBRTs7SUFFakM7SUFDQXVHLGNBQWMsQ0FBQ3hFLE9BQU8sQ0FBQyxDQUFDOEIsS0FBSyxFQUFFOEIsS0FBSyxLQUFLO01BQ3ZDLElBQUk5QixLQUFLLENBQUNrQixTQUFTLEVBQUU7UUFDbkJ5QixVQUFVLENBQUMsTUFBTTtVQUNmLE1BQU1yQixJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLEdBQUcsQ0FBQztVQUN4Q0YsSUFBSSxDQUFDRyxJQUFJLEdBQUd6QixLQUFLLENBQUNrQixTQUFVO1VBQzVCSSxJQUFJLENBQUNJLFFBQVEsR0FBSSxhQUFZMUIsS0FBSyxDQUFDL0MsSUFBSSxDQUFDSixJQUFLLEVBQUM7VUFDOUN5RSxJQUFJLENBQUNLLEtBQUssQ0FBQyxDQUFDO1FBQ2QsQ0FBQyxFQUFFRyxLQUFLLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztNQUNuQjtJQUNGLENBQUMsQ0FBQztFQUNKLENBQUM7O0VBRUQsTUFBTWMsZ0JBQWdCLEdBQUdsSSxVQUFVLENBQUNFLGdCQUFnQixDQUFDO0VBRXJELG9CQUNFVCx1REFBQTtJQUFLMEksU0FBUyxFQUFDLGVBQWU7SUFBQUMsUUFBQSxnQkFFNUI3SSxzREFBQTtNQUFRNEksU0FBUyxFQUFDLFFBQVE7TUFBQUMsUUFBQSxlQUN4QjNJLHVEQUFBO1FBQUswSSxTQUFTLEVBQUMsZ0JBQWdCO1FBQUFDLFFBQUEsZ0JBQzdCN0ksc0RBQUE7VUFBR3dILElBQUksRUFBQyxHQUFHO1VBQUNvQixTQUFTLEVBQUMsTUFBTTtVQUFBQyxRQUFBLEVBQUM7UUFFN0IsQ0FBRyxDQUFDLGVBQ0ozSSx1REFBQTtVQUFLaUUsS0FBSyxFQUFFO1lBQUUyRSxPQUFPLEVBQUUsTUFBTTtZQUFFQyxVQUFVLEVBQUUsUUFBUTtZQUFFQyxHQUFHLEVBQUU7VUFBa0IsQ0FBRTtVQUFBSCxRQUFBLEdBQzNFaEksT0FBTyxDQUFDcUIsTUFBTSxHQUFHLENBQUMsaUJBQ2pCaEMsdURBQUE7WUFBS2lFLEtBQUssRUFBRTtjQUFFMkUsT0FBTyxFQUFFLE1BQU07Y0FBRUcsYUFBYSxFQUFFLFFBQVE7Y0FBRUQsR0FBRyxFQUFFO1lBQWtCLENBQUU7WUFBQUgsUUFBQSxnQkFDL0U3SSxzREFBQTtjQUNFa0osS0FBSyxFQUFFbkksUUFBUztjQUNoQm9JLFFBQVEsRUFBR3JFLENBQUMsSUFBSzlELFdBQVcsQ0FBQzhELENBQUMsQ0FBQ0ksTUFBTSxDQUFDZ0UsS0FBSyxDQUFFO2NBQzdDTixTQUFTLEVBQUMsYUFBYTtjQUN2QnpFLEtBQUssRUFBRTtnQkFBRWlGLFFBQVEsRUFBRTtjQUFRLENBQUU7Y0FBQVAsUUFBQSxFQUU1QmhJLE9BQU8sQ0FBQ2lGLEdBQUcsQ0FBQ3RELENBQUMsaUJBQ1p0Qyx1REFBQTtnQkFBbUJnSixLQUFLLEVBQUUxRyxDQUFDLENBQUNMLEVBQUc7Z0JBQUEwRyxRQUFBLEdBQzVCckcsQ0FBQyxDQUFDSSxJQUFJLEVBQUMsR0FBQyxFQUFDSixDQUFDLENBQUM2RyxNQUFNLElBQUk3RyxDQUFDLENBQUM2RyxNQUFNLEtBQUssU0FBUyxHQUFJLElBQUc3RyxDQUFDLENBQUM2RyxNQUFPLEdBQUUsR0FBRyxFQUFFO2NBQUEsR0FEeEQ3RyxDQUFDLENBQUNMLEVBRVAsQ0FDVDtZQUFDLENBQ0ksQ0FBQyxFQUNSLENBQUMsTUFBTTtjQUNOLE1BQU1HLGFBQWEsR0FBR3pCLE9BQU8sQ0FBQzBCLElBQUksQ0FBQ0MsQ0FBQyxJQUFJQSxDQUFDLENBQUNMLEVBQUUsS0FBS3BCLFFBQVEsQ0FBQztjQUMxRCxPQUFPdUIsYUFBYSxFQUFFZ0gsV0FBVyxnQkFDL0J0SixzREFBQTtnQkFBS21FLEtBQUssRUFBRTtrQkFDVm9GLFFBQVEsRUFBRSxxQkFBcUI7a0JBQy9CQyxLQUFLLEVBQUUsdUJBQXVCO2tCQUM5QkMsUUFBUSxFQUFFLE9BQU87a0JBQ2pCQyxVQUFVLEVBQUU7Z0JBQ2QsQ0FBRTtnQkFBQWIsUUFBQSxFQUNDdkcsYUFBYSxDQUFDZ0g7Y0FBVyxDQUN2QixDQUFDLEdBQ0osSUFBSTtZQUNWLENBQUMsRUFBRSxDQUFDO1VBQUEsQ0FDRCxDQUNOLGVBQ0R0SixzREFBQTtZQUNFMkosT0FBTyxFQUFFQSxDQUFBLEtBQU12SSxjQUFjLENBQUMsQ0FBQ0QsV0FBVyxDQUFFO1lBQzVDeUgsU0FBUyxFQUFHLE9BQU16SCxXQUFXLEdBQUcsZUFBZSxHQUFHLGFBQWMsU0FBUztZQUFBMEgsUUFBQSxFQUV4RTFILFdBQVcsR0FBRyxnQkFBZ0IsR0FBRztVQUFlLENBQzNDLENBQUMsRUFDUkEsV0FBVyxpQkFDVmpCLHVEQUFBLENBQUFFLHVEQUFBO1lBQUF5SSxRQUFBLGdCQUNFN0ksc0RBQUE7Y0FDRTJKLE9BQU8sRUFBRUEsQ0FBQSxLQUFNckksbUJBQW1CLENBQUMsSUFBSSxDQUFFO2NBQ3pDc0gsU0FBUyxFQUFDLHdCQUF3QjtjQUFBQyxRQUFBLEVBQ25DO1lBRUQsQ0FBUSxDQUFDLGVBQ1Q3SSxzREFBQTtjQUNFMkosT0FBTyxFQUFFQSxDQUFBLEtBQU1uSSx1QkFBdUIsQ0FBQyxJQUFJLENBQUU7Y0FDN0NvSCxTQUFTLEVBQUMsMEJBQTBCO2NBQUFDLFFBQUEsRUFDckM7WUFFRCxDQUFRLENBQUM7VUFBQSxDQUNULENBQ0g7UUFBQSxDQUNFLENBQUM7TUFBQSxDQUNIO0lBQUMsQ0FDQSxDQUFDLGVBR1QzSSx1REFBQTtNQUFLMEksU0FBUyxFQUFDLGNBQWM7TUFBQUMsUUFBQSxnQkFFM0IzSSx1REFBQTtRQUFLMEksU0FBUyxFQUFDLE1BQU07UUFBQ3pFLEtBQUssRUFBRTtVQUFFeUYsWUFBWSxFQUFFO1FBQWtCLENBQUU7UUFBQWYsUUFBQSxnQkFDL0QzSSx1REFBQTtVQUFLMEksU0FBUyxFQUFDLGFBQWE7VUFBQUMsUUFBQSxnQkFDMUI3SSxzREFBQTtZQUFJNEksU0FBUyxFQUFDLFlBQVk7WUFBQUMsUUFBQSxFQUFDO1VBQVksQ0FBSSxDQUFDLGVBQzVDN0ksc0RBQUE7WUFBRzRJLFNBQVMsRUFBQyxlQUFlO1lBQUFDLFFBQUEsRUFBQztVQUEwQyxDQUFHLENBQUM7UUFBQSxDQUN4RSxDQUFDLGVBQ04zSSx1REFBQTtVQUFLMEksU0FBUyxFQUFDLFdBQVc7VUFBQUMsUUFBQSxnQkFDeEIzSSx1REFBQTtZQUNFMEksU0FBUyxFQUFDLGtCQUFrQjtZQUM1QmlCLE1BQU0sRUFBRTFFLFVBQVc7WUFDbkIyRSxVQUFVLEVBQUV0RSxjQUFlO1lBQzNCdUUsV0FBVyxFQUFFdEUsZUFBZ0I7WUFDN0JrRSxPQUFPLEVBQUVBLENBQUEsS0FBTXJDLFFBQVEsQ0FBQzBDLGNBQWMsQ0FBQyxZQUFZLENBQUMsRUFBRXRDLEtBQUssQ0FBQyxDQUFFO1lBQUFtQixRQUFBLGdCQUU5RDdJLHNEQUFBO2NBQUs0SSxTQUFTLEVBQUMsa0JBQWtCO2NBQUFDLFFBQUEsRUFBQztZQUFFLENBQUssQ0FBQyxlQUMxQzdJLHNEQUFBO2NBQUs0SSxTQUFTLEVBQUMsa0JBQWtCO2NBQUFDLFFBQUEsRUFBQztZQUVsQyxDQUFLLENBQUMsZUFDTjdJLHNEQUFBO2NBQUs0SSxTQUFTLEVBQUMscUJBQXFCO2NBQUFDLFFBQUEsRUFBQztZQUVyQyxDQUFLLENBQUMsZUFDTjdJLHNEQUFBO2NBQ0VtQyxFQUFFLEVBQUMsWUFBWTtjQUNmc0IsSUFBSSxFQUFDLE1BQU07Y0FDWHdHLE1BQU0sRUFBQyx1REFBdUQ7Y0FDOURDLFFBQVE7Y0FDUmYsUUFBUSxFQUFFdEUsZ0JBQWlCO2NBQzNCVixLQUFLLEVBQUU7Z0JBQUUyRSxPQUFPLEVBQUU7Y0FBTztZQUFFLENBQzVCLENBQUM7VUFBQSxDQUNDLENBQUMsRUFFTDdILE9BQU8saUJBQ05mLHVEQUFBO1lBQUswSSxTQUFTLEVBQUMsY0FBYztZQUFDekUsS0FBSyxFQUFFO2NBQUVnRyxTQUFTLEVBQUU7WUFBa0IsQ0FBRTtZQUFBdEIsUUFBQSxnQkFDcEU3SSxzREFBQTtjQUFLNEksU0FBUyxFQUFDO1lBQWlCLENBQU0sQ0FBQyx1QkFFekM7VUFBQSxDQUFLLENBQ047UUFBQSxDQUNFLENBQUM7TUFBQSxDQUNILENBQUMsRUFHTG5JLFVBQVUsQ0FBQ3lCLE1BQU0sR0FBRyxDQUFDLGlCQUNwQmhDLHVEQUFBO1FBQUtpRSxLQUFLLEVBQUU7VUFBRTJFLE9BQU8sRUFBRSxNQUFNO1VBQUVFLEdBQUcsRUFBRTtRQUFrQixDQUFFO1FBQUFILFFBQUEsZ0JBRXREM0ksdURBQUE7VUFBSzBJLFNBQVMsRUFBQyxTQUFTO1VBQUN6RSxLQUFLLEVBQUU7WUFBRWlGLFFBQVEsRUFBRTtVQUFRLENBQUU7VUFBQVAsUUFBQSxnQkFDcEQzSSx1REFBQTtZQUFJMEksU0FBUyxFQUFDLGVBQWU7WUFBQUMsUUFBQSxHQUFDLFNBQU8sRUFBQ3BJLFVBQVUsQ0FBQ3lCLE1BQU0sRUFBQyxHQUFDO1VBQUEsQ0FBSSxDQUFDLEVBRzdEekIsVUFBVSxDQUFDeUIsTUFBTSxHQUFHLENBQUMsaUJBQ3BCaEMsdURBQUE7WUFBS2lFLEtBQUssRUFBRTtjQUNWaUcsT0FBTyxFQUFFLGlCQUFpQjtjQUMxQlIsWUFBWSxFQUFFLGlCQUFpQjtjQUMvQlMsTUFBTSxFQUFFLGdDQUFnQztjQUN4Q0MsWUFBWSxFQUFFLGtCQUFrQjtjQUNoQ0MsVUFBVSxFQUFFO1lBQ2QsQ0FBRTtZQUFBMUIsUUFBQSxnQkFDQTdJLHNEQUFBO2NBQUltRSxLQUFLLEVBQUU7Z0JBQUVxRyxNQUFNLEVBQUUsdUJBQXVCO2dCQUFFakIsUUFBUSxFQUFFLHFCQUFxQjtnQkFBRWtCLFVBQVUsRUFBRTtjQUFNLENBQUU7Y0FBQTVCLFFBQUEsRUFBQztZQUVwRyxDQUFJLENBQUMsZUFDTDNJLHVEQUFBO2NBQUtpRSxLQUFLLEVBQUU7Z0JBQUUyRSxPQUFPLEVBQUUsTUFBTTtnQkFBRUcsYUFBYSxFQUFFLFFBQVE7Z0JBQUVELEdBQUcsRUFBRTtjQUFrQixDQUFFO2NBQUFILFFBQUEsZ0JBQy9FN0ksc0RBQUE7Z0JBQ0UySixPQUFPLEVBQUVoQyxrQkFBbUI7Z0JBQzVCaUIsU0FBUyxFQUFDLHdCQUF3QjtnQkFDbEM4QixRQUFRLEVBQUVqSyxVQUFVLENBQUNzSCxJQUFJLENBQUNNLENBQUMsSUFBSUEsQ0FBQyxDQUFDN0QsVUFBVSxDQUFDLElBQUkvRCxVQUFVLENBQUNrSyxLQUFLLENBQUN0QyxDQUFDLElBQUlBLENBQUMsQ0FBQ3BCLFNBQVMsQ0FBRTtnQkFDbkY5QyxLQUFLLEVBQUU7a0JBQUV5RyxLQUFLLEVBQUU7Z0JBQU8sQ0FBRTtnQkFBQS9CLFFBQUEsRUFFeEJwSSxVQUFVLENBQUNzSCxJQUFJLENBQUNNLENBQUMsSUFBSUEsQ0FBQyxDQUFDN0QsVUFBVSxDQUFDLEdBQy9CLGVBQWUsR0FDZi9ELFVBQVUsQ0FBQ2tLLEtBQUssQ0FBQ3RDLENBQUMsSUFBSUEsQ0FBQyxDQUFDcEIsU0FBUyxDQUFDLEdBQ2hDLGNBQWMsR0FDYixpQkFBZ0J4RyxVQUFVLENBQUMwRixNQUFNLENBQUNrQyxDQUFDLElBQUksQ0FBQ0EsQ0FBQyxDQUFDcEIsU0FBUyxJQUFJLENBQUNvQixDQUFDLENBQUM1RCxLQUFLLENBQUMsQ0FBQ3ZDLE1BQU87Y0FBRSxDQUUzRSxDQUFDLEVBQ1J6QixVQUFVLENBQUNzSCxJQUFJLENBQUNNLENBQUMsSUFBSUEsQ0FBQyxDQUFDcEIsU0FBUyxDQUFDLGlCQUNoQy9HLHVEQUFBO2dCQUNFeUosT0FBTyxFQUFFbkIsa0JBQW1CO2dCQUM1QkksU0FBUyxFQUFDLDBCQUEwQjtnQkFDcEN6RSxLQUFLLEVBQUU7a0JBQUV5RyxLQUFLLEVBQUU7Z0JBQU8sQ0FBRTtnQkFBQS9CLFFBQUEsR0FDMUIsNkJBQ2tCLEVBQUNwSSxVQUFVLENBQUMwRixNQUFNLENBQUNrQyxDQUFDLElBQUlBLENBQUMsQ0FBQ3BCLFNBQVMsQ0FBQyxDQUFDL0UsTUFBTSxFQUFDLEdBQy9EO2NBQUEsQ0FBUSxDQUNUO1lBQUEsQ0FDRSxDQUFDLGVBQ05sQyxzREFBQTtjQUFLbUUsS0FBSyxFQUFFO2dCQUFFZ0csU0FBUyxFQUFFLGlCQUFpQjtnQkFBRVosUUFBUSxFQUFFLHFCQUFxQjtnQkFBRUMsS0FBSyxFQUFFO2NBQXdCLENBQUU7Y0FBQVgsUUFBQSxFQUFDO1lBRS9HLENBQUssQ0FBQztVQUFBLENBQ0gsQ0FDTixlQUNEN0ksc0RBQUE7WUFBS21FLEtBQUssRUFBRTtjQUFFMkUsT0FBTyxFQUFFLE1BQU07Y0FBRUcsYUFBYSxFQUFFLFFBQVE7Y0FBRUQsR0FBRyxFQUFFO1lBQWtCLENBQUU7WUFBQUgsUUFBQSxFQUM5RXBJLFVBQVUsQ0FBQ3FGLEdBQUcsQ0FBQyxDQUFDQyxLQUFLLEVBQUU4QixLQUFLLGtCQUMzQjNILHVEQUFBO2NBRUV5SixPQUFPLEVBQUVBLENBQUEsS0FBTS9JLG1CQUFtQixDQUFDaUgsS0FBSyxDQUFFO2NBQzFDMUQsS0FBSyxFQUFFO2dCQUNMaUcsT0FBTyxFQUFFLGlCQUFpQjtnQkFDMUJDLE1BQU0sRUFBRyxhQUFZeEMsS0FBSyxLQUFLbEgsZ0JBQWdCLEdBQUcsc0JBQXNCLEdBQUcscUJBQXNCLEVBQUM7Z0JBQ2xHMkosWUFBWSxFQUFFLGtCQUFrQjtnQkFDaENPLE1BQU0sRUFBRSxTQUFTO2dCQUNqQk4sVUFBVSxFQUFFMUMsS0FBSyxLQUFLbEgsZ0JBQWdCLEdBQUcscUJBQXFCLEdBQUcsbUJBQW1CO2dCQUNwRm1LLFVBQVUsRUFBRTtjQUNkLENBQUU7Y0FBQWpDLFFBQUEsZ0JBRUY3SSxzREFBQTtnQkFBS21FLEtBQUssRUFBRTtrQkFBRXNHLFVBQVUsRUFBRSxLQUFLO2tCQUFFbEIsUUFBUSxFQUFFLHFCQUFxQjtrQkFBRUssWUFBWSxFQUFFO2dCQUFrQixDQUFFO2dCQUFBZixRQUFBLEVBQ2pHOUMsS0FBSyxDQUFDL0MsSUFBSSxDQUFDSjtjQUFJLENBQ2IsQ0FBQyxlQUNONUMsc0RBQUE7Z0JBQUttRSxLQUFLLEVBQUU7a0JBQUVvRixRQUFRLEVBQUUscUJBQXFCO2tCQUFFQyxLQUFLLEVBQUV6RCxLQUFLLENBQUN0QixLQUFLLEdBQUcsb0JBQW9CLEdBQUc7Z0JBQXdCLENBQUU7Z0JBQUFvRSxRQUFBLEVBQ2xIOUMsS0FBSyxDQUFDdEIsS0FBSyxHQUFJLFVBQVNzQixLQUFLLENBQUN0QixLQUFNLEVBQUMsR0FBSSxHQUFFc0IsS0FBSyxDQUFDbEMsVUFBVSxDQUFDM0IsTUFBTztjQUFrQixDQUNuRixDQUFDLGVBQ05oQyx1REFBQTtnQkFBS2lFLEtBQUssRUFBRTtrQkFBRWdHLFNBQVMsRUFBRSxpQkFBaUI7a0JBQUVyQixPQUFPLEVBQUUsTUFBTTtrQkFBRUUsR0FBRyxFQUFFO2dCQUFrQixDQUFFO2dCQUFBSCxRQUFBLGdCQUNwRjdJLHNEQUFBO2tCQUNFMkosT0FBTyxFQUFHN0UsQ0FBQyxJQUFLO29CQUNkQSxDQUFDLENBQUNPLGVBQWUsQ0FBQyxDQUFDO29CQUNuQkssY0FBYyxDQUFDbUMsS0FBSyxDQUFDO2tCQUN2QixDQUFFO2tCQUNGZSxTQUFTLEVBQUMsd0JBQXdCO2tCQUNsQzhCLFFBQVEsRUFBRTNFLEtBQUssQ0FBQ3ZCLFVBQVUsSUFBSSxDQUFDLENBQUN1QixLQUFLLENBQUN0QixLQUFNO2tCQUM1Q04sS0FBSyxFQUFFO29CQUFFNEcsSUFBSSxFQUFFO2tCQUFFLENBQUU7a0JBQUFsQyxRQUFBLEVBRWxCOUMsS0FBSyxDQUFDdkIsVUFBVSxHQUFHLGVBQWUsR0FBRztnQkFBVSxDQUMxQyxDQUFDLEVBQ1J1QixLQUFLLENBQUNrQixTQUFTLGlCQUNkakgsc0RBQUE7a0JBQ0UySixPQUFPLEVBQUc3RSxDQUFDLElBQUs7b0JBQ2RBLENBQUMsQ0FBQ08sZUFBZSxDQUFDLENBQUM7b0JBQ25CK0IsY0FBYyxDQUFDUyxLQUFLLENBQUM7a0JBQ3ZCLENBQUU7a0JBQ0ZlLFNBQVMsRUFBQywwQkFBMEI7a0JBQUFDLFFBQUEsRUFDckM7Z0JBRUQsQ0FBUSxDQUNUO2NBQUEsQ0FDRSxDQUFDO1lBQUEsR0F4Q0RoQixLQXlDRixDQUNOO1VBQUMsQ0FDQyxDQUFDO1FBQUEsQ0FDSCxDQUFDLGVBR043SCxzREFBQTtVQUFLbUUsS0FBSyxFQUFFO1lBQUU0RyxJQUFJLEVBQUU7VUFBRSxDQUFFO1VBQUFsQyxRQUFBLEVBQ3JCRixnQkFBZ0IsaUJBQ2Z6SSx1REFBQTtZQUFLMEksU0FBUyxFQUFDLE1BQU07WUFBQUMsUUFBQSxnQkFDbkIzSSx1REFBQTtjQUFLMEksU0FBUyxFQUFDLGFBQWE7Y0FBQUMsUUFBQSxnQkFDMUI3SSxzREFBQTtnQkFBSTRJLFNBQVMsRUFBQyxZQUFZO2dCQUFBQyxRQUFBLEVBQUVGLGdCQUFnQixDQUFDM0YsSUFBSSxDQUFDSjtjQUFJLENBQUssQ0FBQyxlQUM1RDVDLHNEQUFBO2dCQUFHNEksU0FBUyxFQUFDLGVBQWU7Z0JBQUFDLFFBQUEsRUFDekJGLGdCQUFnQixDQUFDbEUsS0FBSyxHQUFHLG1CQUFtQixHQUFJLFNBQVFrRSxnQkFBZ0IsQ0FBQzlFLFVBQVUsQ0FBQzNCLE1BQU87Y0FBaUIsQ0FDNUcsQ0FBQztZQUFBLENBQ0QsQ0FBQyxlQUNObEMsc0RBQUE7Y0FBSzRJLFNBQVMsRUFBQyxXQUFXO2NBQUFDLFFBQUEsRUFDdkJGLGdCQUFnQixDQUFDbEUsS0FBSyxnQkFDckJ6RSxzREFBQTtnQkFBSzRJLFNBQVMsRUFBQyxtQkFBbUI7Z0JBQUFDLFFBQUEsZUFDaEMzSSx1REFBQTtrQkFBQTJJLFFBQUEsZ0JBQ0U3SSxzREFBQTtvQkFBQTZJLFFBQUEsRUFBUTtrQkFBZ0IsQ0FBUSxDQUFDLGVBQ2pDM0ksdURBQUE7b0JBQUdpRSxLQUFLLEVBQUU7c0JBQUVxRyxNQUFNLEVBQUUsR0FBRztzQkFBRUwsU0FBUyxFQUFFO29CQUFrQixDQUFFO29CQUFBdEIsUUFBQSxHQUFDLCtCQUMxQixFQUFDRixnQkFBZ0IsQ0FBQ2xFLEtBQUs7a0JBQUEsQ0FDbkQsQ0FBQztnQkFBQSxDQUNEO2NBQUMsQ0FDSCxDQUFDLEdBQ0prRSxnQkFBZ0IsQ0FBQzlFLFVBQVUsQ0FBQzNCLE1BQU0sR0FBRyxDQUFDLGdCQUN4Q2hDLHVEQUFBO2dCQUFBMkksUUFBQSxnQkFDRTdJLHNEQUFBO2tCQUFJbUUsS0FBSyxFQUFFO29CQUFFeUYsWUFBWSxFQUFFLGlCQUFpQjtvQkFBRUwsUUFBUSxFQUFFO2tCQUFzQixDQUFFO2tCQUFBVixRQUFBLEVBQUM7Z0JBRWpGLENBQUksQ0FBQyxlQUNMN0ksc0RBQUE7a0JBQUttRSxLQUFLLEVBQUU7b0JBQUUyRSxPQUFPLEVBQUUsTUFBTTtvQkFBRUcsYUFBYSxFQUFFLFFBQVE7b0JBQUVELEdBQUcsRUFBRTtrQkFBa0IsQ0FBRTtrQkFBQUgsUUFBQSxFQUM5RUYsZ0JBQWdCLENBQUM5RSxVQUFVLENBQUNpQyxHQUFHLENBQUNrRixTQUFTLGlCQUN4QzlLLHVEQUFBO29CQUVFaUUsS0FBSyxFQUFFO3NCQUNMaUcsT0FBTyxFQUFFLGlCQUFpQjtzQkFDMUJDLE1BQU0sRUFBRSwrQkFBK0I7c0JBQ3ZDQyxZQUFZLEVBQUUsa0JBQWtCO3NCQUNoQ0MsVUFBVSxFQUFFLHFCQUFxQjtzQkFDakN6QixPQUFPLEVBQUUsTUFBTTtzQkFDZkMsVUFBVSxFQUFFLFFBQVE7c0JBQ3BCa0MsY0FBYyxFQUFFO29CQUNsQixDQUFFO29CQUFBcEMsUUFBQSxnQkFFRjNJLHVEQUFBO3NCQUFLaUUsS0FBSyxFQUFFO3dCQUFFMkUsT0FBTyxFQUFFLE1BQU07d0JBQUVDLFVBQVUsRUFBRSxRQUFRO3dCQUFFQyxHQUFHLEVBQUU7c0JBQWtCLENBQUU7c0JBQUFILFFBQUEsZ0JBQzVFN0ksc0RBQUE7d0JBQ0V5RCxJQUFJLEVBQUMsVUFBVTt3QkFDZnlILE9BQU8sRUFBRXZDLGdCQUFnQixDQUFDNUUsUUFBUSxDQUFDaUgsU0FBUyxDQUFDN0ksRUFBRSxDQUFDLElBQUksS0FBTTt3QkFDMURnSCxRQUFRLEVBQUdyRSxDQUFDLElBQUs7MEJBQ2ZwRSxhQUFhLENBQUNtRixJQUFJLElBQUlBLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLEtBQUssRUFBRWhELENBQUMsS0FDdENBLENBQUMsS0FBS3BDLGdCQUFnQixHQUFHOzRCQUN2QixHQUFHb0YsS0FBSzs0QkFDUmhDLFFBQVEsRUFBRTs4QkFDUixHQUFHZ0MsS0FBSyxDQUFDaEMsUUFBUTs4QkFDakIsQ0FBQ2lILFNBQVMsQ0FBQzdJLEVBQUUsR0FBRzJDLENBQUMsQ0FBQ0ksTUFBTSxDQUFDZ0c7NEJBQzNCOzBCQUNGLENBQUMsR0FBR25GLEtBQ04sQ0FBQyxDQUFDO3dCQUNKO3NCQUFFLENBQ0gsQ0FBQyxlQUNGN0YsdURBQUE7d0JBQUEySSxRQUFBLGdCQUNFM0ksdURBQUE7MEJBQUtpRSxLQUFLLEVBQUU7NEJBQUVzRyxVQUFVLEVBQUUsS0FBSzs0QkFBRWxCLFFBQVEsRUFBRTswQkFBc0IsQ0FBRTswQkFBQVYsUUFBQSxHQUNoRW1DLFNBQVMsQ0FBQ0csSUFBSSxFQUFDLElBQUUsRUFBQ0gsU0FBUyxDQUFDSSxPQUFPLElBQUksS0FBSzt3QkFBQSxDQUMxQyxDQUFDLGVBQ05sTCx1REFBQTswQkFBS2lFLEtBQUssRUFBRTs0QkFBRW9GLFFBQVEsRUFBRSxxQkFBcUI7NEJBQUVDLEtBQUssRUFBRTswQkFBd0IsQ0FBRTswQkFBQVgsUUFBQSxHQUFDLGNBQ25FLEVBQUN3QyxJQUFJLENBQUNDLEtBQUssQ0FBQ04sU0FBUyxDQUFDTyxVQUFVLEdBQUcsR0FBRyxDQUFDLEVBQUMsR0FDdEQ7d0JBQUEsQ0FBSyxDQUFDO3NCQUFBLENBQ0gsQ0FBQztvQkFBQSxDQUNILENBQUMsZUFDTnJMLHVEQUFBO3NCQUNFZ0osS0FBSyxFQUFFUCxnQkFBZ0IsQ0FBQzNFLE9BQU8sQ0FBQ2dILFNBQVMsQ0FBQzdJLEVBQUUsQ0FBQyxFQUFFZ0MsS0FBSyxJQUFJLEtBQU07c0JBQzlEZ0YsUUFBUSxFQUFHckUsQ0FBQyxJQUFLO3dCQUNmcEUsYUFBYSxDQUFDbUYsSUFBSSxJQUFJQSxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxLQUFLLEVBQUVoRCxDQUFDLEtBQ3RDQSxDQUFDLEtBQUtwQyxnQkFBZ0IsR0FBRzswQkFDdkIsR0FBR29GLEtBQUs7MEJBQ1IvQixPQUFPLEVBQUU7NEJBQ1AsR0FBRytCLEtBQUssQ0FBQy9CLE9BQU87NEJBQ2hCLENBQUNnSCxTQUFTLENBQUM3SSxFQUFFLEdBQUc7OEJBQ2QsR0FBRzRELEtBQUssQ0FBQy9CLE9BQU8sQ0FBQ2dILFNBQVMsQ0FBQzdJLEVBQUUsQ0FBQzs4QkFDOUJnQyxLQUFLLEVBQUVXLENBQUMsQ0FBQ0ksTUFBTSxDQUFDZ0U7NEJBQ2xCOzBCQUNGO3dCQUNGLENBQUMsR0FBR25ELEtBQ04sQ0FBQyxDQUFDO3NCQUNKLENBQUU7c0JBQ0Y2QyxTQUFTLEVBQUMsYUFBYTtzQkFDdkJ6RSxLQUFLLEVBQUU7d0JBQUVpRixRQUFRLEVBQUU7c0JBQVEsQ0FBRTtzQkFBQVAsUUFBQSxnQkFFN0I3SSxzREFBQTt3QkFBUWtKLEtBQUssRUFBQyxLQUFLO3dCQUFBTCxRQUFBLEVBQUM7c0JBQVMsQ0FBUSxDQUFDLGVBQ3RDN0ksc0RBQUE7d0JBQVFrSixLQUFLLEVBQUMsTUFBTTt3QkFBQUwsUUFBQSxFQUFDO3NCQUFJLENBQVEsQ0FBQyxlQUNsQzdJLHNEQUFBO3dCQUFRa0osS0FBSyxFQUFDLFVBQVU7d0JBQUFMLFFBQUEsRUFBQztzQkFBUSxDQUFRLENBQUMsZUFDMUM3SSxzREFBQTt3QkFBUWtKLEtBQUssRUFBQyxPQUFPO3dCQUFBTCxRQUFBLEVBQUM7c0JBQUssQ0FBUSxDQUFDO29CQUFBLENBQzlCLENBQUM7a0JBQUEsR0EzREptQyxTQUFTLENBQUM3SSxFQTREWixDQUNOO2dCQUFDLENBQ0MsQ0FBQyxlQUVOakMsdURBQUE7a0JBQUswSSxTQUFTLEVBQUMsYUFBYTtrQkFBQ3pFLEtBQUssRUFBRTtvQkFBRWdHLFNBQVMsRUFBRTtrQkFBa0IsQ0FBRTtrQkFBQXRCLFFBQUEsZ0JBQ25FN0ksc0RBQUE7b0JBQ0UySixPQUFPLEVBQUVBLENBQUEsS0FBTWpFLGNBQWMsQ0FBQy9FLGdCQUFnQixDQUFFO29CQUNoRGlJLFNBQVMsRUFBQyx3QkFBd0I7b0JBQ2xDOEIsUUFBUSxFQUFFL0IsZ0JBQWdCLENBQUNuRSxVQUFXO29CQUFBcUUsUUFBQSxFQUVyQ0YsZ0JBQWdCLENBQUNuRSxVQUFVLGdCQUMxQnRFLHVEQUFBLENBQUFFLHVEQUFBO3NCQUFBeUksUUFBQSxnQkFDRTdJLHNEQUFBO3dCQUFLNEksU0FBUyxFQUFDLGlCQUFpQjt3QkFBQ3pFLEtBQUssRUFBRTswQkFBRXlHLEtBQUssRUFBRSxNQUFNOzBCQUFFWSxNQUFNLEVBQUU7d0JBQU87c0JBQUUsQ0FBTSxDQUFDLGlCQUVuRjtvQkFBQSxDQUFFLENBQUMsZ0JBRUh4TCxzREFBQSxDQUFBSSx1REFBQTtzQkFBQXlJLFFBQUEsRUFBRTtvQkFBb0IsQ0FBRTtrQkFDekIsQ0FDSyxDQUFDLEVBQ1JGLGdCQUFnQixDQUFDMUIsU0FBUyxpQkFDekJqSCxzREFBQTtvQkFDRTJKLE9BQU8sRUFBRUEsQ0FBQSxLQUFNdkMsY0FBYyxDQUFDekcsZ0JBQWdCLENBQUU7b0JBQ2hEaUksU0FBUyxFQUFDLDBCQUEwQjtvQkFBQUMsUUFBQSxFQUNyQztrQkFFRCxDQUFRLENBQ1Q7Z0JBQUEsQ0FDRSxDQUFDLEVBR0xGLGdCQUFnQixDQUFDekIsVUFBVSxpQkFDMUJoSCx1REFBQTtrQkFBS2lFLEtBQUssRUFBRTtvQkFBRWdHLFNBQVMsRUFBRSxpQkFBaUI7b0JBQUVDLE9BQU8sRUFBRSxpQkFBaUI7b0JBQUVHLFVBQVUsRUFBRSxxQkFBcUI7b0JBQUVELFlBQVksRUFBRSxrQkFBa0I7b0JBQUVELE1BQU0sRUFBRTtrQkFBZ0MsQ0FBRTtrQkFBQXhCLFFBQUEsZ0JBQ3JMN0ksc0RBQUE7b0JBQUltRSxLQUFLLEVBQUU7c0JBQUV5RixZQUFZLEVBQUUsaUJBQWlCO3NCQUFFTCxRQUFRLEVBQUUscUJBQXFCO3NCQUFFQyxLQUFLLEVBQUU7b0JBQXVCLENBQUU7b0JBQUFYLFFBQUEsRUFBQztrQkFFaEgsQ0FBSSxDQUFDLGVBQ0w3SSxzREFBQTtvQkFBS21FLEtBQUssRUFBRTtzQkFBRTJFLE9BQU8sRUFBRSxNQUFNO3NCQUFFbUMsY0FBYyxFQUFFLFFBQVE7c0JBQUVsQyxVQUFVLEVBQUUsUUFBUTtzQkFBRXFCLE9BQU8sRUFBRSxpQkFBaUI7c0JBQUVHLFVBQVUsRUFBRSxtQkFBbUI7c0JBQUVELFlBQVksRUFBRSxrQkFBa0I7c0JBQUVELE1BQU0sRUFBRTtvQkFBZ0MsQ0FBRTtvQkFBQXhCLFFBQUEsRUFDck5GLGdCQUFnQixDQUFDM0YsSUFBSSxDQUFDUyxJQUFJLENBQUNnSSxVQUFVLENBQUMsUUFBUSxDQUFDLGdCQUM5Q3pMLHNEQUFBO3NCQUNFMEwsR0FBRyxFQUFFL0MsZ0JBQWdCLENBQUN6QixVQUFXO3NCQUNqQ3lFLEdBQUcsRUFBQyxtQkFBbUI7c0JBQ3ZCeEgsS0FBSyxFQUFFO3dCQUNMc0YsUUFBUSxFQUFFLE1BQU07d0JBQ2hCbUMsU0FBUyxFQUFFLE9BQU87d0JBQ2xCdEIsWUFBWSxFQUFFLGtCQUFrQjt3QkFDaEN1QixTQUFTLEVBQUU7c0JBQ2I7b0JBQUUsQ0FDSCxDQUFDLGdCQUVGM0wsdURBQUE7c0JBQUtpRSxLQUFLLEVBQUU7d0JBQUUySCxTQUFTLEVBQUUsUUFBUTt3QkFBRTFCLE9BQU8sRUFBRSxpQkFBaUI7d0JBQUVaLEtBQUssRUFBRTtzQkFBd0IsQ0FBRTtzQkFBQVgsUUFBQSxnQkFDOUY3SSxzREFBQTt3QkFBS21FLEtBQUssRUFBRTswQkFBRW9GLFFBQVEsRUFBRSxzQkFBc0I7MEJBQUVLLFlBQVksRUFBRTt3QkFBa0IsQ0FBRTt3QkFBQWYsUUFBQSxFQUFDO3NCQUFFLENBQUssQ0FBQyxlQUMzRjdJLHNEQUFBO3dCQUFBNkksUUFBQSxFQUFHO3NCQUEwQixDQUFHLENBQUMsZUFDakM3SSxzREFBQTt3QkFBR21FLEtBQUssRUFBRTswQkFBRW9GLFFBQVEsRUFBRTt3QkFBc0IsQ0FBRTt3QkFBQVYsUUFBQSxFQUFDO3NCQUFxQyxDQUFHLENBQUM7b0JBQUEsQ0FDckY7a0JBQ04sQ0FDRSxDQUFDO2dCQUFBLENBQ0gsQ0FDTjtjQUFBLENBQ0UsQ0FBQyxnQkFFTjdJLHNEQUFBO2dCQUFLNEksU0FBUyxFQUFDLHFCQUFxQjtnQkFBQUMsUUFBQSxlQUNsQzNJLHVEQUFBO2tCQUFBMkksUUFBQSxnQkFDRTdJLHNEQUFBO29CQUFBNkksUUFBQSxFQUFRO2tCQUFrQyxDQUFRLENBQUMsZUFDbkQ3SSxzREFBQTtvQkFBR21FLEtBQUssRUFBRTtzQkFBRXFHLE1BQU0sRUFBRSxHQUFHO3NCQUFFTCxTQUFTLEVBQUU7b0JBQWtCLENBQUU7b0JBQUF0QixRQUFBLEVBQUM7a0JBRXpELENBQUcsQ0FBQztnQkFBQSxDQUNEO2NBQUMsQ0FDSDtZQUNOLENBQ0UsQ0FBQztVQUFBLENBQ0g7UUFDTixDQUNFLENBQUM7TUFBQSxDQUNILENBQ04sZUFHRDdJLHNEQUFBLENBQUNGLHFFQUFhO1FBQ1ppTSxNQUFNLEVBQUUxSyxnQkFBZ0IsSUFBSUYsV0FBWTtRQUN4QzZLLE9BQU8sRUFBRUEsQ0FBQSxLQUFNMUssbUJBQW1CLENBQUMsS0FBSyxDQUFFO1FBQzFDMkssZUFBZSxFQUFFbEwsUUFBUztRQUMxQm1MLGNBQWMsRUFBRy9KLEVBQUUsSUFBSztVQUN0Qm5CLFdBQVcsQ0FBQ21CLEVBQUUsQ0FBQztVQUNmTCxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7VUFDZlIsbUJBQW1CLENBQUMsS0FBSyxDQUFDO1FBQzVCO01BQUUsQ0FDSCxDQUFDO0lBQUEsQ0FDQyxDQUFDO0VBQUEsQ0FDSCxDQUFDO0FBRVY7QUFBQ2hCLEVBQUEsQ0EvcUJ1QkQsYUFBYTtBQUFBOEwsRUFBQSxHQUFiOUwsYUFBYTtBQUFBLElBQUE4TCxFQUFBO0FBQUFDLFlBQUEsQ0FBQUQsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9pbmRleC50c3g/MDdmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDbGVhblNoYXJlIFBybyAtIE1vZGVybiBVSSBJbXBsZW1lbnRhdGlvblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7XG4gIERldGVjdGlvbixcbiAgUmVkYWN0aW9uQWN0aW9uLFxuICBSZWRhY3Rpb25TdHlsZSxcbiAgUHJlc2V0LFxuICBEZXRlY3Rpb25LaW5kXG59IGZyb20gJ0BjbGVhbnNoYXJlL2NvcmUtZGV0ZWN0JztcbmltcG9ydCB7IGFuYWx5emVEb2N1bWVudCwgYXBwbHlSZWRhY3Rpb25zLCBzdGFydFNlc3Npb24sIGVuZFNlc3Npb24sIHN0YXJ0RmlsZVByb2Nlc3NpbmcsIHJlY29yZEFuYWx5c2lzUmVzdWx0cywgcmVjb3JkUmVkYWN0aW9uUmVzdWx0cyB9IGZyb20gJ0BjbGVhbnNoYXJlL2NvcmUtZGV0ZWN0JztcbmltcG9ydCBQcmVzZXRNYW5hZ2VyIGZyb20gJy4uL3NyYy9jb21wb25lbnRzL1ByZXNldE1hbmFnZXInO1xuaW1wb3J0IEhpc3RvcnlEYXNoYm9hcmQgZnJvbSAnLi4vc3JjL2NvbXBvbmVudHMvSGlzdG9yeURhc2hib2FyZCc7XG5cbmludGVyZmFjZSBGaWxlU3RhdGUge1xuICBmaWxlOiBGaWxlO1xuICBkZXRlY3Rpb25zOiBEZXRlY3Rpb25bXTtcbiAgc2VsZWN0ZWQ6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+O1xuICBhY3Rpb25zOiBSZWNvcmQ8c3RyaW5nLCB7IHN0eWxlOiBSZWRhY3Rpb25TdHlsZTsgbGFiZWxUZXh0Pzogc3RyaW5nIH0+O1xuICBwYWdlczogbnVtYmVyO1xuICBwYWdlSW1hZ2VzOiBzdHJpbmdbXTtcbiAgY3VycmVudFBhZ2U6IG51bWJlcjtcbiAgb3V0cHV0VXJpPzogc3RyaW5nO1xuICBwcmV2aWV3VXJpPzogc3RyaW5nOyAvLyBQcmV2aWV3IG9mIHNhbml0aXplZCBmaWxlXG4gIHByb2Nlc3Npbmc/OiBib29sZWFuO1xuICBlcnJvcj86IHN0cmluZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ2xlYW5TaGFyZVBybygpIHtcbiAgY29uc3QgW2ZpbGVzLCBzZXRGaWxlc10gPSB1c2VTdGF0ZTxGaWxlW10+KFtdKTtcbiAgY29uc3QgW2ZpbGVTdGF0ZXMsIHNldEZpbGVTdGF0ZXNdID0gdXNlU3RhdGU8RmlsZVN0YXRlW10+KFtdKTtcbiAgY29uc3QgW2N1cnJlbnRGaWxlSW5kZXgsIHNldEN1cnJlbnRGaWxlSW5kZXhdID0gdXNlU3RhdGUoMCk7XG4gIGNvbnN0IFtwcmVzZXRzLCBzZXRQcmVzZXRzXSA9IHVzZVN0YXRlPFByZXNldFtdPihbXSk7XG4gIGNvbnN0IFtwcmVzZXRJZCwgc2V0UHJlc2V0SWRdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Byb1VubG9ja2VkLCBzZXRQcm9VbmxvY2tlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzaG93UHJlc2V0RWRpdG9yLCBzZXRTaG93UHJlc2V0RWRpdG9yXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Nob3dIaXN0b3J5RGFzaGJvYXJkLCBzZXRTaG93SGlzdG9yeURhc2hib2FyZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtjdXJyZW50U2Vzc2lvbklkLCBzZXRDdXJyZW50U2Vzc2lvbklkXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbZmlsZVByb2Nlc3NpbmdSZWNvcmRzLCBzZXRGaWxlUHJvY2Vzc2luZ1JlY29yZHNdID0gdXNlU3RhdGU8TWFwPG51bWJlciwgc3RyaW5nPj4obmV3IE1hcCgpKTtcblxuICAvLyBMb2FkIHByZXNldHMgb24gbW91bnQgYW5kIHdoZW4gcHJlc2V0IG1hbmFnZXIgdXBkYXRlc1xuICBjb25zdCBsb2FkUHJlc2V0cyA9ICgpID0+IHtcbiAgICAvLyBJbXBvcnQgbGlzdFByZXNldHMgZHluYW1pY2FsbHkgdG8gYXZvaWQgU1NSIGlzc3Vlc1xuICAgIGltcG9ydCgnQGNsZWFuc2hhcmUvY29yZS1kZXRlY3QnKS50aGVuKCh7IGxpc3RQcmVzZXRzIH0pID0+IHtcbiAgICAgIGNvbnN0IHBzID0gbGlzdFByZXNldHMoKTtcbiAgICAgIHNldFByZXNldHMocHMpO1xuICAgICAgaWYgKHBzLmxlbmd0aCA+IDAgJiYgIXByZXNldElkKSB7XG4gICAgICAgIHNldFByZXNldElkKHBzWzBdLmlkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxvYWRQcmVzZXRzKCk7XG4gIH0sIFtdKTtcblxuICAvLyBQcm9jZXNzIGZpbGVzIHdoZW4gdGhleSBjaGFuZ2VcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoZmlsZXMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgXG4gICAgYXN5bmMgZnVuY3Rpb24gcHJvY2Vzc0ZpbGVzKCkge1xuICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgIGNvbnN0IG5ld1N0YXRlczogRmlsZVN0YXRlW10gPSBbXTtcbiAgICAgIFxuICAgICAgLy8gU3RhcnQgcHJvY2Vzc2luZyBzZXNzaW9uXG4gICAgICBjb25zdCBjdXJyZW50UHJlc2V0ID0gcHJlc2V0cy5maW5kKHAgPT4gcC5pZCA9PT0gcHJlc2V0SWQpO1xuICAgICAgY29uc3Qgc2Vzc2lvbklkID0gc3RhcnRTZXNzaW9uKHtcbiAgICAgICAgdG90YWxGaWxlczogZmlsZXMubGVuZ3RoLFxuICAgICAgICBwcmVzZXRJZCxcbiAgICAgICAgcHJlc2V0TmFtZTogY3VycmVudFByZXNldD8ubmFtZSxcbiAgICAgICAgYW5hbHl6ZU9wdGlvbnM6IHsgcHJlc2V0SWQgfVxuICAgICAgfSk7XG4gICAgICBzZXRDdXJyZW50U2Vzc2lvbklkKHNlc3Npb25JZCk7XG4gICAgICBcbiAgICAgIGNvbnN0IHByb2Nlc3NpbmdSZWNvcmRzID0gbmV3IE1hcDxudW1iZXIsIHN0cmluZz4oKTtcbiAgICAgIFxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmaWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBmaWxlID0gZmlsZXNbaV07XG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgICAgIFxuICAgICAgICAvLyBTdGFydCB0cmFja2luZyB0aGlzIGZpbGVcbiAgICAgICAgY29uc3QgcmVjb3JkSWQgPSBzdGFydEZpbGVQcm9jZXNzaW5nKHtcbiAgICAgICAgICBzZXNzaW9uSWQsXG4gICAgICAgICAgZmlsZU5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgICBmaWxlU2l6ZTogZmlsZS5zaXplLFxuICAgICAgICAgIGZpbGVUeXBlOiBmaWxlLnR5cGVcbiAgICAgICAgfSk7XG4gICAgICAgIHByb2Nlc3NpbmdSZWNvcmRzLnNldChpLCByZWNvcmRJZCk7XG4gICAgICAgIFxuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFuYWx5emVEb2N1bWVudChmaWxlLCB7IHByZXNldElkIH0pO1xuICAgICAgICAgIGNvbnN0IGFuYWx5c2lzVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gUmVjb3JkIGFuYWx5c2lzIHJlc3VsdHNcbiAgICAgICAgICByZWNvcmRBbmFseXNpc1Jlc3VsdHMocmVjb3JkSWQsIHtcbiAgICAgICAgICAgIGRldGVjdGlvbnM6IHJlc3VsdC5kZXRlY3Rpb25zLFxuICAgICAgICAgICAgZGV0ZWN0aW9uVGltZTogYW5hbHlzaXNUaW1lXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc3Qgc2VsZWN0ZWQ6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+ID0ge307XG4gICAgICAgICAgY29uc3QgYWN0aW9uczogUmVjb3JkPHN0cmluZywgeyBzdHlsZTogUmVkYWN0aW9uU3R5bGU7IGxhYmVsVGV4dD86IHN0cmluZyB9PiA9IHt9O1xuICAgICAgICAgIFxuICAgICAgICAgIHJlc3VsdC5kZXRlY3Rpb25zLmZvckVhY2goZGV0ID0+IHtcbiAgICAgICAgICAgIHNlbGVjdGVkW2RldC5pZF0gPSB0cnVlO1xuICAgICAgICAgICAgYWN0aW9uc1tkZXQuaWRdID0geyBzdHlsZTogJ0JPWCcgfTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIG5ld1N0YXRlcy5wdXNoKHtcbiAgICAgICAgICAgIGZpbGUsXG4gICAgICAgICAgICBkZXRlY3Rpb25zOiByZXN1bHQuZGV0ZWN0aW9ucyxcbiAgICAgICAgICAgIHNlbGVjdGVkLFxuICAgICAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgICAgIHBhZ2VzOiByZXN1bHQucGFnZXMgfHwgMSxcbiAgICAgICAgICAgIHBhZ2VJbWFnZXM6IFtdLFxuICAgICAgICAgICAgY3VycmVudFBhZ2U6IDAsXG4gICAgICAgICAgICBwcm9jZXNzaW5nOiBmYWxzZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBwcm9jZXNzIGZpbGU6JywgZmlsZS5uYW1lLCBlcnJvcik7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gUmVjb3JkIGFuYWx5c2lzIGVycm9yXG4gICAgICAgICAgcmVjb3JkQW5hbHlzaXNSZXN1bHRzKHJlY29yZElkLCB7XG4gICAgICAgICAgICBkZXRlY3Rpb25zOiBbXSxcbiAgICAgICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIEFkZCB0aGUgZmlsZSB3aXRoIGVycm9yIHN0YXRlXG4gICAgICAgICAgbmV3U3RhdGVzLnB1c2goe1xuICAgICAgICAgICAgZmlsZSxcbiAgICAgICAgICAgIGRldGVjdGlvbnM6IFtdLFxuICAgICAgICAgICAgc2VsZWN0ZWQ6IHt9LFxuICAgICAgICAgICAgYWN0aW9uczoge30sXG4gICAgICAgICAgICBwYWdlczogMSxcbiAgICAgICAgICAgIHBhZ2VJbWFnZXM6IFtdLFxuICAgICAgICAgICAgY3VycmVudFBhZ2U6IDAsXG4gICAgICAgICAgICBwcm9jZXNzaW5nOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIHNldEZpbGVTdGF0ZXMobmV3U3RhdGVzKTtcbiAgICAgIHNldEZpbGVQcm9jZXNzaW5nUmVjb3Jkcyhwcm9jZXNzaW5nUmVjb3Jkcyk7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIFxuICAgICAgLy8gRW5kIHRoZSBzZXNzaW9uXG4gICAgICBlbmRTZXNzaW9uKHNlc3Npb25JZCwgJ2NvbXBsZXRlZCcpO1xuICAgIH1cbiAgICBcbiAgICBwcm9jZXNzRmlsZXMoKTtcbiAgfSwgW2ZpbGVzLCBwcmVzZXRJZF0pO1xuXG4gIGNvbnN0IGhhbmRsZUZpbGVDaGFuZ2UgPSAoZTogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcbiAgICBjb25zdCBzZWxlY3RlZEZpbGVzID0gQXJyYXkuZnJvbShlLnRhcmdldC5maWxlcyB8fCBbXSk7XG4gICAgc2V0RmlsZXMoc2VsZWN0ZWRGaWxlcyk7XG4gICAgc2V0Q3VycmVudEZpbGVJbmRleCgwKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVEcm9wID0gKGU6IFJlYWN0LkRyYWdFdmVudCkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGNvbnN0IGRyb3BwZWRGaWxlcyA9IEFycmF5LmZyb20oZS5kYXRhVHJhbnNmZXIuZmlsZXMpO1xuICAgIHNldEZpbGVzKGRyb3BwZWRGaWxlcyk7XG4gICAgc2V0Q3VycmVudEZpbGVJbmRleCgwKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVEcmFnT3ZlciA9IChlOiBSZWFjdC5EcmFnRXZlbnQpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVEcmFnTGVhdmUgPSAoZTogUmVhY3QuRHJhZ0V2ZW50KSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlU2FuaXRpemUgPSBhc3luYyAoZmlsZUluZGV4OiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBmaWxlU3RhdGUgPSBmaWxlU3RhdGVzW2ZpbGVJbmRleF07XG4gICAgaWYgKCFmaWxlU3RhdGUpIHJldHVybjtcblxuICAgIC8vIFVwZGF0ZSBwcm9jZXNzaW5nIHN0YXRlXG4gICAgc2V0RmlsZVN0YXRlcyhwcmV2ID0+IHByZXYubWFwKChzdGF0ZSwgaSkgPT4gXG4gICAgICBpID09PSBmaWxlSW5kZXggPyB7IC4uLnN0YXRlLCBwcm9jZXNzaW5nOiB0cnVlIH0gOiBzdGF0ZVxuICAgICkpO1xuXG4gICAgY29uc3QgcmVkYWN0aW9uU3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCByZWNvcmRJZCA9IGZpbGVQcm9jZXNzaW5nUmVjb3Jkcy5nZXQoZmlsZUluZGV4KTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBSZS1hbmFseXplIHRoZSBmaWxlIHRvIGVuc3VyZSBsYXN0UmVzdWx0IGlzIHNldCBjb3JyZWN0bHkgIFxuICAgICAgYXdhaXQgYW5hbHl6ZURvY3VtZW50KGZpbGVTdGF0ZS5maWxlLCB7IHByZXNldElkIH0pO1xuICAgICAgXG4gICAgICBjb25zdCByZWRhY3Rpb25BY3Rpb25zOiBSZWRhY3Rpb25BY3Rpb25bXSA9IGZpbGVTdGF0ZS5kZXRlY3Rpb25zXG4gICAgICAgIC5maWx0ZXIoZGV0ID0+IGZpbGVTdGF0ZS5zZWxlY3RlZFtkZXQuaWRdKVxuICAgICAgICAubWFwKGRldCA9PiAoe1xuICAgICAgICAgIGRldGVjdGlvbklkOiBkZXQuaWQsXG4gICAgICAgICAgc3R5bGU6IGZpbGVTdGF0ZS5hY3Rpb25zW2RldC5pZF0/LnN0eWxlIHx8ICdCT1gnLFxuICAgICAgICAgIGxhYmVsVGV4dDogZmlsZVN0YXRlLmFjdGlvbnNbZGV0LmlkXT8ubGFiZWxUZXh0XG4gICAgICAgIH0pKTtcblxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYXBwbHlSZWRhY3Rpb25zKGZpbGVTdGF0ZS5maWxlLCByZWRhY3Rpb25BY3Rpb25zLCB7XG4gICAgICAgIG91dHB1dDogJ2ltYWdlJ1xuICAgICAgfSwgZmlsZVN0YXRlLmRldGVjdGlvbnMpO1xuXG4gICAgICAvLyBDb252ZXJ0IGRhdGEgVVJJIHRvIGJsb2IgZm9yIGRvd25sb2FkXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHJlc3VsdC5maWxlVXJpKTtcbiAgICAgIGNvbnN0IGJsb2IgPSBhd2FpdCByZXNwb25zZS5ibG9iKCk7XG4gICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgICAgY29uc3QgcmVkYWN0aW9uVGltZSA9IERhdGUubm93KCkgLSByZWRhY3Rpb25TdGFydFRpbWU7XG5cbiAgICAgIC8vIFJlY29yZCByZWRhY3Rpb24gcmVzdWx0c1xuICAgICAgaWYgKHJlY29yZElkKSB7XG4gICAgICAgIHJlY29yZFJlZGFjdGlvblJlc3VsdHMocmVjb3JkSWQsIHtcbiAgICAgICAgICBhcHBsaWVkUmVkYWN0aW9uczogcmVkYWN0aW9uQWN0aW9ucyxcbiAgICAgICAgICByZWRhY3Rpb25UaW1lLFxuICAgICAgICAgIG91dHB1dFNpemU6IGJsb2Iuc2l6ZVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgLy8gVXBkYXRlIGZpbGUgc3RhdGUgd2l0aCByZXN1bHRcbiAgICAgIHNldEZpbGVTdGF0ZXMocHJldiA9PiBwcmV2Lm1hcCgoc3RhdGUsIGkpID0+IFxuICAgICAgICBpID09PSBmaWxlSW5kZXggPyB7IC4uLnN0YXRlLCBvdXRwdXRVcmk6IHVybCwgcHJldmlld1VyaTogcmVzdWx0LmZpbGVVcmksIHByb2Nlc3Npbmc6IGZhbHNlIH0gOiBzdGF0ZVxuICAgICAgKSk7XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignU2FuaXRpemF0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4gICAgICBcbiAgICAgIC8vIFJlY29yZCByZWRhY3Rpb24gZXJyb3JcbiAgICAgIGlmIChyZWNvcmRJZCkge1xuICAgICAgICByZWNvcmRSZWRhY3Rpb25SZXN1bHRzKHJlY29yZElkLCB7XG4gICAgICAgICAgYXBwbGllZFJlZGFjdGlvbnM6IFtdLFxuICAgICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gU2hvdyBlcnJvciB0byB1c2VyXG4gICAgICBhbGVydChgU2FuaXRpemF0aW9uIGZhaWxlZDogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ31gKTtcbiAgICAgIHNldEZpbGVTdGF0ZXMocHJldiA9PiBwcmV2Lm1hcCgoc3RhdGUsIGkpID0+IFxuICAgICAgICBpID09PSBmaWxlSW5kZXggPyB7IC4uLnN0YXRlLCBwcm9jZXNzaW5nOiBmYWxzZSB9IDogc3RhdGVcbiAgICAgICkpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVEb3dubG9hZCA9IChmaWxlSW5kZXg6IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IGZpbGVTdGF0ZSA9IGZpbGVTdGF0ZXNbZmlsZUluZGV4XTtcbiAgICBpZiAoIWZpbGVTdGF0ZT8ub3V0cHV0VXJpKSByZXR1cm47XG5cbiAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIGxpbmsuaHJlZiA9IGZpbGVTdGF0ZS5vdXRwdXRVcmk7XG4gICAgbGluay5kb3dubG9hZCA9IGBzYW5pdGl6ZWRfJHtmaWxlU3RhdGUuZmlsZS5uYW1lfWA7XG4gICAgbGluay5jbGljaygpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUJ1bGtTYW5pdGl6ZSA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBmaWxlc1RvUHJvY2VzcyA9IGZpbGVTdGF0ZXNcbiAgICAgIC5tYXAoKHN0YXRlLCBpbmRleCkgPT4gKHsgc3RhdGUsIGluZGV4IH0pKVxuICAgICAgLmZpbHRlcigoeyBzdGF0ZSB9KSA9PiAhc3RhdGUub3V0cHV0VXJpICYmICFzdGF0ZS5lcnJvcik7XG5cbiAgICBpZiAoZmlsZXNUb1Byb2Nlc3MubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICAvLyBTZXQgYWxsIGVsaWdpYmxlIGZpbGVzIHRvIHByb2Nlc3Npbmcgc3RhdGVcbiAgICBzZXRGaWxlU3RhdGVzKHByZXYgPT4gcHJldi5tYXAoKHN0YXRlLCBpbmRleCkgPT4ge1xuICAgICAgY29uc3Qgc2hvdWxkUHJvY2VzcyA9IGZpbGVzVG9Qcm9jZXNzLnNvbWUoKHsgaW5kZXg6IHByb2Nlc3NJbmRleCB9KSA9PiBwcm9jZXNzSW5kZXggPT09IGluZGV4KTtcbiAgICAgIHJldHVybiBzaG91bGRQcm9jZXNzID8geyAuLi5zdGF0ZSwgcHJvY2Vzc2luZzogdHJ1ZSB9IDogc3RhdGU7XG4gICAgfSkpO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIFByb2Nlc3MgZmlsZXMgd2l0aCBsaW1pdGVkIGNvbmN1cnJlbmN5XG4gICAgICBjb25zdCBtYXhDb25jdXJyZW5jeSA9IDM7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVzVG9Qcm9jZXNzLmxlbmd0aDsgaSArPSBtYXhDb25jdXJyZW5jeSkge1xuICAgICAgICBjb25zdCBiYXRjaCA9IGZpbGVzVG9Qcm9jZXNzLnNsaWNlKGksIGkgKyBtYXhDb25jdXJyZW5jeSk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBwcm9taXNlcyA9IGJhdGNoLm1hcChhc3luYyAoeyBzdGF0ZSwgaW5kZXg6IGZpbGVJbmRleCB9KSA9PiB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFJlLWFuYWx5emUgdGhlIGZpbGUgdG8gZW5zdXJlIGxhc3RSZXN1bHQgaXMgc2V0IGNvcnJlY3RseSAgXG4gICAgICAgICAgICBhd2FpdCBhbmFseXplRG9jdW1lbnQoc3RhdGUuZmlsZSwgeyBwcmVzZXRJZCB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgcmVkYWN0aW9uQWN0aW9uczogUmVkYWN0aW9uQWN0aW9uW10gPSBzdGF0ZS5kZXRlY3Rpb25zXG4gICAgICAgICAgICAgIC5maWx0ZXIoZGV0ID0+IHN0YXRlLnNlbGVjdGVkW2RldC5pZF0pXG4gICAgICAgICAgICAgIC5tYXAoZGV0ID0+ICh7XG4gICAgICAgICAgICAgICAgZGV0ZWN0aW9uSWQ6IGRldC5pZCxcbiAgICAgICAgICAgICAgICBzdHlsZTogc3RhdGUuYWN0aW9uc1tkZXQuaWRdPy5zdHlsZSB8fCAnQk9YJyxcbiAgICAgICAgICAgICAgICBsYWJlbFRleHQ6IHN0YXRlLmFjdGlvbnNbZGV0LmlkXT8ubGFiZWxUZXh0XG4gICAgICAgICAgICAgIH0pKTtcblxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYXBwbHlSZWRhY3Rpb25zKHN0YXRlLmZpbGUsIHJlZGFjdGlvbkFjdGlvbnMsIHtcbiAgICAgICAgICAgICAgb3V0cHV0OiAnaW1hZ2UnXG4gICAgICAgICAgICB9LCBzdGF0ZS5kZXRlY3Rpb25zKTtcblxuICAgICAgICAgICAgLy8gQ29udmVydCBkYXRhIFVSSSB0byBibG9iIGZvciBkb3dubG9hZFxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChyZXN1bHQuZmlsZVVyaSk7XG4gICAgICAgICAgICBjb25zdCBibG9iID0gYXdhaXQgcmVzcG9uc2UuYmxvYigpO1xuICAgICAgICAgICAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcblxuICAgICAgICAgICAgLy8gVXBkYXRlIGZpbGUgc3RhdGUgd2l0aCByZXN1bHRcbiAgICAgICAgICAgIHNldEZpbGVTdGF0ZXMocHJldiA9PiBwcmV2Lm1hcCgocywgaSkgPT4gXG4gICAgICAgICAgICAgIGkgPT09IGZpbGVJbmRleCA/IHsgLi4ucywgb3V0cHV0VXJpOiB1cmwsIHByZXZpZXdVcmk6IHJlc3VsdC5maWxlVXJpLCBwcm9jZXNzaW5nOiBmYWxzZSB9IDogc1xuICAgICAgICAgICAgKSk7XG5cbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgU2FuaXRpemF0aW9uIGZhaWxlZCBmb3IgJHtzdGF0ZS5maWxlLm5hbWV9OmAsIGVycm9yKTtcbiAgICAgICAgICAgIHNldEZpbGVTdGF0ZXMocHJldiA9PiBwcmV2Lm1hcCgocywgaSkgPT4gXG4gICAgICAgICAgICAgIGkgPT09IGZpbGVJbmRleCA/IHsgLi4ucywgcHJvY2Vzc2luZzogZmFsc2UsIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJyB9IDogc1xuICAgICAgICAgICAgKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChwcm9taXNlcyk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0J1bGsgc2FuaXRpemF0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUJ1bGtEb3dubG9hZCA9ICgpID0+IHtcbiAgICBjb25zdCBwcm9jZXNzZWRGaWxlcyA9IGZpbGVTdGF0ZXMuZmlsdGVyKHN0YXRlID0+IHN0YXRlLm91dHB1dFVyaSk7XG4gICAgXG4gICAgaWYgKHByb2Nlc3NlZEZpbGVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgLy8gRG93bmxvYWQgZWFjaCBmaWxlIGluZGl2aWR1YWxseVxuICAgIHByb2Nlc3NlZEZpbGVzLmZvckVhY2goKHN0YXRlLCBpbmRleCkgPT4ge1xuICAgICAgaWYgKHN0YXRlLm91dHB1dFVyaSkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgICAgIGxpbmsuaHJlZiA9IHN0YXRlLm91dHB1dFVyaSE7XG4gICAgICAgICAgbGluay5kb3dubG9hZCA9IGBzYW5pdGl6ZWRfJHtzdGF0ZS5maWxlLm5hbWV9YDtcbiAgICAgICAgICBsaW5rLmNsaWNrKCk7XG4gICAgICAgIH0sIGluZGV4ICogMTAwKTsgLy8gU3RhZ2dlciBkb3dubG9hZHMgYnkgMTAwbXNcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBjdXJyZW50RmlsZVN0YXRlID0gZmlsZVN0YXRlc1tjdXJyZW50RmlsZUluZGV4XTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWNvbnRhaW5lclwiPlxuICAgICAgey8qIEhlYWRlciAqL31cbiAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPVwiaGVhZGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyLWNvbnRlbnRcIj5cbiAgICAgICAgICA8YSBocmVmPVwiI1wiIGNsYXNzTmFtZT1cImxvZ29cIj5cbiAgICAgICAgICAgIENsZWFuU2hhcmUgUHJvXG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgZ2FwOiAndmFyKC0tc3BhY2UtbWQpJyB9fT5cbiAgICAgICAgICAgIHtwcmVzZXRzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsIGdhcDogJ3ZhcigtLXNwYWNlLXhzKScgfX0+XG4gICAgICAgICAgICAgICAgPHNlbGVjdCBcbiAgICAgICAgICAgICAgICAgIHZhbHVlPXtwcmVzZXRJZH0gXG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFByZXNldElkKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tc2VsZWN0XCJcbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IG1pbldpZHRoOiAnMTgwcHgnIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge3ByZXNldHMubWFwKHAgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIGtleT17cC5pZH0gdmFsdWU9e3AuaWR9PlxuICAgICAgICAgICAgICAgICAgICAgIHtwLm5hbWV9IHtwLmRvbWFpbiAmJiBwLmRvbWFpbiAhPT0gJ0dlbmVyYWwnID8gYCgke3AuZG9tYWlufSlgIDogJyd9XG4gICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICAgICAgeygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50UHJlc2V0ID0gcHJlc2V0cy5maW5kKHAgPT4gcC5pZCA9PT0gcHJlc2V0SWQpO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRQcmVzZXQ/LmRlc2NyaXB0aW9uID8gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IFxuICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAndmFyKC0tZm9udC1zaXplLXhzKScsIFxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAndmFyKC0tdGV4dC1zZWNvbmRhcnkpJywgXG4gICAgICAgICAgICAgICAgICAgICAgbWF4V2lkdGg6ICcyMDBweCcsXG4gICAgICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDogJzEuMidcbiAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAge2N1cnJlbnRQcmVzZXQuZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGw7XG4gICAgICAgICAgICAgICAgfSkoKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRQcm9VbmxvY2tlZCghcHJvVW5sb2NrZWQpfVxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2BidG4gJHtwcm9VbmxvY2tlZCA/ICdidG4tc2Vjb25kYXJ5JyA6ICdidG4tb3V0bGluZSd9IGJ0bi1zbWB9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtwcm9VbmxvY2tlZCA/ICfinJMgUHJvIFVubG9ja2VkJyA6ICfwn5STIFVubG9jayBQcm8nfVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICB7cHJvVW5sb2NrZWQgJiYgKFxuICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNob3dQcmVzZXRFZGl0b3IodHJ1ZSl9XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICBNYW5hZ2UgUHJlc2V0c1xuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNob3dIaXN0b3J5RGFzaGJvYXJkKHRydWUpfVxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1zZWNvbmRhcnkgYnRuLXNtXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICDwn5OKIEhpc3RvcnlcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvaGVhZGVyPlxuXG4gICAgICB7LyogTWFpbiBDb250ZW50ICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYWluLWNvbnRlbnRcIj5cbiAgICAgICAgey8qIEZpbGUgVXBsb2FkIFNlY3Rpb24gKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZFwiIHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogJ3ZhcigtLXNwYWNlLXhsKScgfX0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWhlYWRlclwiPlxuICAgICAgICAgICAgPGgyIGNsYXNzTmFtZT1cImNhcmQtdGl0bGVcIj5VcGxvYWQgRmlsZXM8L2gyPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiY2FyZC1zdWJ0aXRsZVwiPlNlbGVjdCBpbWFnZXMgb3IgUERGIGRvY3VtZW50cyB0byBzYW5pdGl6ZTwvcD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtYm9keVwiPlxuICAgICAgICAgICAgPGRpdiBcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmlsZS11cGxvYWQtem9uZVwiXG4gICAgICAgICAgICAgIG9uRHJvcD17aGFuZGxlRHJvcH1cbiAgICAgICAgICAgICAgb25EcmFnT3Zlcj17aGFuZGxlRHJhZ092ZXJ9XG4gICAgICAgICAgICAgIG9uRHJhZ0xlYXZlPXtoYW5kbGVEcmFnTGVhdmV9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmaWxlLWlucHV0Jyk/LmNsaWNrKCl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlsZS11cGxvYWQtaWNvblwiPvCfk4Q8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWxlLXVwbG9hZC10ZXh0XCI+XG4gICAgICAgICAgICAgICAgRHJvcCBmaWxlcyBoZXJlIG9yIGNsaWNrIHRvIGJyb3dzZVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWxlLXVwbG9hZC1zdWJ0ZXh0XCI+XG4gICAgICAgICAgICAgICAgU3VwcG9ydHMgaW1hZ2VzIChKUEcsIFBORywgV2ViUCwgSEVJQywgVElGRiksIFBERnMsIGFuZCBkb2N1bWVudHMgKERPQ1gsIFhMU1gpIHVwIHRvIDEwTUIgZWFjaFxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgaWQ9XCJmaWxlLWlucHV0XCJcbiAgICAgICAgICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgICAgICAgICAgYWNjZXB0PVwiaW1hZ2UvKixhcHBsaWNhdGlvbi9wZGYsLndlYnAsLmhlaWMsLnRpZmYsLmRvY3gsLnhsc3hcIlxuICAgICAgICAgICAgICAgIG11bHRpcGxlXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUZpbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZGlzcGxheTogJ25vbmUnIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAge2xvYWRpbmcgJiYgKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvYWRpbmctdGV4dFwiIHN0eWxlPXt7IG1hcmdpblRvcDogJ3ZhcigtLXNwYWNlLW1kKScgfX0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsb2FkaW5nLXNwaW5uZXJcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICBQcm9jZXNzaW5nIGZpbGVzLi4uXG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgey8qIEZpbGUgUHJvY2Vzc2luZyBSZXN1bHRzICovfVxuICAgICAgICB7ZmlsZVN0YXRlcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZ2FwOiAndmFyKC0tc3BhY2UteGwpJyB9fT5cbiAgICAgICAgICAgIHsvKiBGaWxlIExpc3QgU2lkZWJhciAqL31cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2lkZWJhclwiIHN0eWxlPXt7IG1pbldpZHRoOiAnMjUwcHgnIH19PlxuICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwic2lkZWJhci10aXRsZVwiPkZpbGVzICh7ZmlsZVN0YXRlcy5sZW5ndGh9KTwvaDM+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICB7LyogQnVsayBQcm9jZXNzaW5nIENvbnRyb2xzICovfVxuICAgICAgICAgICAgICB7ZmlsZVN0YXRlcy5sZW5ndGggPiAxICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IFxuICAgICAgICAgICAgICAgICAgcGFkZGluZzogJ3ZhcigtLXNwYWNlLW1kKScsIFxuICAgICAgICAgICAgICAgICAgbWFyZ2luQm90dG9tOiAndmFyKC0tc3BhY2UtbWQpJywgXG4gICAgICAgICAgICAgICAgICBib3JkZXI6ICcycHggc29saWQgdmFyKC0tY29sb3ItcHJpbWFyeSknLCBcbiAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJ3ZhcigtLXJhZGl1cy1tZCknLCBcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICd2YXIoLS1iZy1zZWNvbmRhcnkpJyBcbiAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgIDxoNCBzdHlsZT17eyBtYXJnaW46ICcwIDAgdmFyKC0tc3BhY2Utc20pIDAnLCBmb250U2l6ZTogJ3ZhcigtLWZvbnQtc2l6ZS1zbSknLCBmb250V2VpZ2h0OiAnNjAwJyB9fT5cbiAgICAgICAgICAgICAgICAgICAg8J+agCBCdWxrIFByb2Nlc3NpbmdcbiAgICAgICAgICAgICAgICAgIDwvaDQ+XG4gICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsIGdhcDogJ3ZhcigtLXNwYWNlLXhzKScgfX0+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVCdWxrU2FuaXRpemV9XG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiXG4gICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2ZpbGVTdGF0ZXMuc29tZShzID0+IHMucHJvY2Vzc2luZykgfHwgZmlsZVN0YXRlcy5ldmVyeShzID0+IHMub3V0cHV0VXJpKX1cbiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogJzEwMCUnIH19XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICB7ZmlsZVN0YXRlcy5zb21lKHMgPT4gcy5wcm9jZXNzaW5nKSBcbiAgICAgICAgICAgICAgICAgICAgICAgID8gJ1Byb2Nlc3NpbmcuLi4nIFxuICAgICAgICAgICAgICAgICAgICAgICAgOiBmaWxlU3RhdGVzLmV2ZXJ5KHMgPT4gcy5vdXRwdXRVcmkpIFxuICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdBbGwgQ29tcGxldGUnIFxuICAgICAgICAgICAgICAgICAgICAgICAgICA6IGBTYW5pdGl6ZSBBbGwgKCR7ZmlsZVN0YXRlcy5maWx0ZXIocyA9PiAhcy5vdXRwdXRVcmkgJiYgIXMuZXJyb3IpLmxlbmd0aH0pYFxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIHtmaWxlU3RhdGVzLnNvbWUocyA9PiBzLm91dHB1dFVyaSkgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUJ1bGtEb3dubG9hZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tc2Vjb25kYXJ5IGJ0bi1zbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogJzEwMCUnIH19XG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAg8J+TpiBEb3dubG9hZCBBbGwgKHtmaWxlU3RhdGVzLmZpbHRlcihzID0+IHMub3V0cHV0VXJpKS5sZW5ndGh9KVxuICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJ3ZhcigtLXNwYWNlLXhzKScsIGZvbnRTaXplOiAndmFyKC0tZm9udC1zaXplLXhzKScsIGNvbG9yOiAndmFyKC0tdGV4dC1zZWNvbmRhcnkpJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgQ29uY3VycmVudCBwcm9jZXNzaW5nIHdpdGggcHJvZ3Jlc3MgdHJhY2tpbmdcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsIGdhcDogJ3ZhcigtLXNwYWNlLXNtKScgfX0+XG4gICAgICAgICAgICAgICAge2ZpbGVTdGF0ZXMubWFwKChzdGF0ZSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0Q3VycmVudEZpbGVJbmRleChpbmRleCl9XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJ3ZhcigtLXNwYWNlLW1kKScsXG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBgMnB4IHNvbGlkICR7aW5kZXggPT09IGN1cnJlbnRGaWxlSW5kZXggPyAndmFyKC0tY29sb3ItcHJpbWFyeSknIDogJ3ZhcigtLWJvcmRlci1saWdodCknfWAsXG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAndmFyKC0tcmFkaXVzLW1kKScsXG4gICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogaW5kZXggPT09IGN1cnJlbnRGaWxlSW5kZXggPyAndmFyKC0tYmctc2Vjb25kYXJ5KScgOiAndmFyKC0tYmctcHJpbWFyeSknLFxuICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246ICdhbGwgdmFyKC0tdHJhbnNpdGlvbi1mYXN0KSdcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250V2VpZ2h0OiAnNjAwJywgZm9udFNpemU6ICd2YXIoLS1mb250LXNpemUtc20pJywgbWFyZ2luQm90dG9tOiAndmFyKC0tc3BhY2UteHMpJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICB7c3RhdGUuZmlsZS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250U2l6ZTogJ3ZhcigtLWZvbnQtc2l6ZS14cyknLCBjb2xvcjogc3RhdGUuZXJyb3IgPyAndmFyKC0tY29sb3ItZXJyb3IpJyA6ICd2YXIoLS10ZXh0LXNlY29uZGFyeSknIH19PlxuICAgICAgICAgICAgICAgICAgICAgIHtzdGF0ZS5lcnJvciA/IGBFcnJvcjogJHtzdGF0ZS5lcnJvcn1gIDogYCR7c3RhdGUuZGV0ZWN0aW9ucy5sZW5ndGh9IGRldGVjdGlvbnMgZm91bmRgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICd2YXIoLS1zcGFjZS1zbSknLCBkaXNwbGF5OiAnZmxleCcsIGdhcDogJ3ZhcigtLXNwYWNlLXhzKScgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlU2FuaXRpemUoaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIlxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3N0YXRlLnByb2Nlc3NpbmcgfHwgISFzdGF0ZS5lcnJvcn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGZsZXg6IDEgfX1cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7c3RhdGUucHJvY2Vzc2luZyA/ICdQcm9jZXNzaW5nLi4uJyA6ICdTYW5pdGl6ZSd9XG4gICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAge3N0YXRlLm91dHB1dFVyaSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVEb3dubG9hZChpbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tc2Vjb25kYXJ5IGJ0bi1zbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIERvd25sb2FkXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICB7LyogTWFpbiBDb250ZW50IEFyZWEgKi99XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGZsZXg6IDEgfX0+XG4gICAgICAgICAgICAgIHtjdXJyZW50RmlsZVN0YXRlICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImNhcmQtdGl0bGVcIj57Y3VycmVudEZpbGVTdGF0ZS5maWxlLm5hbWV9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiY2FyZC1zdWJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgIHtjdXJyZW50RmlsZVN0YXRlLmVycm9yID8gJ1Byb2Nlc3NpbmcgZmFpbGVkJyA6IGBGb3VuZCAke2N1cnJlbnRGaWxlU3RhdGUuZGV0ZWN0aW9ucy5sZW5ndGh9IHNlbnNpdGl2ZSBpdGVtc2B9XG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWJvZHlcIj5cbiAgICAgICAgICAgICAgICAgICAge2N1cnJlbnRGaWxlU3RhdGUuZXJyb3IgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbGVydCBhbGVydC1lcnJvclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5Qcm9jZXNzaW5nIEVycm9yPC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPXt7IG1hcmdpbjogJzAnLCBtYXJnaW5Ub3A6ICd2YXIoLS1zcGFjZS14cyknIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhaWxlZCB0byBhbmFseXplIHRoaXMgZmlsZToge2N1cnJlbnRGaWxlU3RhdGUuZXJyb3J9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApIDogY3VycmVudEZpbGVTdGF0ZS5kZXRlY3Rpb25zLmxlbmd0aCA+IDAgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBzdHlsZT17eyBtYXJnaW5Cb3R0b206ICd2YXIoLS1zcGFjZS1tZCknLCBmb250U2l6ZTogJ3ZhcigtLWZvbnQtc2l6ZS1sZyknIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICBEZXRlY3RlZCBTZW5zaXRpdmUgSW5mb3JtYXRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsIGdhcDogJ3ZhcigtLXNwYWNlLXNtKScgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtjdXJyZW50RmlsZVN0YXRlLmRldGVjdGlvbnMubWFwKGRldGVjdGlvbiA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtkZXRlY3Rpb24uaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAndmFyKC0tc3BhY2UtbWQpJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHZhcigtLWJvcmRlci1saWdodCknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICd2YXIoLS1yYWRpdXMtbWQpJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJ3ZhcigtLWJnLXNlY29uZGFyeSknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgZ2FwOiAndmFyKC0tc3BhY2UtbWQpJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtjdXJyZW50RmlsZVN0YXRlLnNlbGVjdGVkW2RldGVjdGlvbi5pZF0gfHwgZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRGaWxlU3RhdGVzKHByZXYgPT4gcHJldi5tYXAoKHN0YXRlLCBpKSA9PiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaSA9PT0gY3VycmVudEZpbGVJbmRleCA/IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uc3RhdGUuc2VsZWN0ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZGV0ZWN0aW9uLmlkXTogZS50YXJnZXQuY2hlY2tlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSA6IHN0YXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFdlaWdodDogJzYwMCcsIGZvbnRTaXplOiAndmFyKC0tZm9udC1zaXplLXNtKScgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ZGV0ZWN0aW9uLmtpbmR9OiB7ZGV0ZWN0aW9uLnByZXZpZXcgfHwgJ04vQSd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250U2l6ZTogJ3ZhcigtLWZvbnQtc2l6ZS14cyknLCBjb2xvcjogJ3ZhcigtLXRleHQtc2Vjb25kYXJ5KScgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb25maWRlbmNlOiB7TWF0aC5yb3VuZChkZXRlY3Rpb24uY29uZmlkZW5jZSAqIDEwMCl9JVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y3VycmVudEZpbGVTdGF0ZS5hY3Rpb25zW2RldGVjdGlvbi5pZF0/LnN0eWxlIHx8ICdCT1gnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRGaWxlU3RhdGVzKHByZXYgPT4gcHJldi5tYXAoKHN0YXRlLCBpKSA9PiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkgPT09IGN1cnJlbnRGaWxlSW5kZXggPyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uc3RhdGUuYWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZGV0ZWN0aW9uLmlkXToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uc3RhdGUuYWN0aW9uc1tkZXRlY3Rpb24uaWRdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IGUudGFyZ2V0LnZhbHVlIGFzIFJlZGFjdGlvblN0eWxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IDogc3RhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1zZWxlY3RcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBtaW5XaWR0aDogJzEyMHB4JyB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiQk9YXCI+QmxhY2sgQm94PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJCTFVSXCI+Qmx1cjwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUElYRUxBVEVcIj5QaXhlbGF0ZTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTEFCRUxcIj5MYWJlbDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1mb290ZXJcIiBzdHlsZT17eyBtYXJnaW5Ub3A6ICd2YXIoLS1zcGFjZS14bCknIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlU2FuaXRpemUoY3VycmVudEZpbGVJbmRleCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1sZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2N1cnJlbnRGaWxlU3RhdGUucHJvY2Vzc2luZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjdXJyZW50RmlsZVN0YXRlLnByb2Nlc3NpbmcgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvYWRpbmctc3Bpbm5lclwiIHN0eWxlPXt7IHdpZHRoOiAnMXJlbScsIGhlaWdodDogJzFyZW0nIH19PjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQcm9jZXNzaW5nLi4uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD7wn5SSIFNhbml0aXplIERvY3VtZW50PC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtjdXJyZW50RmlsZVN0YXRlLm91dHB1dFVyaSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlRG93bmxvYWQoY3VycmVudEZpbGVJbmRleCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLXNlY29uZGFyeSBidG4tbGdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIPCfk6UgRG93bmxvYWQgQ2xlYW4gRmlsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBQcmV2aWV3IG9mIHNhbml0aXplZCBmaWxlICovfVxuICAgICAgICAgICAgICAgICAgICAgICAge2N1cnJlbnRGaWxlU3RhdGUucHJldmlld1VyaSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAndmFyKC0tc3BhY2UteGwpJywgcGFkZGluZzogJ3ZhcigtLXNwYWNlLWxnKScsIGJhY2tncm91bmQ6ICd2YXIoLS1iZy1zZWNvbmRhcnkpJywgYm9yZGVyUmFkaXVzOiAndmFyKC0tcmFkaXVzLW1kKScsIGJvcmRlcjogJzFweCBzb2xpZCB2YXIoLS1ib3JkZXItbGlnaHQpJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAndmFyKC0tc3BhY2UtbWQpJywgZm9udFNpemU6ICd2YXIoLS1mb250LXNpemUtbGcpJywgY29sb3I6ICd2YXIoLS1jb2xvci1wcmltYXJ5KScgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICDwn5SSIFNhbml0aXplZCBQcmV2aWV3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgcGFkZGluZzogJ3ZhcigtLXNwYWNlLW1kKScsIGJhY2tncm91bmQ6ICd2YXIoLS1iZy1wcmltYXJ5KScsIGJvcmRlclJhZGl1czogJ3ZhcigtLXJhZGl1cy1tZCknLCBib3JkZXI6ICcxcHggc29saWQgdmFyKC0tYm9yZGVyLWxpZ2h0KScgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y3VycmVudEZpbGVTdGF0ZS5maWxlLnR5cGUuc3RhcnRzV2l0aCgnaW1hZ2UvJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9e2N1cnJlbnRGaWxlU3RhdGUucHJldmlld1VyaX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ9XCJTYW5pdGl6ZWQgcHJldmlld1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heFdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhIZWlnaHQ6ICc0MDBweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICd2YXIoLS1yYWRpdXMtc20pJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveFNoYWRvdzogJ3ZhcigtLXNoYWRvdy1tZCknXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgdGV4dEFsaWduOiAnY2VudGVyJywgcGFkZGluZzogJ3ZhcigtLXNwYWNlLXhsKScsIGNvbG9yOiAndmFyKC0tdGV4dC1zZWNvbmRhcnkpJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGZvbnRTaXplOiAndmFyKC0tZm9udC1zaXplLTN4bCknLCBtYXJnaW5Cb3R0b206ICd2YXIoLS1zcGFjZS1tZCknIH19PvCfk4Q8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5QREYgc2FuaXRpemVkIHN1Y2Nlc3NmdWxseTwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT17eyBmb250U2l6ZTogJ3ZhcigtLWZvbnQtc2l6ZS1zbSknIH19PkNsaWNrIGRvd25sb2FkIHRvIHNhdmUgdGhlIGNsZWFuIGZpbGU8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWxlcnQgYWxlcnQtc3VjY2Vzc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5ObyBzZW5zaXRpdmUgaW5mb3JtYXRpb24gZGV0ZWN0ZWQhPC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPXt7IG1hcmdpbjogJzAnLCBtYXJnaW5Ub3A6ICd2YXIoLS1zcGFjZS14cyknIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoaXMgZG9jdW1lbnQgYXBwZWFycyB0byBiZSBjbGVhbiBhbmQgc2FmZSB0byBzaGFyZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuXG4gICAgICAgIHsvKiBFbmhhbmNlZCBQcmVzZXQgTWFuYWdlbWVudCBNb2RhbCAqL31cbiAgICAgICAgPFByZXNldE1hbmFnZXJcbiAgICAgICAgICBpc09wZW49e3Nob3dQcmVzZXRFZGl0b3IgJiYgcHJvVW5sb2NrZWR9XG4gICAgICAgICAgb25DbG9zZT17KCkgPT4gc2V0U2hvd1ByZXNldEVkaXRvcihmYWxzZSl9XG4gICAgICAgICAgY3VycmVudFByZXNldElkPXtwcmVzZXRJZH1cbiAgICAgICAgICBvblByZXNldFNlbGVjdD17KGlkKSA9PiB7XG4gICAgICAgICAgICBzZXRQcmVzZXRJZChpZCk7XG4gICAgICAgICAgICBsb2FkUHJlc2V0cygpOyAvLyBSZWZyZXNoIHByZXNldHMgbGlzdCBpbiBjYXNlIG5ldyBvbmVzIHdlcmUgY3JlYXRlZFxuICAgICAgICAgICAgc2V0U2hvd1ByZXNldEVkaXRvcihmYWxzZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiYW5hbHl6ZURvY3VtZW50IiwiYXBwbHlSZWRhY3Rpb25zIiwic3RhcnRTZXNzaW9uIiwiZW5kU2Vzc2lvbiIsInN0YXJ0RmlsZVByb2Nlc3NpbmciLCJyZWNvcmRBbmFseXNpc1Jlc3VsdHMiLCJyZWNvcmRSZWRhY3Rpb25SZXN1bHRzIiwiUHJlc2V0TWFuYWdlciIsImpzeCIsIl9qc3giLCJqc3hzIiwiX2pzeHMiLCJGcmFnbWVudCIsIl9GcmFnbWVudCIsIkNsZWFuU2hhcmVQcm8iLCJfcyIsImZpbGVzIiwic2V0RmlsZXMiLCJmaWxlU3RhdGVzIiwic2V0RmlsZVN0YXRlcyIsImN1cnJlbnRGaWxlSW5kZXgiLCJzZXRDdXJyZW50RmlsZUluZGV4IiwicHJlc2V0cyIsInNldFByZXNldHMiLCJwcmVzZXRJZCIsInNldFByZXNldElkIiwibG9hZGluZyIsInNldExvYWRpbmciLCJwcm9VbmxvY2tlZCIsInNldFByb1VubG9ja2VkIiwic2hvd1ByZXNldEVkaXRvciIsInNldFNob3dQcmVzZXRFZGl0b3IiLCJzaG93SGlzdG9yeURhc2hib2FyZCIsInNldFNob3dIaXN0b3J5RGFzaGJvYXJkIiwiY3VycmVudFNlc3Npb25JZCIsInNldEN1cnJlbnRTZXNzaW9uSWQiLCJmaWxlUHJvY2Vzc2luZ1JlY29yZHMiLCJzZXRGaWxlUHJvY2Vzc2luZ1JlY29yZHMiLCJNYXAiLCJsb2FkUHJlc2V0cyIsInRoZW4iLCJsaXN0UHJlc2V0cyIsInBzIiwibGVuZ3RoIiwiaWQiLCJwcm9jZXNzRmlsZXMiLCJuZXdTdGF0ZXMiLCJjdXJyZW50UHJlc2V0IiwiZmluZCIsInAiLCJzZXNzaW9uSWQiLCJ0b3RhbEZpbGVzIiwicHJlc2V0TmFtZSIsIm5hbWUiLCJhbmFseXplT3B0aW9ucyIsInByb2Nlc3NpbmdSZWNvcmRzIiwiaSIsImZpbGUiLCJzdGFydFRpbWUiLCJEYXRlIiwibm93IiwicmVjb3JkSWQiLCJmaWxlTmFtZSIsImZpbGVTaXplIiwic2l6ZSIsImZpbGVUeXBlIiwidHlwZSIsInNldCIsInJlc3VsdCIsImFuYWx5c2lzVGltZSIsImRldGVjdGlvbnMiLCJkZXRlY3Rpb25UaW1lIiwic2VsZWN0ZWQiLCJhY3Rpb25zIiwiZm9yRWFjaCIsImRldCIsInN0eWxlIiwicHVzaCIsInBhZ2VzIiwicGFnZUltYWdlcyIsImN1cnJlbnRQYWdlIiwicHJvY2Vzc2luZyIsImVycm9yIiwiY29uc29sZSIsIkVycm9yIiwibWVzc2FnZSIsImhhbmRsZUZpbGVDaGFuZ2UiLCJlIiwic2VsZWN0ZWRGaWxlcyIsIkFycmF5IiwiZnJvbSIsInRhcmdldCIsImhhbmRsZURyb3AiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImRyb3BwZWRGaWxlcyIsImRhdGFUcmFuc2ZlciIsImhhbmRsZURyYWdPdmVyIiwiaGFuZGxlRHJhZ0xlYXZlIiwiaGFuZGxlU2FuaXRpemUiLCJmaWxlSW5kZXgiLCJmaWxlU3RhdGUiLCJwcmV2IiwibWFwIiwic3RhdGUiLCJyZWRhY3Rpb25TdGFydFRpbWUiLCJnZXQiLCJyZWRhY3Rpb25BY3Rpb25zIiwiZmlsdGVyIiwiZGV0ZWN0aW9uSWQiLCJsYWJlbFRleHQiLCJvdXRwdXQiLCJyZXNwb25zZSIsImZldGNoIiwiZmlsZVVyaSIsImJsb2IiLCJ1cmwiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZWRhY3Rpb25UaW1lIiwiYXBwbGllZFJlZGFjdGlvbnMiLCJvdXRwdXRTaXplIiwib3V0cHV0VXJpIiwicHJldmlld1VyaSIsImFsZXJ0IiwiaGFuZGxlRG93bmxvYWQiLCJsaW5rIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsImRvd25sb2FkIiwiY2xpY2siLCJoYW5kbGVCdWxrU2FuaXRpemUiLCJmaWxlc1RvUHJvY2VzcyIsImluZGV4Iiwic2hvdWxkUHJvY2VzcyIsInNvbWUiLCJwcm9jZXNzSW5kZXgiLCJtYXhDb25jdXJyZW5jeSIsImJhdGNoIiwic2xpY2UiLCJwcm9taXNlcyIsInMiLCJQcm9taXNlIiwiYWxsIiwiaGFuZGxlQnVsa0Rvd25sb2FkIiwicHJvY2Vzc2VkRmlsZXMiLCJzZXRUaW1lb3V0IiwiY3VycmVudEZpbGVTdGF0ZSIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJnYXAiLCJmbGV4RGlyZWN0aW9uIiwidmFsdWUiLCJvbkNoYW5nZSIsIm1pbldpZHRoIiwiZG9tYWluIiwiZGVzY3JpcHRpb24iLCJmb250U2l6ZSIsImNvbG9yIiwibWF4V2lkdGgiLCJsaW5lSGVpZ2h0Iiwib25DbGljayIsIm1hcmdpbkJvdHRvbSIsIm9uRHJvcCIsIm9uRHJhZ092ZXIiLCJvbkRyYWdMZWF2ZSIsImdldEVsZW1lbnRCeUlkIiwiYWNjZXB0IiwibXVsdGlwbGUiLCJtYXJnaW5Ub3AiLCJwYWRkaW5nIiwiYm9yZGVyIiwiYm9yZGVyUmFkaXVzIiwiYmFja2dyb3VuZCIsIm1hcmdpbiIsImZvbnRXZWlnaHQiLCJkaXNhYmxlZCIsImV2ZXJ5Iiwid2lkdGgiLCJjdXJzb3IiLCJ0cmFuc2l0aW9uIiwiZmxleCIsImRldGVjdGlvbiIsImp1c3RpZnlDb250ZW50IiwiY2hlY2tlZCIsImtpbmQiLCJwcmV2aWV3IiwiTWF0aCIsInJvdW5kIiwiY29uZmlkZW5jZSIsImhlaWdodCIsInN0YXJ0c1dpdGgiLCJzcmMiLCJhbHQiLCJtYXhIZWlnaHQiLCJib3hTaGFkb3ciLCJ0ZXh0QWxpZ24iLCJpc09wZW4iLCJvbkNsb3NlIiwiY3VycmVudFByZXNldElkIiwib25QcmVzZXRTZWxlY3QiLCJfYyIsIiRSZWZyZXNoUmVnJCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ })

});