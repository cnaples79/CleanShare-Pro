"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CleanSharePro; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\");\n/* harmony import */ var _src_components_PresetManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components/PresetManager */ \"./src/components/PresetManager.tsx\");\n/* harmony import */ var _src_components_HistoryDashboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/components/HistoryDashboard */ \"./src/components/HistoryDashboard.tsx\");\n/* harmony import */ var _src_hooks_useUndoRedo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/hooks/useUndoRedo */ \"./src/hooks/useUndoRedo.ts\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ \"../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);\nvar _s = $RefreshSig$();\n// CleanShare Pro - Modern UI Implementation\n\n\n\n\n\n\nfunction CleanSharePro() {\n  _s();\n  const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [fileStates, setFileStates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [currentFileIndex, setCurrentFileIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [presets, setPresets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [presetId, setPresetId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [proUnlocked, setProUnlocked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showPresetEditor, setShowPresetEditor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showHistoryDashboard, setShowHistoryDashboard] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [showUndoRedoManager, setShowUndoRedoManager] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [currentSessionId, setCurrentSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [fileProcessingRecords, setFileProcessingRecords] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Map());\n\n  // Undo/Redo system for file states\n  const undoRedoSystem = (0,_src_hooks_useUndoRedo__WEBPACK_IMPORTED_MODULE_3__.useUndoRedo)([], {\n    maxHistorySize: 100\n  });\n\n  // Sync file states with undo/redo system\n  const updateFileStates = (newStates, actionType, description) => {\n    if (actionType && description) {\n      const oldStates = fileStates;\n      undoRedoSystem.execute(actionType, description, () => {\n        setFileStates(oldStates);\n        return oldStates;\n      }, () => {\n        setFileStates(newStates);\n        return newStates;\n      });\n    } else {\n      setFileStates(newStates);\n    }\n  };\n\n  // Load presets on mount and when preset manager updates\n  const loadPresets = () => {\n    // Import listPresets dynamically to avoid SSR issues\n    Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @cleanshare/core-detect */ \"../core-detect/dist/index.js\")).then(({\n      listPresets\n    }) => {\n      const ps = listPresets();\n      setPresets(ps);\n      if (ps.length > 0 && !presetId) {\n        setPresetId(ps[0].id);\n      }\n    });\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    loadPresets();\n  }, []);\n\n  // Keyboard shortcuts\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const handleKeydown = e => {\n      // Only handle shortcuts when not in input fields\n      if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) {\n        return;\n      }\n      const isCtrl = e.ctrlKey || e.metaKey;\n      if (isCtrl && e.key === 'z' && !e.shiftKey) {\n        e.preventDefault();\n        undoRedoSystem.undo();\n      } else if (isCtrl && e.key === 'y' || isCtrl && e.shiftKey && e.key === 'z') {\n        e.preventDefault();\n        undoRedoSystem.redo();\n      } else if (isCtrl && e.key === 'o') {\n        e.preventDefault();\n        document.getElementById('file-input')?.click();\n      } else if (e.key === 'Escape') {\n        // Close any open modals\n        setShowPresetEditor(false);\n        setShowHistoryDashboard(false);\n        setShowUndoRedoManager(false);\n      } else if (e.key === '?') {\n        // Show help overlay\n        // This will be implemented in the next todo item\n        console.log('Help shortcut pressed');\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [undoRedoSystem]);\n\n  // Process files when they change\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (files.length === 0) return;\n    async function processFiles() {\n      setLoading(true);\n      const newStates = [];\n\n      // Start processing session\n      const currentPreset = presets.find(p => p.id === presetId);\n      const sessionId = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.startSession)({\n        totalFiles: files.length,\n        presetId,\n        presetName: currentPreset?.name,\n        analyzeOptions: {\n          presetId\n        }\n      });\n      setCurrentSessionId(sessionId);\n      const processingRecords = new Map();\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const startTime = Date.now();\n\n        // Start tracking this file\n        const recordId = (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.startFileProcessing)({\n          sessionId,\n          fileName: file.name,\n          fileSize: file.size,\n          fileType: file.type\n        });\n        processingRecords.set(i, recordId);\n        try {\n          const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.analyzeDocument)(file, {\n            presetId\n          });\n          const analysisTime = Date.now() - startTime;\n\n          // Record analysis results\n          (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.recordAnalysisResults)(recordId, {\n            detections: result.detections,\n            detectionTime: analysisTime\n          });\n          const selected = {};\n          const actions = {};\n          result.detections.forEach(det => {\n            selected[det.id] = true;\n            actions[det.id] = {\n              style: 'BOX'\n            };\n          });\n          newStates.push({\n            file,\n            detections: result.detections,\n            selected,\n            actions,\n            pages: result.pages || 1,\n            pageImages: [],\n            currentPage: 0,\n            processing: false\n          });\n        } catch (error) {\n          console.error('Failed to process file:', file.name, error);\n\n          // Record analysis error\n          (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.recordAnalysisResults)(recordId, {\n            detections: [],\n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n\n          // Add the file with error state\n          newStates.push({\n            file,\n            detections: [],\n            selected: {},\n            actions: {},\n            pages: 1,\n            pageImages: [],\n            currentPage: 0,\n            processing: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n        }\n      }\n      setFileStates(newStates);\n      setFileProcessingRecords(processingRecords);\n      setLoading(false);\n\n      // End the session\n      (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.endSession)(sessionId, 'completed');\n    }\n    processFiles();\n  }, [files, presetId]);\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files || []);\n    setFiles(selectedFiles);\n    setCurrentFileIndex(0);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    setFiles(droppedFiles);\n    setCurrentFileIndex(0);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleSanitize = async fileIndex => {\n    const fileState = fileStates[fileIndex];\n    if (!fileState) return;\n\n    // Update processing state\n    setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n      ...state,\n      processing: true\n    } : state));\n    const redactionStartTime = Date.now();\n    const recordId = fileProcessingRecords.get(fileIndex);\n    try {\n      // Re-analyze the file to ensure lastResult is set correctly  \n      await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.analyzeDocument)(fileState.file, {\n        presetId\n      });\n      const redactionActions = fileState.detections.filter(det => fileState.selected[det.id]).map(det => ({\n        detectionId: det.id,\n        style: fileState.actions[det.id]?.style || 'BOX',\n        labelText: fileState.actions[det.id]?.labelText\n      }));\n      const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.applyRedactions)(fileState.file, redactionActions, {\n        output: 'image'\n      }, fileState.detections);\n\n      // Convert data URI to blob for download\n      const response = await fetch(result.fileUri);\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      const redactionTime = Date.now() - redactionStartTime;\n\n      // Record redaction results\n      if (recordId) {\n        (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.recordRedactionResults)(recordId, {\n          appliedRedactions: redactionActions,\n          redactionTime,\n          outputSize: blob.size\n        });\n      }\n\n      // Update file state with result\n      setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n        ...state,\n        outputUri: url,\n        previewUri: result.fileUri,\n        processing: false\n      } : state));\n    } catch (error) {\n      console.error('Sanitization failed:', error);\n\n      // Record redaction error\n      if (recordId) {\n        (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.recordRedactionResults)(recordId, {\n          appliedRedactions: [],\n          error: error instanceof Error ? error.message : 'Unknown error'\n        });\n      }\n\n      // Show error to user\n      alert(`Sanitization failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      setFileStates(prev => prev.map((state, i) => i === fileIndex ? {\n        ...state,\n        processing: false\n      } : state));\n    }\n  };\n  const handleDownload = fileIndex => {\n    const fileState = fileStates[fileIndex];\n    if (!fileState?.outputUri) return;\n    const link = document.createElement('a');\n    link.href = fileState.outputUri;\n    link.download = `sanitized_${fileState.file.name}`;\n    link.click();\n  };\n  const handleBulkSanitize = async () => {\n    const filesToProcess = fileStates.map((state, index) => ({\n      state,\n      index\n    })).filter(({\n      state\n    }) => !state.outputUri && !state.error);\n    if (filesToProcess.length === 0) return;\n\n    // Set all eligible files to processing state\n    setFileStates(prev => prev.map((state, index) => {\n      const shouldProcess = filesToProcess.some(({\n        index: processIndex\n      }) => processIndex === index);\n      return shouldProcess ? {\n        ...state,\n        processing: true\n      } : state;\n    }));\n    try {\n      // Process files with limited concurrency\n      const maxConcurrency = 3;\n      for (let i = 0; i < filesToProcess.length; i += maxConcurrency) {\n        const batch = filesToProcess.slice(i, i + maxConcurrency);\n        const promises = batch.map(async ({\n          state,\n          index: fileIndex\n        }) => {\n          try {\n            // Re-analyze the file to ensure lastResult is set correctly  \n            await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.analyzeDocument)(state.file, {\n              presetId\n            });\n            const redactionActions = state.detections.filter(det => state.selected[det.id]).map(det => ({\n              detectionId: det.id,\n              style: state.actions[det.id]?.style || 'BOX',\n              labelText: state.actions[det.id]?.labelText\n            }));\n            const result = await (0,_cleanshare_core_detect__WEBPACK_IMPORTED_MODULE_5__.applyRedactions)(state.file, redactionActions, {\n              output: 'image'\n            }, state.detections);\n\n            // Convert data URI to blob for download\n            const response = await fetch(result.fileUri);\n            const blob = await response.blob();\n            const url = URL.createObjectURL(blob);\n\n            // Update file state with result\n            setFileStates(prev => prev.map((s, i) => i === fileIndex ? {\n              ...s,\n              outputUri: url,\n              previewUri: result.fileUri,\n              processing: false\n            } : s));\n          } catch (error) {\n            console.error(`Sanitization failed for ${state.file.name}:`, error);\n            setFileStates(prev => prev.map((s, i) => i === fileIndex ? {\n              ...s,\n              processing: false,\n              error: error instanceof Error ? error.message : 'Unknown error'\n            } : s));\n          }\n        });\n        await Promise.all(promises);\n      }\n    } catch (error) {\n      console.error('Bulk sanitization failed:', error);\n    }\n  };\n  const handleBulkDownload = () => {\n    const processedFiles = fileStates.filter(state => state.outputUri);\n    if (processedFiles.length === 0) return;\n\n    // Download each file individually\n    processedFiles.forEach((state, index) => {\n      if (state.outputUri) {\n        setTimeout(() => {\n          const link = document.createElement('a');\n          link.href = state.outputUri;\n          link.download = `sanitized_${state.file.name}`;\n          link.click();\n        }, index * 100); // Stagger downloads by 100ms\n      }\n    });\n  };\n\n  const currentFileState = fileStates[currentFileIndex];\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"a\", {\n          href: \"#\",\n          className: \"logo\",\n          children: \"CleanShare Pro\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 'var(--space-md)'\n          },\n          children: [presets.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-xs)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"select\", {\n              value: presetId,\n              onChange: e => setPresetId(e.target.value),\n              className: \"form-select\",\n              style: {\n                minWidth: '180px'\n              },\n              children: presets.map(p => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"option\", {\n                value: p.id,\n                children: [p.name, \" \", p.domain && p.domain !== 'General' ? `(${p.domain})` : '']\n              }, p.id))\n            }), (() => {\n              const currentPreset = presets.find(p => p.id === presetId);\n              return currentPreset?.description ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-xs)',\n                  color: 'var(--text-secondary)',\n                  maxWidth: '200px',\n                  lineHeight: '1.2'\n                },\n                children: currentPreset.description\n              }) : null;\n            })()]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n            onClick: () => setProUnlocked(!proUnlocked),\n            className: `btn ${proUnlocked ? 'btn-secondary' : 'btn-outline'} btn-sm`,\n            children: proUnlocked ? '✓ Pro Unlocked' : '🔓 Unlock Pro'\n          }), proUnlocked && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n              onClick: () => setShowPresetEditor(true),\n              className: \"btn btn-primary btn-sm\",\n              children: \"Manage Presets\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n              onClick: () => setShowHistoryDashboard(true),\n              className: \"btn btn-secondary btn-sm\",\n              children: \"\\uD83D\\uDCCA History\"\n            })]\n          })]\n        })]\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        className: \"card\",\n        style: {\n          marginBottom: 'var(--space-xl)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h2\", {\n            className: \"card-title\",\n            children: \"Upload Files\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n            className: \"card-subtitle\",\n            children: \"Select images or PDF documents to sanitize\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n            className: \"file-upload-zone\",\n            onDrop: handleDrop,\n            onDragOver: handleDragOver,\n            onDragLeave: handleDragLeave,\n            onClick: () => document.getElementById('file-input')?.click(),\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n              className: \"file-upload-icon\",\n              children: \"\\uD83D\\uDCC4\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n              className: \"file-upload-text\",\n              children: \"Drop files here or click to browse\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n              className: \"file-upload-subtext\",\n              children: \"Supports images (JPG, PNG, WebP, HEIC, TIFF), PDFs, and documents (DOCX, XLSX) up to 10MB each\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"input\", {\n              id: \"file-input\",\n              type: \"file\",\n              accept: \"image/*,application/pdf,.webp,.heic,.tiff,.docx,.xlsx\",\n              multiple: true,\n              onChange: handleFileChange,\n              style: {\n                display: 'none'\n              }\n            })]\n          }), loading && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n            className: \"loading-text\",\n            style: {\n              marginTop: 'var(--space-md)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n              className: \"loading-spinner\"\n            }), \"Processing files...\"]\n          })]\n        })]\n      }), fileStates.length > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 'var(--space-xl)'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"sidebar\",\n          style: {\n            minWidth: '250px'\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"h3\", {\n            className: \"sidebar-title\",\n            children: [\"Files (\", fileStates.length, \")\"]\n          }), fileStates.length > 1 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n            style: {\n              padding: 'var(--space-md)',\n              marginBottom: 'var(--space-md)',\n              border: '2px solid var(--color-primary)',\n              borderRadius: 'var(--radius-md)',\n              background: 'var(--bg-secondary)'\n            },\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h4\", {\n              style: {\n                margin: '0 0 var(--space-sm) 0',\n                fontSize: 'var(--font-size-sm)',\n                fontWeight: '600'\n              },\n              children: \"\\uD83D\\uDE80 Bulk Processing\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 'var(--space-xs)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n                onClick: handleBulkSanitize,\n                className: \"btn btn-primary btn-sm\",\n                disabled: fileStates.some(s => s.processing) || fileStates.every(s => s.outputUri),\n                style: {\n                  width: '100%'\n                },\n                children: fileStates.some(s => s.processing) ? 'Processing...' : fileStates.every(s => s.outputUri) ? 'All Complete' : `Sanitize All (${fileStates.filter(s => !s.outputUri && !s.error).length})`\n              }), fileStates.some(s => s.outputUri) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"button\", {\n                onClick: handleBulkDownload,\n                className: \"btn btn-secondary btn-sm\",\n                style: {\n                  width: '100%'\n                },\n                children: [\"\\uD83D\\uDCE6 Download All (\", fileStates.filter(s => s.outputUri).length, \")\"]\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n              style: {\n                marginTop: 'var(--space-xs)',\n                fontSize: 'var(--font-size-xs)',\n                color: 'var(--text-secondary)'\n              },\n              children: \"Concurrent processing with progress tracking\"\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 'var(--space-sm)'\n            },\n            children: fileStates.map((state, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n              onClick: () => setCurrentFileIndex(index),\n              style: {\n                padding: 'var(--space-md)',\n                border: `2px solid ${index === currentFileIndex ? 'var(--color-primary)' : 'var(--border-light)'}`,\n                borderRadius: 'var(--radius-md)',\n                cursor: 'pointer',\n                background: index === currentFileIndex ? 'var(--bg-secondary)' : 'var(--bg-primary)',\n                transition: 'all var(--transition-fast)'\n              },\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                style: {\n                  fontWeight: '600',\n                  fontSize: 'var(--font-size-sm)',\n                  marginBottom: 'var(--space-xs)'\n                },\n                children: state.file.name\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                style: {\n                  fontSize: 'var(--font-size-xs)',\n                  color: state.error ? 'var(--color-error)' : 'var(--text-secondary)'\n                },\n                children: state.error ? `Error: ${state.error}` : `${state.detections.length} detections found`\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                style: {\n                  marginTop: 'var(--space-sm)',\n                  display: 'flex',\n                  gap: 'var(--space-xs)'\n                },\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleSanitize(index);\n                  },\n                  className: \"btn btn-primary btn-sm\",\n                  disabled: state.processing || !!state.error,\n                  style: {\n                    flex: 1\n                  },\n                  children: state.processing ? 'Processing...' : 'Sanitize'\n                }), state.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDownload(index);\n                  },\n                  className: \"btn btn-secondary btn-sm\",\n                  children: \"Download\"\n                })]\n              })]\n            }, index))\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: currentFileState && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h3\", {\n                className: \"card-title\",\n                children: currentFileState.file.name\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n                className: \"card-subtitle\",\n                children: currentFileState.error ? 'Processing failed' : `Found ${currentFileState.detections.length} sensitive items`\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n              className: \"card-body\",\n              children: currentFileState.error ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                className: \"alert alert-error\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"strong\", {\n                    children: \"Processing Error\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"p\", {\n                    style: {\n                      margin: '0',\n                      marginTop: 'var(--space-xs)'\n                    },\n                    children: [\"Failed to analyze this file: \", currentFileState.error]\n                  })]\n                })\n              }) : currentFileState.detections.length > 0 ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h4\", {\n                  style: {\n                    marginBottom: 'var(--space-md)',\n                    fontSize: 'var(--font-size-lg)'\n                  },\n                  children: \"Detected Sensitive Information\"\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 'var(--space-sm)'\n                  },\n                  children: currentFileState.detections.map(detection => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                    style: {\n                      padding: 'var(--space-md)',\n                      border: '1px solid var(--border-light)',\n                      borderRadius: 'var(--radius-md)',\n                      background: 'var(--bg-secondary)',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    },\n                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 'var(--space-md)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"input\", {\n                        type: \"checkbox\",\n                        checked: currentFileState.selected[detection.id] || false,\n                        onChange: e => {\n                          const newStates = fileStates.map((state, i) => i === currentFileIndex ? {\n                            ...state,\n                            selected: {\n                              ...state.selected,\n                              [detection.id]: e.target.checked\n                            }\n                          } : state);\n                          updateFileStates(newStates, 'toggle-detection', `${e.target.checked ? 'Selected' : 'Deselected'} ${detection.kind} detection`);\n                        }\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                          style: {\n                            fontWeight: '600',\n                            fontSize: 'var(--font-size-sm)'\n                          },\n                          children: [detection.kind, \": \", detection.preview || 'N/A']\n                        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                          style: {\n                            fontSize: 'var(--font-size-xs)',\n                            color: 'var(--text-secondary)'\n                          },\n                          children: [\"Confidence: \", Math.round(detection.confidence * 100), \"%\"]\n                        })]\n                      })]\n                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"select\", {\n                      value: currentFileState.actions[detection.id]?.style || 'BOX',\n                      onChange: e => {\n                        const newStates = fileStates.map((state, i) => i === currentFileIndex ? {\n                          ...state,\n                          actions: {\n                            ...state.actions,\n                            [detection.id]: {\n                              ...state.actions[detection.id],\n                              style: e.target.value\n                            }\n                          }\n                        } : state);\n                        updateFileStates(newStates, 'change-redaction-style', `Changed ${detection.kind} redaction style to ${e.target.value}`);\n                      },\n                      className: \"form-select\",\n                      style: {\n                        minWidth: '120px'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"option\", {\n                        value: \"BOX\",\n                        children: \"Black Box\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"option\", {\n                        value: \"BLUR\",\n                        children: \"Blur\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"option\", {\n                        value: \"PIXELATE\",\n                        children: \"Pixelate\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"option\", {\n                        value: \"LABEL\",\n                        children: \"Label\"\n                      })]\n                    })]\n                  }, detection.id))\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                  className: \"card-footer\",\n                  style: {\n                    marginTop: 'var(--space-xl)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n                    onClick: () => handleSanitize(currentFileIndex),\n                    className: \"btn btn-primary btn-lg\",\n                    disabled: currentFileState.processing,\n                    children: currentFileState.processing ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                        className: \"loading-spinner\",\n                        style: {\n                          width: '1rem',\n                          height: '1rem'\n                        }\n                      }), \"Processing...\"]\n                    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {\n                      children: \"\\uD83D\\uDD12 Sanitize Document\"\n                    })\n                  }), currentFileState.outputUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n                    onClick: () => handleDownload(currentFileIndex),\n                    className: \"btn btn-secondary btn-lg\",\n                    children: \"\\uD83D\\uDCE5 Download Clean File\"\n                  })]\n                }), currentFileState.previewUri && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                  style: {\n                    marginTop: 'var(--space-xl)',\n                    padding: 'var(--space-lg)',\n                    background: 'var(--bg-secondary)',\n                    borderRadius: 'var(--radius-md)',\n                    border: '1px solid var(--border-light)'\n                  },\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h4\", {\n                    style: {\n                      marginBottom: 'var(--space-md)',\n                      fontSize: 'var(--font-size-lg)',\n                      color: 'var(--color-primary)'\n                    },\n                    children: \"\\uD83D\\uDD12 Sanitized Preview\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      padding: 'var(--space-md)',\n                      background: 'var(--bg-primary)',\n                      borderRadius: 'var(--radius-md)',\n                      border: '1px solid var(--border-light)'\n                    },\n                    children: currentFileState.file.type.startsWith('image/') ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"img\", {\n                      src: currentFileState.previewUri,\n                      alt: \"Sanitized preview\",\n                      style: {\n                        maxWidth: '100%',\n                        maxHeight: '400px',\n                        borderRadius: 'var(--radius-sm)',\n                        boxShadow: 'var(--shadow-md)'\n                      }\n                    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                      style: {\n                        textAlign: 'center',\n                        padding: 'var(--space-xl)',\n                        color: 'var(--text-secondary)'\n                      },\n                      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                        style: {\n                          fontSize: 'var(--font-size-3xl)',\n                          marginBottom: 'var(--space-md)'\n                        },\n                        children: \"\\uD83D\\uDCC4\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n                        children: \"PDF sanitized successfully\"\n                      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n                        style: {\n                          fontSize: 'var(--font-size-sm)'\n                        },\n                        children: \"Click download to save the clean file\"\n                      })]\n                    })\n                  })]\n                })]\n              }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                className: \"alert alert-success\",\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"strong\", {\n                    children: \"No sensitive information detected!\"\n                  }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n                    style: {\n                      margin: '0',\n                      marginTop: 'var(--space-xs)'\n                    },\n                    children: \"This document appears to be clean and safe to share.\"\n                  })]\n                })\n              })\n            })]\n          })\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_src_components_PresetManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        isOpen: showPresetEditor && proUnlocked,\n        onClose: () => setShowPresetEditor(false),\n        currentPresetId: presetId,\n        onPresetSelect: id => {\n          setPresetId(id);\n          loadPresets(); // Refresh presets list in case new ones were created\n          setShowPresetEditor(false);\n        }\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_src_components_HistoryDashboard__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        isOpen: showHistoryDashboard && proUnlocked,\n        onClose: () => setShowHistoryDashboard(false)\n      })]\n    })]\n  });\n}\n_s(CleanSharePro, \"AnqHBwttq4OPole+LWYkxTGU9I4=\", false, function () {\n  return [_src_hooks_useUndoRedo__WEBPACK_IMPORTED_MODULE_3__.useUndoRedo];\n});\n_c = CleanSharePro;\nvar _c;\n$RefreshReg$(_c, \"CleanSharePro\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ })

});